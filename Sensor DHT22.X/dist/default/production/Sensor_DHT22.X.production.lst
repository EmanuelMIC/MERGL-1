

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Fri Apr 01 07:54:17 2022

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
      + 0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC16F887 Definitions
    37                           ; 
    38  0004                     fsr0 equ 04h
    39  0004                     indf equ 00h
    40  0000                     indf0 equ 00h
    41  0000                     pc equ 02h
    42  0002                     pcl equ 02h
    43  0002                     pclath equ 0Ah
    44  000A                     status equ 03h
    45  0003                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc	macro
    64                           	bcf	3,0
    65                           	endm
    66  0000                     clrz	macro
    67                           	bcf	3,2
    68                           	endm
    69  0000                     setc	macro
    70                           	bsf	3,0
    71                           	endm
    72  0000                     setz	macro
    73                           	bsf	3,2
    74                           	endm
    75  0000                     skipc	macro
    76                           	btfss	3,0
    77                           	endm
    78  0000                     skipz	macro
    79                           	btfss	3,2
    80                           	endm
    81  0000                     skipnc	macro
    82                           	btfsc	3,0
    83                           	endm
    84  0000                     skipnz	macro
    85                           	btfsc	3,2
    86                           	endm
    87  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    88                           INDF equ 00h ;# 
    89  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    90                           TMR0 equ 01h ;# 
    91  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    92                           PCL equ 02h ;# 
    93  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    94                           STATUS equ 03h ;# 
    95  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    96                           FSR equ 04h ;# 
    97  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    98                           PORTA equ 05h ;# 
    99  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   100                           PORTB equ 06h ;# 
   101  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   102                           PORTC equ 07h ;# 
   103  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   104                           PORTD equ 08h ;# 
   105  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   106                           PORTE equ 09h ;# 
   107  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   108                           PCLATH equ 0Ah ;# 
   109  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   110                           INTCON equ 0Bh ;# 
   111  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   112                           PIR1 equ 0Ch ;# 
   113  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   114                           PIR2 equ 0Dh ;# 
   115  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   116                           TMR1 equ 0Eh ;# 
   117  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   118                           TMR1L equ 0Eh ;# 
   119  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   120                           TMR1H equ 0Fh ;# 
   121  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   122                           T1CON equ 010h ;# 
   123  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   124                           TMR2 equ 011h ;# 
   125  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   126                           T2CON equ 012h ;# 
   127  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   128                           SSPBUF equ 013h ;# 
   129  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   130                           SSPCON equ 014h ;# 
   131  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   132                           CCPR1 equ 015h ;# 
   133  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   134                           CCPR1L equ 015h ;# 
   135  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   136                           CCPR1H equ 016h ;# 
   137  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   138                           CCP1CON equ 017h ;# 
   139  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   140                           RCSTA equ 018h ;# 
   141  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   142                           TXREG equ 019h ;# 
   143  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   144                           RCREG equ 01Ah ;# 
   145  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   146                           CCPR2 equ 01Bh ;# 
   147  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   148                           CCPR2L equ 01Bh ;# 
   149  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   150                           CCPR2H equ 01Ch ;# 
   151  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   152                           CCP2CON equ 01Dh ;# 
   153  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   154                           ADRESH equ 01Eh ;# 
   155  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   156                           ADCON0 equ 01Fh ;# 
   157  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   158                           OPTION_REG equ 081h ;# 
   159  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   160                           TRISA equ 085h ;# 
   161  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   162                           TRISB equ 086h ;# 
   163  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   164                           TRISC equ 087h ;# 
   165  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   166                           TRISD equ 088h ;# 
   167  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   168                           TRISE equ 089h ;# 
   169  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   170                           PIE1 equ 08Ch ;# 
   171  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   172                           PIE2 equ 08Dh ;# 
   173  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   174                           PCON equ 08Eh ;# 
   175  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   176                           OSCCON equ 08Fh ;# 
   177  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   178                           OSCTUNE equ 090h ;# 
   179  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   180                           SSPCON2 equ 091h ;# 
   181  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   182                           PR2 equ 092h ;# 
   183  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   184                           SSPADD equ 093h ;# 
   185  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   186                           SSPMSK equ 093h ;# 
   187  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   188                           MSK equ 093h ;# 
   189  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   190                           SSPSTAT equ 094h ;# 
   191  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   192                           WPUB equ 095h ;# 
   193  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   194                           IOCB equ 096h ;# 
   195  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   196                           VRCON equ 097h ;# 
   197  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   198                           TXSTA equ 098h ;# 
   199  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   200                           SPBRG equ 099h ;# 
   201  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   202                           SPBRGH equ 09Ah ;# 
   203  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   204                           PWM1CON equ 09Bh ;# 
   205  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   206                           ECCPAS equ 09Ch ;# 
   207  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   208                           PSTRCON equ 09Dh ;# 
   209  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   210                           ADRESL equ 09Eh ;# 
   211  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   212                           ADCON1 equ 09Fh ;# 
   213  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   214                           WDTCON equ 0105h ;# 
   215  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   216                           CM1CON0 equ 0107h ;# 
   217  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   218                           CM2CON0 equ 0108h ;# 
   219  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   220                           CM2CON1 equ 0109h ;# 
   221  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   222                           EEDATA equ 010Ch ;# 
   223  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   224                           EEDAT equ 010Ch ;# 
   225  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   226                           EEADR equ 010Dh ;# 
   227  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   228                           EEDATH equ 010Eh ;# 
   229  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   230                           EEADRH equ 010Fh ;# 
   231  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   232                           SRCON equ 0185h ;# 
   233  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   234                           BAUDCTL equ 0187h ;# 
   235  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   236                           ANSEL equ 0188h ;# 
   237  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   238                           ANSELH equ 0189h ;# 
   239  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   240                           EECON1 equ 018Ch ;# 
   241  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   242                           EECON2 equ 018Dh ;# 
   243  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   244                           INDF equ 00h ;# 
   245  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   246                           TMR0 equ 01h ;# 
   247  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   248                           PCL equ 02h ;# 
   249  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   250                           STATUS equ 03h ;# 
   251  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   252                           FSR equ 04h ;# 
   253  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   254                           PORTA equ 05h ;# 
   255  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   256                           PORTB equ 06h ;# 
   257  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   258                           PORTC equ 07h ;# 
   259  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   260                           PORTD equ 08h ;# 
   261  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   262                           PORTE equ 09h ;# 
   263  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   264                           PCLATH equ 0Ah ;# 
   265  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   266                           INTCON equ 0Bh ;# 
   267  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   268                           PIR1 equ 0Ch ;# 
   269  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   270                           PIR2 equ 0Dh ;# 
   271  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   272                           TMR1 equ 0Eh ;# 
   273  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   274                           TMR1L equ 0Eh ;# 
   275  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   276                           TMR1H equ 0Fh ;# 
   277  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   278                           T1CON equ 010h ;# 
   279  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   280                           TMR2 equ 011h ;# 
   281  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   282                           T2CON equ 012h ;# 
   283  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   284                           SSPBUF equ 013h ;# 
   285  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   286                           SSPCON equ 014h ;# 
   287  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   288                           CCPR1 equ 015h ;# 
   289  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   290                           CCPR1L equ 015h ;# 
   291  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   292                           CCPR1H equ 016h ;# 
   293  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   294                           CCP1CON equ 017h ;# 
   295  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   296                           RCSTA equ 018h ;# 
   297  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   298                           TXREG equ 019h ;# 
   299  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   300                           RCREG equ 01Ah ;# 
   301  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   302                           CCPR2 equ 01Bh ;# 
   303  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   304                           CCPR2L equ 01Bh ;# 
   305  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   306                           CCPR2H equ 01Ch ;# 
   307  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   308                           CCP2CON equ 01Dh ;# 
   309  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   310                           ADRESH equ 01Eh ;# 
   311  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   312                           ADCON0 equ 01Fh ;# 
   313  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   314                           OPTION_REG equ 081h ;# 
   315  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   316                           TRISA equ 085h ;# 
   317  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   318                           TRISB equ 086h ;# 
   319  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   320                           TRISC equ 087h ;# 
   321  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   322                           TRISD equ 088h ;# 
   323  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   324                           TRISE equ 089h ;# 
   325  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   326                           PIE1 equ 08Ch ;# 
   327  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   328                           PIE2 equ 08Dh ;# 
   329  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   330                           PCON equ 08Eh ;# 
   331  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   332                           OSCCON equ 08Fh ;# 
   333  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   334                           OSCTUNE equ 090h ;# 
   335  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   336                           SSPCON2 equ 091h ;# 
   337  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   338                           PR2 equ 092h ;# 
   339  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   340                           SSPADD equ 093h ;# 
   341  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   342                           SSPMSK equ 093h ;# 
   343  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   344                           MSK equ 093h ;# 
   345  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   346                           SSPSTAT equ 094h ;# 
   347  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   348                           WPUB equ 095h ;# 
   349  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   350                           IOCB equ 096h ;# 
   351  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   352                           VRCON equ 097h ;# 
   353  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   354                           TXSTA equ 098h ;# 
   355  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   356                           SPBRG equ 099h ;# 
   357  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   358                           SPBRGH equ 09Ah ;# 
   359  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   360                           PWM1CON equ 09Bh ;# 
   361  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   362                           ECCPAS equ 09Ch ;# 
   363  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   364                           PSTRCON equ 09Dh ;# 
   365  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   366                           ADRESL equ 09Eh ;# 
   367  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   368                           ADCON1 equ 09Fh ;# 
   369  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   370                           WDTCON equ 0105h ;# 
   371  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   372                           CM1CON0 equ 0107h ;# 
   373  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   374                           CM2CON0 equ 0108h ;# 
   375  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   376                           CM2CON1 equ 0109h ;# 
   377  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   378                           EEDATA equ 010Ch ;# 
   379  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   380                           EEDAT equ 010Ch ;# 
   381  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   382                           EEADR equ 010Dh ;# 
   383  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   384                           EEDATH equ 010Eh ;# 
   385  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   386                           EEADRH equ 010Fh ;# 
   387  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   388                           SRCON equ 0185h ;# 
   389  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   390                           BAUDCTL equ 0187h ;# 
   391  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   392                           ANSEL equ 0188h ;# 
   393  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   394                           ANSELH equ 0189h ;# 
   395  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   396                           EECON1 equ 018Ch ;# 
   397  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   398                           EECON2 equ 018Dh ;# 
   399  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   400                           INDF equ 00h ;# 
   401  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   402                           TMR0 equ 01h ;# 
   403  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   404                           PCL equ 02h ;# 
   405  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   406                           STATUS equ 03h ;# 
   407  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   408                           FSR equ 04h ;# 
   409  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   410                           PORTA equ 05h ;# 
   411  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   412                           PORTB equ 06h ;# 
   413  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   414                           PORTC equ 07h ;# 
   415  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   416                           PORTD equ 08h ;# 
   417  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   418                           PORTE equ 09h ;# 
   419  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   420                           PCLATH equ 0Ah ;# 
   421  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   422                           INTCON equ 0Bh ;# 
   423  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   424                           PIR1 equ 0Ch ;# 
   425  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   426                           PIR2 equ 0Dh ;# 
   427  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   428                           TMR1 equ 0Eh ;# 
   429  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   430                           TMR1L equ 0Eh ;# 
   431  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   432                           TMR1H equ 0Fh ;# 
   433  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   434                           T1CON equ 010h ;# 
   435  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   436                           TMR2 equ 011h ;# 
   437  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   438                           T2CON equ 012h ;# 
   439  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   440                           SSPBUF equ 013h ;# 
   441  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   442                           SSPCON equ 014h ;# 
   443  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   444                           CCPR1 equ 015h ;# 
   445  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   446                           CCPR1L equ 015h ;# 
   447  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   448                           CCPR1H equ 016h ;# 
   449  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   450                           CCP1CON equ 017h ;# 
   451  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   452                           RCSTA equ 018h ;# 
   453  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   454                           TXREG equ 019h ;# 
   455  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   456                           RCREG equ 01Ah ;# 
   457  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   458                           CCPR2 equ 01Bh ;# 
   459  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   460                           CCPR2L equ 01Bh ;# 
   461  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   462                           CCPR2H equ 01Ch ;# 
   463  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   464                           CCP2CON equ 01Dh ;# 
   465  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   466                           ADRESH equ 01Eh ;# 
   467  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   468                           ADCON0 equ 01Fh ;# 
   469  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   470                           OPTION_REG equ 081h ;# 
   471  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   472                           TRISA equ 085h ;# 
   473  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   474                           TRISB equ 086h ;# 
   475  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   476                           TRISC equ 087h ;# 
   477  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   478                           TRISD equ 088h ;# 
   479  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   480                           TRISE equ 089h ;# 
   481  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   482                           PIE1 equ 08Ch ;# 
   483  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   484                           PIE2 equ 08Dh ;# 
   485  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   486                           PCON equ 08Eh ;# 
   487  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   488                           OSCCON equ 08Fh ;# 
   489  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   490                           OSCTUNE equ 090h ;# 
   491  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   492                           SSPCON2 equ 091h ;# 
   493  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   494                           PR2 equ 092h ;# 
   495  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   496                           SSPADD equ 093h ;# 
   497  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   498                           SSPMSK equ 093h ;# 
   499  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   500                           MSK equ 093h ;# 
   501  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   502                           SSPSTAT equ 094h ;# 
   503  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   504                           WPUB equ 095h ;# 
   505  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   506                           IOCB equ 096h ;# 
   507  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   508                           VRCON equ 097h ;# 
   509  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   510                           TXSTA equ 098h ;# 
   511  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   512                           SPBRG equ 099h ;# 
   513  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   514                           SPBRGH equ 09Ah ;# 
   515  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   516                           PWM1CON equ 09Bh ;# 
   517  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   518                           ECCPAS equ 09Ch ;# 
   519  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   520                           PSTRCON equ 09Dh ;# 
   521  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   522                           ADRESL equ 09Eh ;# 
   523  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   524                           ADCON1 equ 09Fh ;# 
   525  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   526                           WDTCON equ 0105h ;# 
   527  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   528                           CM1CON0 equ 0107h ;# 
   529  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   530                           CM2CON0 equ 0108h ;# 
   531  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   532                           CM2CON1 equ 0109h ;# 
   533  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   534                           EEDATA equ 010Ch ;# 
   535  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   536                           EEDAT equ 010Ch ;# 
   537  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   538                           EEADR equ 010Dh ;# 
   539  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   540                           EEDATH equ 010Eh ;# 
   541  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   542                           EEADRH equ 010Fh ;# 
   543  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   544                           SRCON equ 0185h ;# 
   545  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   546                           BAUDCTL equ 0187h ;# 
   547  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   548                           ANSEL equ 0188h ;# 
   549  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   550                           ANSELH equ 0189h ;# 
   551  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   552                           EECON1 equ 018Ch ;# 
   553  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   554                           EECON2 equ 018Dh ;# 
   555  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   556                           INDF equ 00h ;# 
   557  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   558                           TMR0 equ 01h ;# 
   559  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   560                           PCL equ 02h ;# 
   561  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   562                           STATUS equ 03h ;# 
   563  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   564                           FSR equ 04h ;# 
   565  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   566                           PORTA equ 05h ;# 
   567  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   568                           PORTB equ 06h ;# 
   569  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   570                           PORTC equ 07h ;# 
   571  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   572                           PORTD equ 08h ;# 
   573  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   574                           PORTE equ 09h ;# 
   575  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   576                           PCLATH equ 0Ah ;# 
   577  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   578                           INTCON equ 0Bh ;# 
   579  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   580                           PIR1 equ 0Ch ;# 
   581  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   582                           PIR2 equ 0Dh ;# 
   583  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   584                           TMR1 equ 0Eh ;# 
   585  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   586                           TMR1L equ 0Eh ;# 
   587  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   588                           TMR1H equ 0Fh ;# 
   589  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   590                           T1CON equ 010h ;# 
   591  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   592                           TMR2 equ 011h ;# 
   593  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   594                           T2CON equ 012h ;# 
   595  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   596                           SSPBUF equ 013h ;# 
   597  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   598                           SSPCON equ 014h ;# 
   599  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   600                           CCPR1 equ 015h ;# 
   601  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   602                           CCPR1L equ 015h ;# 
   603  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   604                           CCPR1H equ 016h ;# 
   605  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   606                           CCP1CON equ 017h ;# 
   607  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   608                           RCSTA equ 018h ;# 
   609  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   610                           TXREG equ 019h ;# 
   611  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   612                           RCREG equ 01Ah ;# 
   613  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   614                           CCPR2 equ 01Bh ;# 
   615  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   616                           CCPR2L equ 01Bh ;# 
   617  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   618                           CCPR2H equ 01Ch ;# 
   619  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   620                           CCP2CON equ 01Dh ;# 
   621  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   622                           ADRESH equ 01Eh ;# 
   623  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   624                           ADCON0 equ 01Fh ;# 
   625  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   626                           OPTION_REG equ 081h ;# 
   627  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   628                           TRISA equ 085h ;# 
   629  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   630                           TRISB equ 086h ;# 
   631  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   632                           TRISC equ 087h ;# 
   633  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   634                           TRISD equ 088h ;# 
   635  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   636                           TRISE equ 089h ;# 
   637  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   638                           PIE1 equ 08Ch ;# 
   639  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   640                           PIE2 equ 08Dh ;# 
   641  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   642                           PCON equ 08Eh ;# 
   643  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   644                           OSCCON equ 08Fh ;# 
   645  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   646                           OSCTUNE equ 090h ;# 
   647  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   648                           SSPCON2 equ 091h ;# 
   649  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   650                           PR2 equ 092h ;# 
   651  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   652                           SSPADD equ 093h ;# 
   653  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   654                           SSPMSK equ 093h ;# 
   655  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   656                           MSK equ 093h ;# 
   657  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   658                           SSPSTAT equ 094h ;# 
   659  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   660                           WPUB equ 095h ;# 
   661  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   662                           IOCB equ 096h ;# 
   663  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   664                           VRCON equ 097h ;# 
   665  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   666                           TXSTA equ 098h ;# 
   667  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   668                           SPBRG equ 099h ;# 
   669  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   670                           SPBRGH equ 09Ah ;# 
   671  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   672                           PWM1CON equ 09Bh ;# 
   673  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   674                           ECCPAS equ 09Ch ;# 
   675  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   676                           PSTRCON equ 09Dh ;# 
   677  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   678                           ADRESL equ 09Eh ;# 
   679  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   680                           ADCON1 equ 09Fh ;# 
   681  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   682                           WDTCON equ 0105h ;# 
   683  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   684                           CM1CON0 equ 0107h ;# 
   685  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   686                           CM2CON0 equ 0108h ;# 
   687  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   688                           CM2CON1 equ 0109h ;# 
   689  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   690                           EEDATA equ 010Ch ;# 
   691  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   692                           EEDAT equ 010Ch ;# 
   693  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   694                           EEADR equ 010Dh ;# 
   695  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   696                           EEDATH equ 010Eh ;# 
   697  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   698                           EEADRH equ 010Fh ;# 
   699  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   700                           SRCON equ 0185h ;# 
   701  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   702                           BAUDCTL equ 0187h ;# 
   703  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   704                           ANSEL equ 0188h ;# 
   705  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   706                           ANSELH equ 0189h ;# 
   707  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   708                           EECON1 equ 018Ch ;# 
   709  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   710                           EECON2 equ 018Dh ;# 
   711  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   712                           INDF equ 00h ;# 
   713  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   714                           TMR0 equ 01h ;# 
   715  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   716                           PCL equ 02h ;# 
   717  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   718                           STATUS equ 03h ;# 
   719  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   720                           FSR equ 04h ;# 
   721  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   722                           PORTA equ 05h ;# 
   723  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   724                           PORTB equ 06h ;# 
   725  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   726                           PORTC equ 07h ;# 
   727  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   728                           PORTD equ 08h ;# 
   729  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   730                           PORTE equ 09h ;# 
   731  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   732                           PCLATH equ 0Ah ;# 
   733  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   734                           INTCON equ 0Bh ;# 
   735  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   736                           PIR1 equ 0Ch ;# 
   737  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   738                           PIR2 equ 0Dh ;# 
   739  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   740                           TMR1 equ 0Eh ;# 
   741  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   742                           TMR1L equ 0Eh ;# 
   743  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   744                           TMR1H equ 0Fh ;# 
   745  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   746                           T1CON equ 010h ;# 
   747  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   748                           TMR2 equ 011h ;# 
   749  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   750                           T2CON equ 012h ;# 
   751  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   752                           SSPBUF equ 013h ;# 
   753  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   754                           SSPCON equ 014h ;# 
   755  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   756                           CCPR1 equ 015h ;# 
   757  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   758                           CCPR1L equ 015h ;# 
   759  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   760                           CCPR1H equ 016h ;# 
   761  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   762                           CCP1CON equ 017h ;# 
   763  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   764                           RCSTA equ 018h ;# 
   765  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   766                           TXREG equ 019h ;# 
   767  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   768                           RCREG equ 01Ah ;# 
   769  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   770                           CCPR2 equ 01Bh ;# 
   771  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   772                           CCPR2L equ 01Bh ;# 
   773  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   774                           CCPR2H equ 01Ch ;# 
   775  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   776                           CCP2CON equ 01Dh ;# 
   777  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   778                           ADRESH equ 01Eh ;# 
   779  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   780                           ADCON0 equ 01Fh ;# 
   781  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   782                           OPTION_REG equ 081h ;# 
   783  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   784                           TRISA equ 085h ;# 
   785  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   786                           TRISB equ 086h ;# 
   787  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   788                           TRISC equ 087h ;# 
   789  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   790                           TRISD equ 088h ;# 
   791  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   792                           TRISE equ 089h ;# 
   793  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   794                           PIE1 equ 08Ch ;# 
   795  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   796                           PIE2 equ 08Dh ;# 
   797  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   798                           PCON equ 08Eh ;# 
   799  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   800                           OSCCON equ 08Fh ;# 
   801  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   802                           OSCTUNE equ 090h ;# 
   803  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   804                           SSPCON2 equ 091h ;# 
   805  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   806                           PR2 equ 092h ;# 
   807  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   808                           SSPADD equ 093h ;# 
   809  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   810                           SSPMSK equ 093h ;# 
   811  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   812                           MSK equ 093h ;# 
   813  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   814                           SSPSTAT equ 094h ;# 
   815  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   816                           WPUB equ 095h ;# 
   817  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   818                           IOCB equ 096h ;# 
   819  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   820                           VRCON equ 097h ;# 
   821  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   822                           TXSTA equ 098h ;# 
   823  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   824                           SPBRG equ 099h ;# 
   825  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   826                           SPBRGH equ 09Ah ;# 
   827  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   828                           PWM1CON equ 09Bh ;# 
   829  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   830                           ECCPAS equ 09Ch ;# 
   831  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   832                           PSTRCON equ 09Dh ;# 
   833  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   834                           ADRESL equ 09Eh ;# 
   835  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   836                           ADCON1 equ 09Fh ;# 
   837  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   838                           WDTCON equ 0105h ;# 
   839  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   840                           CM1CON0 equ 0107h ;# 
   841  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   842                           CM2CON0 equ 0108h ;# 
   843  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   844                           CM2CON1 equ 0109h ;# 
   845  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   846                           EEDATA equ 010Ch ;# 
   847  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   848                           EEDAT equ 010Ch ;# 
   849  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   850                           EEADR equ 010Dh ;# 
   851  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   852                           EEDATH equ 010Eh ;# 
   853  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   854                           EEADRH equ 010Fh ;# 
   855  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   856                           SRCON equ 0185h ;# 
   857  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   858                           BAUDCTL equ 0187h ;# 
   859  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   860                           ANSEL equ 0188h ;# 
   861  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   862                           ANSELH equ 0189h ;# 
   863  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   864                           EECON1 equ 018Ch ;# 
   865  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   866                           EECON2 equ 018Dh ;# 
   867  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   868                           INDF equ 00h ;# 
   869  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   870                           TMR0 equ 01h ;# 
   871  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   872                           PCL equ 02h ;# 
   873  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   874                           STATUS equ 03h ;# 
   875  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   876                           FSR equ 04h ;# 
   877  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   878                           PORTA equ 05h ;# 
   879  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   880                           PORTB equ 06h ;# 
   881  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   882                           PORTC equ 07h ;# 
   883  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   884                           PORTD equ 08h ;# 
   885  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   886                           PORTE equ 09h ;# 
   887  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   888                           PCLATH equ 0Ah ;# 
   889  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   890                           INTCON equ 0Bh ;# 
   891  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   892                           PIR1 equ 0Ch ;# 
   893  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   894                           PIR2 equ 0Dh ;# 
   895  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   896                           TMR1 equ 0Eh ;# 
   897  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   898                           TMR1L equ 0Eh ;# 
   899  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   900                           TMR1H equ 0Fh ;# 
   901  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   902                           T1CON equ 010h ;# 
   903  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   904                           TMR2 equ 011h ;# 
   905  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   906                           T2CON equ 012h ;# 
   907  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   908                           SSPBUF equ 013h ;# 
   909  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   910                           SSPCON equ 014h ;# 
   911  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   912                           CCPR1 equ 015h ;# 
   913  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   914                           CCPR1L equ 015h ;# 
   915  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   916                           CCPR1H equ 016h ;# 
   917  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   918                           CCP1CON equ 017h ;# 
   919  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   920                           RCSTA equ 018h ;# 
   921  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   922                           TXREG equ 019h ;# 
   923  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   924                           RCREG equ 01Ah ;# 
   925  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   926                           CCPR2 equ 01Bh ;# 
   927  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   928                           CCPR2L equ 01Bh ;# 
   929  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   930                           CCPR2H equ 01Ch ;# 
   931  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   932                           CCP2CON equ 01Dh ;# 
   933  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   934                           ADRESH equ 01Eh ;# 
   935  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   936                           ADCON0 equ 01Fh ;# 
   937  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   938                           OPTION_REG equ 081h ;# 
   939  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   940                           TRISA equ 085h ;# 
   941  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   942                           TRISB equ 086h ;# 
   943  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   944                           TRISC equ 087h ;# 
   945  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   946                           TRISD equ 088h ;# 
   947  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   948                           TRISE equ 089h ;# 
   949  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   950                           PIE1 equ 08Ch ;# 
   951  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   952                           PIE2 equ 08Dh ;# 
   953  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   954                           PCON equ 08Eh ;# 
   955  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   956                           OSCCON equ 08Fh ;# 
   957  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   958                           OSCTUNE equ 090h ;# 
   959  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   960                           SSPCON2 equ 091h ;# 
   961  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   962                           PR2 equ 092h ;# 
   963  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   964                           SSPADD equ 093h ;# 
   965  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   966                           SSPMSK equ 093h ;# 
   967  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   968                           MSK equ 093h ;# 
   969  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   970                           SSPSTAT equ 094h ;# 
   971  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   972                           WPUB equ 095h ;# 
   973  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   974                           IOCB equ 096h ;# 
   975  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   976                           VRCON equ 097h ;# 
   977  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   978                           TXSTA equ 098h ;# 
   979  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   980                           SPBRG equ 099h ;# 
   981  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   982                           SPBRGH equ 09Ah ;# 
   983  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   984                           PWM1CON equ 09Bh ;# 
   985  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   986                           ECCPAS equ 09Ch ;# 
   987  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   988                           PSTRCON equ 09Dh ;# 
   989  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   990                           ADRESL equ 09Eh ;# 
   991  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   992                           ADCON1 equ 09Fh ;# 
   993  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   994                           WDTCON equ 0105h ;# 
   995  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   996                           CM1CON0 equ 0107h ;# 
   997  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   998                           CM2CON0 equ 0108h ;# 
   999  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1000                           CM2CON1 equ 0109h ;# 
  1001  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1002                           EEDATA equ 010Ch ;# 
  1003  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1004                           EEDAT equ 010Ch ;# 
  1005  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1006                           EEADR equ 010Dh ;# 
  1007  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1008                           EEDATH equ 010Eh ;# 
  1009  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1010                           EEADRH equ 010Fh ;# 
  1011  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1012                           SRCON equ 0185h ;# 
  1013  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1014                           BAUDCTL equ 0187h ;# 
  1015  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1016                           ANSEL equ 0188h ;# 
  1017  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1018                           ANSELH equ 0189h ;# 
  1019  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1020                           EECON1 equ 018Ch ;# 
  1021  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1022                           EECON2 equ 018Dh ;# 
  1023  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1024                           INDF equ 00h ;# 
  1025  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1026                           TMR0 equ 01h ;# 
  1027  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1028                           PCL equ 02h ;# 
  1029  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1030                           STATUS equ 03h ;# 
  1031  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1032                           FSR equ 04h ;# 
  1033  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1034                           PORTA equ 05h ;# 
  1035  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1036                           PORTB equ 06h ;# 
  1037  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1038                           PORTC equ 07h ;# 
  1039  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1040                           PORTD equ 08h ;# 
  1041  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1042                           PORTE equ 09h ;# 
  1043  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1044                           PCLATH equ 0Ah ;# 
  1045  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1046                           INTCON equ 0Bh ;# 
  1047  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1048                           PIR1 equ 0Ch ;# 
  1049  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1050                           PIR2 equ 0Dh ;# 
  1051  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1052                           TMR1 equ 0Eh ;# 
  1053  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1054                           TMR1L equ 0Eh ;# 
  1055  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1056                           TMR1H equ 0Fh ;# 
  1057  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1058                           T1CON equ 010h ;# 
  1059  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1060                           TMR2 equ 011h ;# 
  1061  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1062                           T2CON equ 012h ;# 
  1063  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1064                           SSPBUF equ 013h ;# 
  1065  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1066                           SSPCON equ 014h ;# 
  1067  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1068                           CCPR1 equ 015h ;# 
  1069  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1070                           CCPR1L equ 015h ;# 
  1071  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1072                           CCPR1H equ 016h ;# 
  1073  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1074                           CCP1CON equ 017h ;# 
  1075  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1076                           RCSTA equ 018h ;# 
  1077  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1078                           TXREG equ 019h ;# 
  1079  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1080                           RCREG equ 01Ah ;# 
  1081  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1082                           CCPR2 equ 01Bh ;# 
  1083  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1084                           CCPR2L equ 01Bh ;# 
  1085  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1086                           CCPR2H equ 01Ch ;# 
  1087  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1088                           CCP2CON equ 01Dh ;# 
  1089  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1090                           ADRESH equ 01Eh ;# 
  1091  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1092                           ADCON0 equ 01Fh ;# 
  1093  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1094                           OPTION_REG equ 081h ;# 
  1095  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1096                           TRISA equ 085h ;# 
  1097  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1098                           TRISB equ 086h ;# 
  1099  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1100                           TRISC equ 087h ;# 
  1101  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1102                           TRISD equ 088h ;# 
  1103  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1104                           TRISE equ 089h ;# 
  1105  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1106                           PIE1 equ 08Ch ;# 
  1107  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1108                           PIE2 equ 08Dh ;# 
  1109  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1110                           PCON equ 08Eh ;# 
  1111  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1112                           OSCCON equ 08Fh ;# 
  1113  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1114                           OSCTUNE equ 090h ;# 
  1115  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1116                           SSPCON2 equ 091h ;# 
  1117  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1118                           PR2 equ 092h ;# 
  1119  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1120                           SSPADD equ 093h ;# 
  1121  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1122                           SSPMSK equ 093h ;# 
  1123  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1124                           MSK equ 093h ;# 
  1125  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1126                           SSPSTAT equ 094h ;# 
  1127  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1128                           WPUB equ 095h ;# 
  1129  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1130                           IOCB equ 096h ;# 
  1131  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1132                           VRCON equ 097h ;# 
  1133  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1134                           TXSTA equ 098h ;# 
  1135  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1136                           SPBRG equ 099h ;# 
  1137  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1138                           SPBRGH equ 09Ah ;# 
  1139  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1140                           PWM1CON equ 09Bh ;# 
  1141  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1142                           ECCPAS equ 09Ch ;# 
  1143  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1144                           PSTRCON equ 09Dh ;# 
  1145  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1146                           ADRESL equ 09Eh ;# 
  1147  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1148                           ADCON1 equ 09Fh ;# 
  1149  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1150                           WDTCON equ 0105h ;# 
  1151  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1152                           CM1CON0 equ 0107h ;# 
  1153  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1154                           CM2CON0 equ 0108h ;# 
  1155  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1156                           CM2CON1 equ 0109h ;# 
  1157  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1158                           EEDATA equ 010Ch ;# 
  1159  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1160                           EEDAT equ 010Ch ;# 
  1161  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1162                           EEADR equ 010Dh ;# 
  1163  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1164                           EEDATH equ 010Eh ;# 
  1165  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1166                           EEADRH equ 010Fh ;# 
  1167  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1168                           SRCON equ 0185h ;# 
  1169  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1170                           BAUDCTL equ 0187h ;# 
  1171  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1172                           ANSEL equ 0188h ;# 
  1173  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1174                           ANSELH equ 0189h ;# 
  1175  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1176                           EECON1 equ 018Ch ;# 
  1177  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1178                           EECON2 equ 018Dh ;# 
  1179  018D                     	FNCALL	_main,_delay
  1180                           	FNCALL	_main,_dht_read
  1181                           	FNCALL	_main,_edit
  1182                           	FNCALL	_main,_lcd_init
  1183                           	FNCALL	_main,_lcd_num
  1184                           	FNCALL	_main,_lcd_print
  1185                           	FNCALL	_main,_teclado
  1186                           	FNCALL	_main,_teclado_init
  1187                           	FNCALL	_lcd_print,_lcd_dataReg
  1188                           	FNCALL	_lcd_print,_lcd_lincol
  1189                           	FNCALL	_lcd_num,___awdiv
  1190                           	FNCALL	_lcd_num,___awmod
  1191                           	FNCALL	_lcd_num,_lcd_dataReg
  1192                           	FNCALL	_lcd_num,_lcd_lincol
  1193                           	FNCALL	_lcd_lincol,_lcd_instReg
  1194                           	FNCALL	_lcd_init,_delay
  1195                           	FNCALL	_lcd_init,_lcd_instReg
  1196                           	FNCALL	_edit,___awdiv
  1197                           	FNCALL	_edit,___wmul
  1198                           	FNROOT	_main
  1199                           	global	_tecladoMatriz
  1200                           psect	strings,class=STRING,delta=2,noexec
  1201                           global __pstrings
  1202                           __pstrings:
  1203  0003                     stringtab:
  1204  0003                     	global    __stringtab
  1205                           __stringtab:
  1206  0003                     ;	String table - string pointers are 1 byte each
  1207                           stringcode:stringdir:
  1208  0003                     movlw high(stringdir)
      + 0003                     stringdir:	
  1209  0003  3000               movwf pclath
  1210  0004  008A               movf fsr,w
  1211  0005  0804               incf fsr
  1212  0006  0A84               	addwf pc
  1213  0007  0782               	global __stringbase
  1214                           __stringbase:
  1215  0008                     	retlw	0
  1216  0008  3400               psect	strings
  1217                           	global    __end_of__stringtab
  1218                           __end_of__stringtab:
  1219  0009                     	file	"teclado.c"
  1220                           	line	18
  1221                           _tecladoMatriz:
  1222  0009                     	retlw	031h
  1223  0009  3431               	retlw	032h
  1224  000A  3432               	retlw	033h
  1225  000B  3433               	retlw	041h
  1226  000C  3441               	retlw	034h
  1227  000D  3434               	retlw	035h
  1228  000E  3435               	retlw	036h
  1229  000F  3436               	retlw	042h
  1230  0010  3442               	retlw	037h
  1231  0011  3437               	retlw	038h
  1232  0012  3438               	retlw	039h
  1233  0013  3439               	retlw	043h
  1234  0014  3443               	retlw	02Ah
  1235  0015  342A               	retlw	030h
  1236  0016  3430               	retlw	023h
  1237  0017  3423               	retlw	02Dh
  1238  0018  342D               	global __end_of_tecladoMatriz
  1239                           __end_of_tecladoMatriz:
  1240  0019                     	global	main@string
  1241                           psect	strings
  1242                           	file	"main.c"
  1243                           	line	13
  1244                           main@string:
  1245  0019                     	retlw	054h
  1246  0019  3454               	retlw	065h
  1247  001A  3465               	retlw	063h
  1248  001B  3463               	retlw	06Ch
  1249  001C  346C               	retlw	061h
  1250  001D  3461               	retlw	03Ah
  1251  001E  343A               	retlw	020h
  1252  001F  3420               	retlw	020h
  1253  0020  3420               	retlw	020h
  1254  0021  3420               	retlw	020h
  1255  0022  3420               	retlw	020h
  1256  0023  3420               	retlw	020h
  1257  0024  3420               	retlw	020h
  1258  0025  3420               	retlw	low(0)
  1259  0026  3400               	global __end_ofmain@string
  1260                           __end_ofmain@string:
  1261  0027                     	global	_tecladoMatriz
  1262                           	global	main@string
  1263                           	global	_teclaAnt
  1264                           	global	_sensor
  1265                           	global	_PORTB
  1266                           _PORTB	set	0x6
  1267  0006                     	global	_PORTD
  1268                           _PORTD	set	0x8
  1269  0008                     	global	_PORTDbits
  1270                           _PORTDbits	set	0x8
  1271  0008                     	global	_WPUB
  1272                           _WPUB	set	0x95
  1273  0095                     	global	_OPTION_REGbits
  1274                           _OPTION_REGbits	set	0x81
  1275  0081                     	global	_TRISB
  1276                           _TRISB	set	0x86
  1277  0086                     	global	_TRISDbits
  1278                           _TRISDbits	set	0x88
  1279  0088                     	global	_ANSELH
  1280                           _ANSELH	set	0x189
  1281  0189                     	
  1282                           STR_2:	
  1283  0027                     	retlw	115	;'s'
  1284  0027  3473               	retlw	101	;'e'
  1285  0028  3465               	retlw	110	;'n'
  1286  0029  346E               	retlw	104	;'h'
  1287  002A  3468               	retlw	97	;'a'
  1288  002B  3461               	retlw	32	;' '
  1289  002C  3420               	retlw	99	;'c'
  1290  002D  3463               	retlw	111	;'o'
  1291  002E  346F               	retlw	114	;'r'
  1292  002F  3472               	retlw	114	;'r'
  1293  0030  3472               	retlw	101	;'e'
  1294  0031  3465               	retlw	116	;'t'
  1295  0032  3474               	retlw	97	;'a'
  1296  0033  3461               	retlw	32	;' '
  1297  0034  3420               	retlw	0
  1298  0035  3400               psect	strings
  1299                           	
  1300                           STR_1:	
  1301  0036                     	retlw	116	;'t'
  1302  0036  3474               	retlw	101	;'e'
  1303  0037  3465               	retlw	115	;'s'
  1304  0038  3473               	retlw	116	;'t'
  1305  0039  3474               	retlw	0
  1306  003A  3400               psect	strings
  1307                           ; #config settings
  1308                           global __CFG_FOSC$HS
  1309                           __CFG_FOSC$HS equ 0x0
  1310  0000                     global __CFG_WDTE$OFF
  1311                           __CFG_WDTE$OFF equ 0x0
  1312  0000                     global __CFG_PWRTE$OFF
  1313                           __CFG_PWRTE$OFF equ 0x0
  1314  0000                     global __CFG_MCLRE$OFF
  1315                           __CFG_MCLRE$OFF equ 0x0
  1316  0000                     global __CFG_CP$OFF
  1317                           __CFG_CP$OFF equ 0x0
  1318  0000                     global __CFG_CPD$OFF
  1319                           __CFG_CPD$OFF equ 0x0
  1320  0000                     global __CFG_BOREN$OFF
  1321                           __CFG_BOREN$OFF equ 0x0
  1322  0000                     global __CFG_IESO$OFF
  1323                           __CFG_IESO$OFF equ 0x0
  1324  0000                     global __CFG_FCMEN$OFF
  1325                           __CFG_FCMEN$OFF equ 0x0
  1326  0000                     global __CFG_LVP$OFF
  1327                           __CFG_LVP$OFF equ 0x0
  1328  0000                     global __CFG_BOR4V$BOR40V
  1329                           __CFG_BOR4V$BOR40V equ 0x0
  1330  0000                     global __CFG_WRT$OFF
  1331                           __CFG_WRT$OFF equ 0x0
  1332  0000                     	file	"C:\Users\20184318\AppData\Local\Temp\sdh4."
  1333                           	line	#
  1334                           psect cinit,class=CODE,delta=2
  1335                           global start_initialization
  1336                           start_initialization:
  1337  07F3                     
  1338                           global __initialization
  1339                           __initialization:
  1340  07F3                     psect	bssBANK0,class=BANK0,space=1,noexec
  1341                           global __pbssBANK0
  1342                           __pbssBANK0:
  1343  0034                     _num_original:
  1344  0034                            ds      2
  1345  0034                     
  1346                           _teclaAnt:
  1347  0036                            ds      1
  1348  0036                     
  1349                           _sensor:
  1350  0037                            ds      4
  1351  0037                     
  1352                           	file	"C:\Users\20184318\AppData\Local\Temp\sdh4."
  1353                           	line	#
  1354                           ; Clear objects allocated to BANK0
  1355                           psect cinit,class=CODE,delta=2,merge=1
  1356                           	bcf	status, 5	;RP0=0, select bank0
  1357  07F3  1283               	bcf	status, 6	;RP1=0, select bank0
  1358  07F4  1303               	clrf	((__pbssBANK0)+0)&07Fh
  1359  07F5  01B4               	clrf	((__pbssBANK0)+1)&07Fh
  1360  07F6  01B5               	clrf	((__pbssBANK0)+2)&07Fh
  1361  07F7  01B6               	clrf	((__pbssBANK0)+3)&07Fh
  1362  07F8  01B7               	clrf	((__pbssBANK0)+4)&07Fh
  1363  07F9  01B8               	clrf	((__pbssBANK0)+5)&07Fh
  1364  07FA  01B9               	clrf	((__pbssBANK0)+6)&07Fh
  1365  07FB  01BA               psect cinit,class=CODE,delta=2,merge=1
  1366                           global end_of_initialization,__end_of__initialization
  1367                           
  1368                           ;End of C runtime variable initialization code
  1369                           
  1370                           end_of_initialization:
  1371  07FC                     __end_of__initialization:
  1372  07FC                     clrf status
  1373  07FC  0183               ljmp _main	;jump to C main() function
  1374  07FD  120A  118A  2F09   psect	cstackCOMMON,class=COMMON,space=1,noexec
  1375                           global __pcstackCOMMON
  1376                           __pcstackCOMMON:
  1377  0070                     ?_teclado_init:	; 1 bytes @ 0x0
  1378  0070                     ??_teclado_init:	; 1 bytes @ 0x0
  1379  0070                     ?_teclado:	; 1 bytes @ 0x0
  1380  0070                     ??_teclado:	; 1 bytes @ 0x0
  1381  0070                     ?_dht_read:	; 1 bytes @ 0x0
  1382  0070                     ??_dht_read:	; 1 bytes @ 0x0
  1383  0070                     ?_delay:	; 1 bytes @ 0x0
  1384  0070                     ?_lcd_instReg:	; 1 bytes @ 0x0
  1385  0070                     ??_lcd_instReg:	; 1 bytes @ 0x0
  1386  0070                     ?_lcd_dataReg:	; 1 bytes @ 0x0
  1387  0070                     ??_lcd_dataReg:	; 1 bytes @ 0x0
  1388  0070                     ?_lcd_init:	; 1 bytes @ 0x0
  1389  0070                     ?_main:	; 1 bytes @ 0x0
  1390  0070                     	global	?___wmul
  1391                           ?___wmul:	; 2 bytes @ 0x0
  1392  0070                     	global	?___awdiv
  1393                           ?___awdiv:	; 2 bytes @ 0x0
  1394  0070                     	global	?___awmod
  1395                           ?___awmod:	; 2 bytes @ 0x0
  1396  0070                     	global	delay@t
  1397                           delay@t:	; 2 bytes @ 0x0
  1398  0070                     	global	___wmul@multiplier
  1399                           ___wmul@multiplier:	; 2 bytes @ 0x0
  1400  0070                     	global	___awdiv@divisor
  1401                           ___awdiv@divisor:	; 2 bytes @ 0x0
  1402  0070                     	global	___awmod@divisor
  1403                           ___awmod@divisor:	; 2 bytes @ 0x0
  1404  0070                     	ds	1
  1405  0070                     	global	dht_read@ptr
  1406                           dht_read@ptr:	; 1 bytes @ 0x1
  1407  0071                     	ds	1
  1408  0071                     ??_delay:	; 1 bytes @ 0x2
  1409  0072                     	global	lcd_instReg@i
  1410                           lcd_instReg@i:	; 1 bytes @ 0x2
  1411  0072                     	global	lcd_dataReg@d
  1412                           lcd_dataReg@d:	; 1 bytes @ 0x2
  1413  0072                     	global	___wmul@multiplicand
  1414                           ___wmul@multiplicand:	; 2 bytes @ 0x2
  1415  0072                     	global	___awdiv@dividend
  1416                           ___awdiv@dividend:	; 2 bytes @ 0x2
  1417  0072                     	global	___awmod@dividend
  1418                           ___awmod@dividend:	; 2 bytes @ 0x2
  1419  0072                     	ds	1
  1420  0072                     ?_lcd_lincol:	; 1 bytes @ 0x3
  1421  0073                     ??_lcd_init:	; 1 bytes @ 0x3
  1422  0073                     	global	lcd_lincol@col
  1423                           lcd_lincol@col:	; 1 bytes @ 0x3
  1424  0073                     	ds	1
  1425  0073                     ??_lcd_lincol:	; 1 bytes @ 0x4
  1426  0074                     ??___wmul:	; 1 bytes @ 0x4
  1427  0074                     ??___awdiv:	; 1 bytes @ 0x4
  1428  0074                     ??___awmod:	; 1 bytes @ 0x4
  1429  0074                     	global	___wmul@product
  1430                           ___wmul@product:	; 2 bytes @ 0x4
  1431  0074                     	ds	1
  1432  0074                     	global	lcd_lincol@lin
  1433                           lcd_lincol@lin:	; 1 bytes @ 0x5
  1434  0075                     	global	___awdiv@counter
  1435                           ___awdiv@counter:	; 1 bytes @ 0x5
  1436  0075                     	global	___awmod@counter
  1437                           ___awmod@counter:	; 1 bytes @ 0x5
  1438  0075                     	ds	1
  1439  0075                     ?_lcd_print:	; 1 bytes @ 0x6
  1440  0076                     	global	lcd_print@col
  1441                           lcd_print@col:	; 1 bytes @ 0x6
  1442  0076                     	global	___awdiv@sign
  1443                           ___awdiv@sign:	; 1 bytes @ 0x6
  1444  0076                     	global	___awmod@sign
  1445                           ___awmod@sign:	; 1 bytes @ 0x6
  1446  0076                     	ds	1
  1447  0076                     	global	lcd_print@str
  1448                           lcd_print@str:	; 1 bytes @ 0x7
  1449  0077                     	global	teclado@aux
  1450                           teclado@aux:	; 1 bytes @ 0x7
  1451  0077                     	global	___awdiv@quotient
  1452                           ___awdiv@quotient:	; 2 bytes @ 0x7
  1453  0077                     	ds	1
  1454  0077                     ??_lcd_print:	; 1 bytes @ 0x8
  1455  0078                     	global	teclado@l
  1456                           teclado@l:	; 1 bytes @ 0x8
  1457  0078                     	ds	1
  1458  0078                     ??_edit:	; 1 bytes @ 0x9
  1459  0079                     ?_lcd_num:	; 1 bytes @ 0x9
  1460  0079                     	global	lcd_print@pos
  1461                           lcd_print@pos:	; 1 bytes @ 0x9
  1462  0079                     	global	lcd_num@col
  1463                           lcd_num@col:	; 1 bytes @ 0x9
  1464  0079                     	global	teclado@c
  1465                           teclado@c:	; 1 bytes @ 0x9
  1466  0079                     	ds	1
  1467  0079                     	global	lcd_print@lin
  1468                           lcd_print@lin:	; 1 bytes @ 0xA
  1469  007A                     	global	lcd_num@num
  1470                           lcd_num@num:	; 2 bytes @ 0xA
  1471  007A                     	ds	2
  1472  007A                     	global	lcd_num@tam
  1473                           lcd_num@tam:	; 1 bytes @ 0xC
  1474  007C                     	ds	1
  1475  007C                     psect	cstackBANK0,class=BANK0,space=1,noexec
  1476                           global __pcstackBANK0
  1477                           __pcstackBANK0:
  1478  0020                     ?_edit:	; 1 bytes @ 0x0
  1479  0020                     ??_lcd_num:	; 1 bytes @ 0x0
  1480  0020                     	global	edit@tecla
  1481                           edit@tecla:	; 1 bytes @ 0x0
  1482  0020                     	ds	1
  1483  0020                     	global	edit@delete
  1484                           edit@delete:	; 1 bytes @ 0x1
  1485  0021                     	ds	1
  1486  0021                     	global	edit@menos
  1487                           edit@menos:	; 1 bytes @ 0x2
  1488  0022                     	ds	1
  1489  0022                     	global	lcd_num@lin
  1490                           lcd_num@lin:	; 1 bytes @ 0x3
  1491  0023                     	global	edit@min
  1492                           edit@min:	; 2 bytes @ 0x3
  1493  0023                     	ds	1
  1494  0023                     	global	lcd_num@size
  1495                           lcd_num@size:	; 1 bytes @ 0x4
  1496  0024                     	ds	1
  1497  0024                     	global	lcd_num@sinal
  1498                           lcd_num@sinal:	; 1 bytes @ 0x5
  1499  0025                     	global	edit@max
  1500                           edit@max:	; 2 bytes @ 0x5
  1501  0025                     	ds	1
  1502  0025                     	global	lcd_num@div
  1503                           lcd_num@div:	; 2 bytes @ 0x6
  1504  0026                     	ds	1
  1505  0026                     	global	edit@aux
  1506                           edit@aux:	; 4 bytes @ 0x7
  1507  0027                     	ds	4
  1508  0027                     	global	edit@ptr_edit
  1509                           edit@ptr_edit:	; 1 bytes @ 0xB
  1510  002B                     	ds	1
  1511  002B                     ??_main:	; 1 bytes @ 0xC
  1512  002C                     	ds	4
  1513  002C                     	global	main@tecla
  1514                           main@tecla:	; 1 bytes @ 0x10
  1515  0030                     	ds	1
  1516  0030                     	global	main@fases
  1517                           main@fases:	; 1 bytes @ 0x11
  1518  0031                     	ds	1
  1519  0031                     	global	main@num
  1520                           main@num:	; 2 bytes @ 0x12
  1521  0032                     	ds	2
  1522  0032                     ;!
  1523                           ;!Data Sizes:
  1524                           ;!    Strings     20
  1525                           ;!    Constant    30
  1526                           ;!    Data        0
  1527                           ;!    BSS         7
  1528                           ;!    Persistent  0
  1529                           ;!    Stack       0
  1530                           ;!
  1531                           ;!Auto Spaces:
  1532                           ;!    Space          Size  Autos    Used
  1533                           ;!    COMMON           14     13      13
  1534                           ;!    BANK0            80     20      27
  1535                           ;!    BANK1            80      0       0
  1536                           ;!    BANK3            96      0       0
  1537                           ;!    BANK2            96      0       0
  1538                           
  1539                           ;!
  1540                           ;!Pointer List with Targets:
  1541                           ;!
  1542                           ;!    dht_read@ptr	PTR struct . size(1) Largest target is 4
  1543                           ;!		 -> sensor(BANK0[4]), 
  1544                           ;!
  1545                           ;!    lcd_print@str	PTR const unsigned char  size(1) Largest target is 15
  1546                           ;!		 -> STR_2(CODE[15]), STR_1(CODE[5]), main@string(CODE[14]), 
  1547                           ;!
  1548                           ;!    edit@ptr_edit	PTR int  size(1) Largest target is 2
  1549                           ;!		 -> main@num(BANK0[2]), 
  1550                           ;!
  1551                           
  1552                           
  1553                           ;!
  1554                           ;!Critical Paths under _main in COMMON
  1555                           ;!
  1556                           ;!    _main->_edit
  1557                           ;!    _main->_lcd_num
  1558                           ;!    _lcd_print->_lcd_lincol
  1559                           ;!    _lcd_num->___awdiv
  1560                           ;!    _lcd_lincol->_lcd_instReg
  1561                           ;!    _lcd_init->_delay
  1562                           ;!    _lcd_init->_lcd_instReg
  1563                           ;!    _edit->___awdiv
  1564                           ;!
  1565                           ;!Critical Paths under _main in BANK0
  1566                           ;!
  1567                           ;!    _main->_edit
  1568                           ;!
  1569                           ;!Critical Paths under _main in BANK1
  1570                           ;!
  1571                           ;!    None.
  1572                           ;!
  1573                           ;!Critical Paths under _main in BANK3
  1574                           ;!
  1575                           ;!    None.
  1576                           ;!
  1577                           ;!Critical Paths under _main in BANK2
  1578                           ;!
  1579                           ;!    None.
  1580                           
  1581 ;;
  1582 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1583 ;;
  1584                           
  1585                           ;!
  1586                           ;!Call Graph Tables:
  1587                           ;!
  1588                           ;! ---------------------------------------------------------------------------------
  1589                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1590                           ;! ---------------------------------------------------------------------------------
  1591                           ;! (0) _main                                                 8     8      0    7764
  1592                           ;!                                             12 BANK0      8     8      0
  1593                           ;!                              _delay
  1594                           ;!                           _dht_read
  1595                           ;!                               _edit
  1596                           ;!                           _lcd_init
  1597                           ;!                            _lcd_num
  1598                           ;!                          _lcd_print
  1599                           ;!                            _teclado
  1600                           ;!                       _teclado_init
  1601                           ;! ---------------------------------------------------------------------------------
  1602                           ;! (1) _teclado_init                                         0     0      0       0
  1603                           ;! ---------------------------------------------------------------------------------
  1604                           ;! (2) _teclado                                             10    10      0     204
  1605                           ;!                                              0 COMMON    10    10      0
  1606                           ;! ---------------------------------------------------------------------------------
  1607                           ;! (1) _lcd_print                                            5     3      2     985
  1608                           ;!                                              6 COMMON     5     3      2
  1609                           ;!                        _lcd_dataReg
  1610                           ;!                         _lcd_lincol
  1611                           ;! ---------------------------------------------------------------------------------
  1612                           ;! (1) _lcd_num                                             12     8      4    3209
  1613                           ;!                                              9 COMMON     4     0      4
  1614                           ;!                                              0 BANK0      8     8      0
  1615                           ;!                            ___awdiv
  1616                           ;!                            ___awmod
  1617                           ;!                        _lcd_dataReg
  1618                           ;!                         _lcd_lincol
  1619                           ;! ---------------------------------------------------------------------------------
  1620                           ;! (2) _lcd_lincol                                           3     2      1     372
  1621                           ;!                                              3 COMMON     3     2      1
  1622                           ;!                        _lcd_instReg
  1623                           ;! ---------------------------------------------------------------------------------
  1624                           ;! (2) _lcd_dataReg                                          3     3      0      44
  1625                           ;!                                              0 COMMON     3     3      0
  1626                           ;! ---------------------------------------------------------------------------------
  1627                           ;! (2) ___awmod                                              7     3      4     448
  1628                           ;!                                              0 COMMON     7     3      4
  1629                           ;! ---------------------------------------------------------------------------------
  1630                           ;! (1) _lcd_init                                             0     0      0     503
  1631                           ;!                              _delay
  1632                           ;!                        _lcd_instReg
  1633                           ;! ---------------------------------------------------------------------------------
  1634                           ;! (3) _lcd_instReg                                          3     3      0     176
  1635                           ;!                                              0 COMMON     3     3      0
  1636                           ;! ---------------------------------------------------------------------------------
  1637                           ;! (2) _delay                                                3     1      2     327
  1638                           ;!                                              0 COMMON     3     1      2
  1639                           ;! ---------------------------------------------------------------------------------
  1640                           ;! (1) _edit                                                16     9      7    2310
  1641                           ;!                                              9 COMMON     4     4      0
  1642                           ;!                                              0 BANK0     12     5      7
  1643                           ;!                            ___awdiv
  1644                           ;!                             ___wmul
  1645                           ;! ---------------------------------------------------------------------------------
  1646                           ;! (2) ___wmul                                               6     2      4     244
  1647                           ;!                                              0 COMMON     6     2      4
  1648                           ;! ---------------------------------------------------------------------------------
  1649                           ;! (2) ___awdiv                                              9     5      4    1212
  1650                           ;!                                              0 COMMON     9     5      4
  1651                           ;! ---------------------------------------------------------------------------------
  1652                           ;! (1) _dht_read                                             2     2      0      77
  1653                           ;!                                              0 COMMON     2     2      0
  1654                           ;! ---------------------------------------------------------------------------------
  1655                           ;! Estimated maximum stack depth 3
  1656                           ;! ---------------------------------------------------------------------------------
  1657                           ;!
  1658                           ;! Call Graph Graphs:
  1659                           ;!
  1660                           ;! _main (ROOT)
  1661                           ;!   _delay
  1662                           ;!   _dht_read
  1663                           ;!   _edit
  1664                           ;!     ___awdiv
  1665                           ;!     ___wmul
  1666                           ;!   _lcd_init
  1667                           ;!     _delay
  1668                           ;!     _lcd_instReg
  1669                           ;!   _lcd_num
  1670                           ;!     ___awdiv
  1671                           ;!     ___awmod
  1672                           ;!     _lcd_dataReg
  1673                           ;!     _lcd_lincol
  1674                           ;!       _lcd_instReg
  1675                           ;!   _lcd_print
  1676                           ;!     _lcd_dataReg
  1677                           ;!     _lcd_lincol
  1678                           ;!       _lcd_instReg
  1679                           ;!   _teclado
  1680                           ;!   _teclado_init
  1681                           ;!
  1682                           
  1683                           ;! Address spaces:
  1684                           
  1685                           ;!Name               Size   Autos  Total    Cost      Usage
  1686                           ;!BITCOMMON            E      0       0       0        0.0%
  1687                           ;!EEDATA             100      0       0       0        0.0%
  1688                           ;!NULL                 0      0       0       0        0.0%
  1689                           ;!CODE                 0      0       0       0        0.0%
  1690                           ;!COMMON               E      D       D       1       92.9%
  1691                           ;!BITSFR0              0      0       0       1        0.0%
  1692                           ;!SFR0                 0      0       0       1        0.0%
  1693                           ;!BITSFR1              0      0       0       2        0.0%
  1694                           ;!SFR1                 0      0       0       2        0.0%
  1695                           ;!STACK                0      0       0       2        0.0%
  1696                           ;!ABS                  0      0      28       3        0.0%
  1697                           ;!BITBANK0            50      0       0       4        0.0%
  1698                           ;!BITSFR3              0      0       0       4        0.0%
  1699                           ;!SFR3                 0      0       0       4        0.0%
  1700                           ;!BANK0               50     14      1B       5       33.8%
  1701                           ;!BITSFR2              0      0       0       5        0.0%
  1702                           ;!SFR2                 0      0       0       5        0.0%
  1703                           ;!BITBANK1            50      0       0       6        0.0%
  1704                           ;!BANK1               50      0       0       7        0.0%
  1705                           ;!BITBANK3            60      0       0       8        0.0%
  1706                           ;!BANK3               60      0       0       9        0.0%
  1707                           ;!BITBANK2            60      0       0      10        0.0%
  1708                           ;!BANK2               60      0       0      11        0.0%
  1709                           ;!DATA                 0      0      28      12        0.0%
  1710                           
  1711                           	global	_main
  1712                           
  1713 ;; *************** function _main *****************
  1714 ;; Defined at:
  1715 ;;		line 11 in file "main.c"
  1716 ;; Parameters:    Size  Location     Type
  1717 ;;		None
  1718 ;; Auto vars:     Size  Location     Type
  1719 ;;  fases           1   17[BANK0 ] unsigned char 
  1720 ;;  num             2   18[BANK0 ] int 
  1721 ;;  tecla           1   16[BANK0 ] unsigned char 
  1722 ;; Return value:  Size  Location     Type
  1723 ;;                  1    wreg      void 
  1724 ;; Registers used:
  1725 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1726 ;; Tracked objects:
  1727 ;;		On entry : B00/0
  1728 ;;		On exit  : 0/0
  1729 ;;		Unchanged: 0/0
  1730 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1731 ;;      Params:         0       0       0       0       0
  1732 ;;      Locals:         0       4       0       0       0
  1733 ;;      Temps:          0       4       0       0       0
  1734 ;;      Totals:         0       8       0       0       0
  1735 ;;Total ram usage:        8 bytes
  1736 ;; Hardware stack levels required when called:    3
  1737 ;; This function calls:
  1738 ;;		_delay
  1739 ;;		_dht_read
  1740 ;;		_edit
  1741 ;;		_lcd_init
  1742 ;;		_lcd_num
  1743 ;;		_lcd_print
  1744 ;;		_teclado
  1745 ;;		_teclado_init
  1746 ;; This function is called by:
  1747 ;;		Startup code after reset
  1748 ;; This function uses a non-reentrant model
  1749 ;;
  1750                           psect	maintext,global,class=CODE,delta=2,split=1,group=0
  1751                           	file	"main.c"
  1752                           	line	11
  1753                           global __pmaintext
  1754                           __pmaintext:	;psect for function _main
  1755  0709                     psect	maintext
  1756                           	file	"main.c"
  1757                           	line	11
  1758                           	global	__size_of_main
  1759                           	__size_of_main	equ	__end_of_main-_main
  1760  00EA                     	
  1761                           _main:	
  1762  0709                     ;incstack = 0
  1763                           	opt	stack 5
  1764                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1765                           	line	14
  1766                           	
  1767                           l1386:	
  1768  0709                     ;main.c: 13:     const char string[] ="Tecla:       ";;main.c: 14:     int num = 0;
  1769                           	bcf	status, 5	;RP0=0, select bank0
  1770  0709  1283               	bcf	status, 6	;RP1=0, select bank0
  1771  070A  1303               	clrf	(main@num)
  1772  070B  01B2               	clrf	(main@num+1)
  1773  070C  01B3               	line	15
  1774                           ;main.c: 15:     char tecla = 0;
  1775                           	clrf	(main@tecla)
  1776  070D  01B0               	line	17
  1777                           	
  1778                           l1388:	
  1779  070E                     ;main.c: 17:     lcd_init();
  1780                           	fcall	_lcd_init
  1781  070E  120A  118A  2350  120A  118A  	line	18
  1782                           	
  1783                           l1390:	
  1784  0713                     ;main.c: 18:     teclado_init();
  1785                           	fcall	_teclado_init
  1786  0713  120A  118A  2284  120A  118A  	goto	l1392
  1787  0718  2F19               	line	20
  1788                           ;main.c: 20:     while( 1 )
  1789                           	
  1790                           l103:	
  1791  0719                     	line	23
  1792                           	
  1793                           l1392:	
  1794  0719                     ;main.c: 21:     {;main.c: 23:         tecla = teclado();
  1795                           	fcall	_teclado
  1796  0719  120A  118A  23F2  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  1797  071E  1283               	bcf	status, 6	;RP1=0, select bank0
  1798  071F  1303               	movwf	(??_main+0)+0
  1799  0720  00AC               	movf	(??_main+0)+0,w
  1800  0721  082C               	movwf	(main@tecla)
  1801  0722  00B0               	line	24
  1802                           	
  1803                           l1394:	
  1804  0723                     ;main.c: 24:         lcd_print(0,0, string );
  1805                           	clrf	(lcd_print@col)
  1806  0723  01F6               	movlw	(low((((main@string)-__stringbase)|8000h)))&0ffh
  1807  0724  3011               	movwf	(??_main+0)+0
  1808  0725  00AC               	movf	(??_main+0)+0,w
  1809  0726  082C               	movwf	(lcd_print@str)
  1810  0727  00F7               	movlw	low(0)
  1811  0728  3000               	fcall	_lcd_print
  1812  0729  120A  118A  22E7  120A  118A  	line	25
  1813                           	
  1814                           l1396:	
  1815  072E                     ;main.c: 25:         edit( &num, tecla, '*', '-', 0, 20000 );
  1816                           	bcf	status, 5	;RP0=0, select bank0
  1817  072E  1283               	bcf	status, 6	;RP1=0, select bank0
  1818  072F  1303               	movf	(main@tecla),w
  1819  0730  0830               	movwf	(??_main+0)+0
  1820  0731  00AC               	movf	(??_main+0)+0,w
  1821  0732  082C               	movwf	(edit@tecla)
  1822  0733  00A0               	movlw	low(02Ah)
  1823  0734  302A               	movwf	(??_main+1)+0
  1824  0735  00AD               	movf	(??_main+1)+0,w
  1825  0736  082D               	movwf	(edit@delete)
  1826  0737  00A1               	movlw	low(02Dh)
  1827  0738  302D               	movwf	(??_main+2)+0
  1828  0739  00AE               	movf	(??_main+2)+0,w
  1829  073A  082E               	movwf	(edit@menos)
  1830  073B  00A2               	movlw	0
  1831  073C  3000               	movwf	(edit@min)
  1832  073D  00A3               	movwf	(edit@min+1)
  1833  073E  00A4               	movlw	020h
  1834  073F  3020               	movwf	(edit@max)
  1835  0740  00A5               	movlw	04Eh
  1836  0741  304E               	movwf	((edit@max))+1
  1837  0742  00A6               	movlw	(low(main@num|((0x0)<<8)))&0ffh
  1838  0743  3032               	fcall	_edit
  1839  0744  120A  118A  255B  120A  118A  	line	27
  1840                           	
  1841                           l1398:	
  1842  0749                     ;main.c: 27:         lcd_num(0, 7, num, 5);
  1843                           	movlw	low(07h)
  1844  0749  3007               	bcf	status, 5	;RP0=0, select bank0
  1845  074A  1283               	bcf	status, 6	;RP1=0, select bank0
  1846  074B  1303               	movwf	(??_main+0)+0
  1847  074C  00AC               	movf	(??_main+0)+0,w
  1848  074D  082C               	movwf	(lcd_num@col)
  1849  074E  00F9               	movf	(main@num+1),w
  1850  074F  0833               	movwf	(lcd_num@num+1)
  1851  0750  00FB               	movf	(main@num),w
  1852  0751  0832               	movwf	(lcd_num@num)
  1853  0752  00FA               	movlw	low(05h)
  1854  0753  3005               	movwf	(??_main+1)+0
  1855  0754  00AD               	movf	(??_main+1)+0,w
  1856  0755  082D               	movwf	(lcd_num@tam)
  1857  0756  00FC               	movlw	low(0)
  1858  0757  3000               	fcall	_lcd_num
  1859  0758  120A  118A  261F  120A  118A  	line	28
  1860                           	
  1861                           l1400:	
  1862  075D                     ;main.c: 28:         dht_read( &sensor );
  1863                           	movlw	(low(_sensor|((0x0)<<8)))&0ffh
  1864  075D  3037               	fcall	_dht_read
  1865  075E  120A  118A  2274  120A  118A  	line	30
  1866                           	
  1867                           l1402:	
  1868  0763                     ;main.c: 30:         lcd_num(0,13, sensor.dht.temperatu, 3 );
  1869                           	movlw	low(0Dh)
  1870  0763  300D               	bcf	status, 5	;RP0=0, select bank0
  1871  0764  1283               	bcf	status, 6	;RP1=0, select bank0
  1872  0765  1303               	movwf	(??_main+0)+0
  1873  0766  00AC               	movf	(??_main+0)+0,w
  1874  0767  082C               	movwf	(lcd_num@col)
  1875  0768  00F9               	movf	0+(_sensor)+03h,w
  1876  0769  083A               	movwf	(??_main+1)+0
  1877  076A  00AD               	clrf	(??_main+1)+0+1
  1878  076B  01AE               	movf	0+(??_main+1)+0,w
  1879  076C  082D               	movwf	(lcd_num@num)
  1880  076D  00FA               	movf	1+(??_main+1)+0,w
  1881  076E  082E               	movwf	(lcd_num@num+1)
  1882  076F  00FB               	movlw	low(03h)
  1883  0770  3003               	movwf	(??_main+3)+0
  1884  0771  00AF               	movf	(??_main+3)+0,w
  1885  0772  082F               	movwf	(lcd_num@tam)
  1886  0773  00FC               	movlw	low(0)
  1887  0774  3000               	fcall	_lcd_num
  1888  0775  120A  118A  261F  120A  118A  	line	31
  1889                           	
  1890                           l1404:	
  1891  077A                     ;main.c: 31:         lcd_num(1,13, sensor.dht.umida, 3 );
  1892                           	movlw	low(0Dh)
  1893  077A  300D               	bcf	status, 5	;RP0=0, select bank0
  1894  077B  1283               	bcf	status, 6	;RP1=0, select bank0
  1895  077C  1303               	movwf	(??_main+0)+0
  1896  077D  00AC               	movf	(??_main+0)+0,w
  1897  077E  082C               	movwf	(lcd_num@col)
  1898  077F  00F9               	movf	0+(_sensor)+01h,w
  1899  0780  0838               	movwf	(??_main+1)+0
  1900  0781  00AD               	clrf	(??_main+1)+0+1
  1901  0782  01AE               	movf	0+(??_main+1)+0,w
  1902  0783  082D               	movwf	(lcd_num@num)
  1903  0784  00FA               	movf	1+(??_main+1)+0,w
  1904  0785  082E               	movwf	(lcd_num@num+1)
  1905  0786  00FB               	movlw	low(03h)
  1906  0787  3003               	movwf	(??_main+3)+0
  1907  0788  00AF               	movf	(??_main+3)+0,w
  1908  0789  082F               	movwf	(lcd_num@tam)
  1909  078A  00FC               	movlw	low(01h)
  1910  078B  3001               	fcall	_lcd_num
  1911  078C  120A  118A  261F  120A  118A  	line	36
  1912                           ;main.c: 34:         unsigned char fases;;main.c: 36:         switch(fases)
  1913                           	goto	l1426
  1914  0791  2FD9               	line	38
  1915                           ;main.c: 37:         {;main.c: 38:             case 0:
  1916                           	
  1917                           l105:	
  1918  0792                     	line	39
  1919                           	
  1920                           l1406:	
  1921  0792                     ;main.c: 39:                 if (num ==3)
  1922                           		movlw	3
  1923  0792  3003               	bcf	status, 5	;RP0=0, select bank0
  1924  0793  1283               	bcf	status, 6	;RP1=0, select bank0
  1925  0794  1303               	xorwf	((main@num)),w
  1926  0795  0632               iorwf	((main@num+1)),w
  1927  0796  0433               	btfss	status,2
  1928  0797  1D03               	goto	u1311
  1929  0798  2F9A               	goto	u1310
  1930  0799  2F9B               u1311:
  1931  079A                     	goto	l1410
  1932  079A  2FAA               u1310:
  1933  079B                     	line	42
  1934                           	
  1935                           l1408:	
  1936  079B                     ;main.c: 40:                 {;main.c: 42:                     lcd_print(1,9, "test" );

  1937                           	movlw	low(09h)
  1938  079B  3009               	movwf	(??_main+0)+0
  1939  079C  00AC               	movf	(??_main+0)+0,w
  1940  079D  082C               	movwf	(lcd_print@col)
  1941  079E  00F6               	movlw	(low((((STR_1)-__stringbase)|8000h)))&0ffh
  1942  079F  302E               	movwf	(??_main+1)+0
  1943  07A0  00AD               	movf	(??_main+1)+0,w
  1944  07A1  082D               	movwf	(lcd_print@str)
  1945  07A2  00F7               	movlw	low(01h)
  1946  07A3  3001               	fcall	_lcd_print
  1947  07A4  120A  118A  22E7  120A  118A  	goto	l1410
  1948  07A9  2FAA               	line	43
  1949                           ;main.c: 43:                 }
  1950                           	
  1951                           l106:	
  1952  07AA                     	line	44
  1953                           	
  1954                           l1410:	
  1955  07AA                     ;main.c: 44:                 fases=10;
  1956                           	movlw	low(0Ah)
  1957  07AA  300A               	bcf	status, 5	;RP0=0, select bank0
  1958  07AB  1283               	bcf	status, 6	;RP1=0, select bank0
  1959  07AC  1303               	movwf	(??_main+0)+0
  1960  07AD  00AC               	movf	(??_main+0)+0,w
  1961  07AE  082C               	movwf	(main@fases)
  1962  07AF  00B1               	line	45
  1963                           ;main.c: 45:             break;
  1964                           	goto	l1392
  1965  07B0  2F19               	line	47
  1966                           ;main.c: 47:             case 1:
  1967                           	
  1968                           l108:	
  1969  07B1                     	line	48
  1970                           	
  1971                           l1412:	
  1972  07B1                     ;main.c: 48:                 if(num ==237)
  1973                           		movlw	237
  1974  07B1  30ED               	xorwf	((main@num)),w
  1975  07B2  0632               iorwf	((main@num+1)),w
  1976  07B3  0433               	btfss	status,2
  1977  07B4  1D03               	goto	u1321
  1978  07B5  2FB7               	goto	u1320
  1979  07B6  2FB8               u1321:
  1980  07B7                     	goto	l1418
  1981  07B7  2FC8               u1320:
  1982  07B8                     	line	50
  1983                           	
  1984                           l1414:	
  1985  07B8                     ;main.c: 49:                 {;main.c: 50:                     lcd_print(1,0,"senha corr
                                 eta ");
  1986                           	clrf	(lcd_print@col)
  1987  07B8  01F6               	movlw	(low((((STR_2)-__stringbase)|8000h)))&0ffh
  1988  07B9  301F               	movwf	(??_main+0)+0
  1989  07BA  00AC               	movf	(??_main+0)+0,w
  1990  07BB  082C               	movwf	(lcd_print@str)
  1991  07BC  00F7               	movlw	low(01h)
  1992  07BD  3001               	fcall	_lcd_print
  1993  07BE  120A  118A  22E7  120A  118A  	line	51
  1994                           	
  1995                           l1416:	
  1996  07C3                     ;main.c: 51:                     num = 0;
  1997                           	bcf	status, 5	;RP0=0, select bank0
  1998  07C3  1283               	bcf	status, 6	;RP1=0, select bank0
  1999  07C4  1303               	clrf	(main@num)
  2000  07C5  01B2               	clrf	(main@num+1)
  2001  07C6  01B3               	goto	l1418
  2002  07C7  2FC8               	line	52
  2003                           ;main.c: 52:                 }
  2004                           	
  2005                           l109:	
  2006  07C8                     	line	53
  2007                           	
  2008                           l1418:	
  2009  07C8                     ;main.c: 53:                 fases=0;
  2010                           	clrf	(main@fases)
  2011  07C8  01B1               	line	54
  2012                           ;main.c: 54:             break;
  2013                           	goto	l1392
  2014  07C9  2F19               	line	56
  2015                           ;main.c: 56:             case 10:
  2016                           	
  2017                           l110:	
  2018  07CA                     	line	58
  2019                           	
  2020                           l1420:	
  2021  07CA                     ;main.c: 57:             {;main.c: 58:                 delay(1000);
  2022                           	movlw	0E8h
  2023  07CA  30E8               	movwf	(delay@t)
  2024  07CB  00F0               	movlw	03h
  2025  07CC  3003               	movwf	((delay@t))+1
  2026  07CD  00F1               	fcall	_delay
  2027  07CE  120A  118A  22A8  120A  118A  	line	60
  2028                           	
  2029                           l1422:	
  2030  07D3                     ;main.c: 59:             };main.c: 60:             fases=1;
  2031                           	bcf	status, 5	;RP0=0, select bank0
  2032  07D3  1283               	bcf	status, 6	;RP1=0, select bank0
  2033  07D4  1303               	clrf	(main@fases)
  2034  07D5  01B1               	incf	(main@fases),f
  2035  07D6  0AB1               	line	61
  2036                           ;main.c: 61:             break;
  2037                           	goto	l1392
  2038  07D7  2F19               	line	63
  2039                           	
  2040                           l1424:	
  2041  07D8                     ;main.c: 63:         }
  2042                           	goto	l1392
  2043  07D8  2F19               	
  2044                           l104:	
  2045  07D9                     	
  2046                           l1426:	
  2047  07D9                     	bcf	status, 5	;RP0=0, select bank0
  2048  07D9  1283               	bcf	status, 6	;RP1=0, select bank0
  2049  07DA  1303               	movf	(main@fases),w
  2050  07DB  0831               	movwf	(??_main+0)+0
  2051  07DC  00AC               	clrf	(??_main+0)+0+1
  2052  07DD  01AD               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  2053                           ; Switch size 1, requested type "space"
  2054                           ; Number of cases is 1, Range of values is 0 to 0
  2055                           ; switch strategies available:
  2056                           ; Name         Instructions Cycles
  2057                           ; simple_byte            4     3 (average)
  2058                           ; direct_byte           11     8 (fixed)
  2059                           ; jumptable            260     6 (fixed)
  2060                           ;	Chosen strategy is simple_byte
  2061                           
  2062                           	movf 1+(??_main+0)+0,w
  2063  07DE  082D               	opt asmopt_push
  2064                           	opt asmopt_off
  2065                           	xorlw	0^0	; case 0
  2066  07DF  3A00               	skipnz
  2067  07E0  1903               	goto	l1464
  2068  07E1  2FE3               	goto	l1392
  2069  07E2  2F19               	opt asmopt_pop
  2070                           	
  2071                           l1464:	
  2072  07E3                     ; Switch size 1, requested type "space"
  2073                           ; Number of cases is 3, Range of values is 0 to 10
  2074                           ; switch strategies available:
  2075                           ; Name         Instructions Cycles
  2076                           ; simple_byte           10     6 (average)
  2077                           ; direct_byte           41     8 (fixed)
  2078                           ; jumptable            260     6 (fixed)
  2079                           ;	Chosen strategy is simple_byte
  2080                           
  2081                           	movf 0+(??_main+0)+0,w
  2082  07E3  082C               	opt asmopt_push
  2083                           	opt asmopt_off
  2084                           	xorlw	0^0	; case 0
  2085  07E4  3A00               	skipnz
  2086  07E5  1903               	goto	l1406
  2087  07E6  2F92               	xorlw	1^0	; case 1
  2088  07E7  3A01               	skipnz
  2089  07E8  1903               	goto	l1412
  2090  07E9  2FB1               	xorlw	10^1	; case 10
  2091  07EA  3A0B               	skipnz
  2092  07EB  1903               	goto	l1420
  2093  07EC  2FCA               	goto	l1392
  2094  07ED  2F19               	opt asmopt_pop
  2095                           
  2096                           	
  2097                           l107:	
  2098  07EE                     	goto	l1392
  2099  07EE  2F19               	line	65
  2100                           ;main.c: 65:     }
  2101                           	
  2102                           l111:	
  2103  07EF                     	goto	l1392
  2104  07EF  2F19               	
  2105                           l112:	
  2106  07F0                     	line	66
  2107                           	
  2108                           l113:	
  2109  07F0                     	global	start
  2110                           	ljmp	start
  2111  07F0  120A  118A  2800   	opt stack 0
  2112                           GLOBAL	__end_of_main
  2113                           	__end_of_main:
  2114  07F3                     	signat	_main,89
  2115                           	global	_teclado_init
  2116                           
  2117 ;; *************** function _teclado_init *****************
  2118 ;; Defined at:
  2119 ;;		line 9 in file "teclado.c"
  2120 ;; Parameters:    Size  Location     Type
  2121 ;;		None
  2122 ;; Auto vars:     Size  Location     Type
  2123 ;;		None
  2124 ;; Return value:  Size  Location     Type
  2125 ;;                  1    wreg      void 
  2126 ;; Registers used:
  2127 ;;		wreg, status,2
  2128 ;; Tracked objects:
  2129 ;;		On entry : 0/0
  2130 ;;		On exit  : 0/0
  2131 ;;		Unchanged: 0/0
  2132 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2133 ;;      Params:         0       0       0       0       0
  2134 ;;      Locals:         0       0       0       0       0
  2135 ;;      Temps:          0       0       0       0       0
  2136 ;;      Totals:         0       0       0       0       0
  2137 ;;Total ram usage:        0 bytes
  2138 ;; Hardware stack levels used:    1
  2139 ;; This function calls:
  2140 ;;		Nothing
  2141 ;; This function is called by:
  2142 ;;		_main
  2143 ;; This function uses a non-reentrant model
  2144 ;;
  2145                           psect	text1,local,class=CODE,delta=2,merge=1,group=0
  2146                           	file	"teclado.c"
  2147                           	line	9
  2148                           global __ptext1
  2149                           __ptext1:	;psect for function _teclado_init
  2150  0284                     psect	text1
  2151                           	file	"teclado.c"
  2152                           	line	9
  2153                           	global	__size_of_teclado_init
  2154                           	__size_of_teclado_init	equ	__end_of_teclado_init-_teclado_init
  2155  0011                     	
  2156                           _teclado_init:	
  2157  0284                     ;incstack = 0
  2158                           	opt	stack 7
  2159                           ; Regs used in _teclado_init: [wreg+status,2]
  2160                           	line	11
  2161                           	
  2162                           l1340:	
  2163  0284                     ;teclado.c: 11:     TRISB = 0xF0;
  2164                           	movlw	low(0F0h)
  2165  0284  30F0               	bsf	status, 5	;RP0=1, select bank1
  2166  0285  1683               	bcf	status, 6	;RP1=0, select bank1
  2167  0286  1303               	movwf	(134)^080h	;volatile
  2168  0287  0086               	line	12
  2169                           	
  2170                           l1342:	
  2171  0288                     ;teclado.c: 12:     ANSELH = 0x00;
  2172                           	bsf	status, 5	;RP0=1, select bank3
  2173  0288  1683               	bsf	status, 6	;RP1=1, select bank3
  2174  0289  1703               	clrf	(393)^0180h	;volatile
  2175  028A  0189               	line	13
  2176                           	
  2177                           l1344:	
  2178  028B                     ;teclado.c: 13:     OPTION_REGbits.nRBPU = 0;
  2179                           	bsf	status, 5	;RP0=1, select bank1
  2180  028B  1683               	bcf	status, 6	;RP1=0, select bank1
  2181  028C  1303               	bcf	(129)^080h,7	;volatile
  2182  028D  1381               	line	14
  2183                           	
  2184                           l1346:	
  2185  028E                     ;teclado.c: 14:     WPUB = 0xFF;
  2186                           	movlw	low(0FFh)
  2187  028E  30FF               	movwf	(149)^080h	;volatile
  2188  028F  0095               	line	15
  2189                           	
  2190                           l1348:	
  2191  0290                     ;teclado.c: 15:     PORTB = 0xFF;
  2192                           	movlw	low(0FFh)
  2193  0290  30FF               	bcf	status, 5	;RP0=0, select bank0
  2194  0291  1283               	bcf	status, 6	;RP1=0, select bank0
  2195  0292  1303               	movwf	(6)	;volatile
  2196  0293  0086               	line	16
  2197                           	
  2198                           l126:	
  2199  0294                     	return
  2200  0294  0008               	opt stack 0
  2201                           GLOBAL	__end_of_teclado_init
  2202                           	__end_of_teclado_init:
  2203  0295                     	signat	_teclado_init,89
  2204                           	global	_teclado
  2205                           
  2206 ;; *************** function _teclado *****************
  2207 ;; Defined at:
  2208 ;;		line 23 in file "teclado.c"
  2209 ;; Parameters:    Size  Location     Type
  2210 ;;		None
  2211 ;; Auto vars:     Size  Location     Type
  2212 ;;  c               1    9[COMMON] unsigned char 
  2213 ;;  l               1    8[COMMON] unsigned char 
  2214 ;;  aux             1    7[COMMON] unsigned char 
  2215 ;; Return value:  Size  Location     Type
  2216 ;;                  1    wreg      unsigned char 
  2217 ;; Registers used:
  2218 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  2219 ;; Tracked objects:
  2220 ;;		On entry : 0/0
  2221 ;;		On exit  : 0/0
  2222 ;;		Unchanged: 0/0
  2223 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2224 ;;      Params:         0       0       0       0       0
  2225 ;;      Locals:         3       0       0       0       0
  2226 ;;      Temps:          7       0       0       0       0
  2227 ;;      Totals:        10       0       0       0       0
  2228 ;;Total ram usage:       10 bytes
  2229 ;; Hardware stack levels used:    2
  2230 ;; This function calls:
  2231 ;;		Nothing
  2232 ;; This function is called by:
  2233 ;;		_main
  2234 ;; This function uses a non-reentrant model
  2235 ;;
  2236                           psect	text2,local,class=CODE,delta=2,merge=1,group=0
  2237                           	line	23
  2238                           global __ptext2
  2239                           __ptext2:	;psect for function _teclado
  2240  03F2                     psect	text2
  2241                           	file	"teclado.c"
  2242                           	line	23
  2243                           	global	__size_of_teclado
  2244                           	__size_of_teclado	equ	__end_of_teclado-_teclado
  2245  006D                     	
  2246                           _teclado:	
  2247  03F2                     ;incstack = 0
  2248                           	opt	stack 6
  2249                           ; Regs used in _teclado: [wreg-fsr0h+status,2+status,0+pclath]
  2250                           	line	25
  2251                           	
  2252                           l1350:	
  2253  03F2                     ;teclado.c: 25:     unsigned char aux = 0;
  2254                           	clrf	(teclado@aux)
  2255  03F2  01F7               	line	28
  2256                           ;teclado.c: 26:     unsigned char l,c;;teclado.c: 28:     for( l=0; l<4; l++ )
  2257                           	clrf	(teclado@l)
  2258  03F3  01F8               	
  2259                           l1352:	
  2260  03F4                     	movlw	low(04h)
  2261  03F4  3004               	subwf	(teclado@l),w
  2262  03F5  0278               	skipc
  2263  03F6  1C03               	goto	u1231
  2264  03F7  2BF9               	goto	u1230
  2265  03F8  2BFA               u1231:
  2266  03F9                     	goto	l1356
  2267  03F9  2BFC               u1230:
  2268  03FA                     	goto	l1376
  2269  03FA  2C5C               	
  2270                           l1354:	
  2271  03FB                     	goto	l1376
  2272  03FB  2C5C               	
  2273                           l131:	
  2274  03FC                     	line	30
  2275                           	
  2276                           l1356:	
  2277  03FC                     ;teclado.c: 29:     {;teclado.c: 30:         PORTB = (unsigned char)~(0x01 << l);
  2278                           	movlw	low(01h)
  2279  03FC  3001               	movwf	(??_teclado+0)+0
  2280  03FD  00F0               	incf	(teclado@l),w
  2281  03FE  0A78               	goto	u1244
  2282  03FF  2C02               u1245:
  2283  0400                     	clrc
  2284  0400  1003               	rlf	(??_teclado+0)+0,f
  2285  0401  0DF0               u1244:
  2286  0402                     	addlw	-1
  2287  0402  3EFF               	skipz
  2288  0403  1D03               	goto	u1245
  2289  0404  2C00               	movf	0+(??_teclado+0)+0,w
  2290  0405  0870               	xorlw	0ffh
  2291  0406  3AFF               	bcf	status, 5	;RP0=0, select bank0
  2292  0407  1283               	bcf	status, 6	;RP1=0, select bank0
  2293  0408  1303               	movwf	(6)	;volatile
  2294  0409  0086               	line	31
  2295                           	
  2296                           l1358:	
  2297  040A                     ;teclado.c: 31:         for( c=0; c<4; c++ )
  2298                           	clrf	(teclado@c)
  2299  040A  01F9               	
  2300                           l1360:	
  2301  040B                     	movlw	low(04h)
  2302  040B  3004               	subwf	(teclado@c),w
  2303  040C  0279               	skipc
  2304  040D  1C03               	goto	u1251
  2305  040E  2C10               	goto	u1250
  2306  040F  2C11               u1251:
  2307  0410                     	goto	l1364
  2308  0410  2C13               u1250:
  2309  0411                     	goto	l1372
  2310  0411  2C51               	
  2311                           l1362:	
  2312  0412                     	goto	l1372
  2313  0412  2C51               	
  2314                           l133:	
  2315  0413                     	line	33
  2316                           	
  2317                           l1364:	
  2318  0413                     ;teclado.c: 32:         {;teclado.c: 33:             if( ~PORTB & (0x10<<c) )
  2319                           	comf	(6),w	;volatile
  2320  0413  0906               	movwf	(??_teclado+0)+0
  2321  0414  00F0               	clrf	(??_teclado+0)+0+1
  2322  0415  01F1               	comf	(??_teclado+0)+0+1
  2323  0416  09F1               	incf	(teclado@c),w
  2324  0417  0A79               	movwf	(??_teclado+2)+0
  2325  0418  00F2               	movlw	010h
  2326  0419  3010               	movwf	(??_teclado+3)+0
  2327  041A  00F3               	movlw	0
  2328  041B  3000               	movwf	(??_teclado+3)+0+1
  2329  041C  00F4               	goto	u1264
  2330  041D  2C21               u1265:
  2331  041E                     	clrc
  2332  041E  1003               	rlf	(??_teclado+3)+0,f
  2333  041F  0DF3               	rlf	(??_teclado+3)+1,f
  2334  0420  0DF4               u1264:
  2335  0421                     	decfsz	(??_teclado+2)+0,f
  2336  0421  0BF2               	goto	u1265
  2337  0422  2C1E               	
  2338                           	movf	0+(??_teclado+0)+0,w
  2339  0423  0870               	andwf	0+(??_teclado+3)+0,w
  2340  0424  0573               	movwf	(??_teclado+5)+0
  2341  0425  00F5               	movf	1+(??_teclado+0)+0,w
  2342  0426  0871               	andwf	1+(??_teclado+3)+0,w
  2343  0427  0574               	movwf	1+(??_teclado+5)+0
  2344  0428  00F6               	movf	((??_teclado+5)+0),w
  2345  0429  0875               iorwf	((??_teclado+5)+1),w
  2346  042A  0476               	btfsc	status,2
  2347  042B  1903               	goto	u1271
  2348  042C  2C2E               	goto	u1270
  2349  042D  2C2F               u1271:
  2350  042E                     	goto	l1368
  2351  042E  2C46               u1270:
  2352  042F                     	line	34
  2353                           	
  2354                           l1366:	
  2355  042F                     ;teclado.c: 34:                 aux = tecladoMatriz[l][c];
  2356                           	movf	(teclado@l),w
  2357  042F  0878               	movwf	(??_teclado+0)+0
  2358  0430  00F0               	movlw	02h
  2359  0431  3002               u1285:
  2360  0432                     	clrc
  2361  0432  1003               	rlf	(??_teclado+0)+0,f
  2362  0433  0DF0               	addlw	-1
  2363  0434  3EFF               	skipz
  2364  0435  1D03               	goto	u1285
  2365  0436  2C32               	movlw	(low((((_tecladoMatriz)-__stringbase)|8000h)))&0ffh
  2366  0437  3001               	addwf	0+(??_teclado+0)+0,w
  2367  0438  0770               	movwf	(??_teclado+1)+0
  2368  0439  00F1               	movf	(teclado@c),w
  2369  043A  0879               	addwf	0+(??_teclado+1)+0,w
  2370  043B  0771               	movwf	fsr0
  2371  043C  0084               	fcall	stringdir
  2372  043D  120A  118A  2003  120A  118A  	movwf	(??_teclado+2)+0
  2373  0442  00F2               	movf	(??_teclado+2)+0,w
  2374  0443  0872               	movwf	(teclado@aux)
  2375  0444  00F7               	goto	l1368
  2376  0445  2C46               	
  2377                           l135:	
  2378  0446                     	line	35
  2379                           	
  2380                           l1368:	
  2381  0446                     ;teclado.c: 35:         }
  2382                           	movlw	low(01h)
  2383  0446  3001               	movwf	(??_teclado+0)+0
  2384  0447  00F0               	movf	(??_teclado+0)+0,w
  2385  0448  0870               	addwf	(teclado@c),f
  2386  0449  07F9               	
  2387                           l1370:	
  2388  044A                     	movlw	low(04h)
  2389  044A  3004               	subwf	(teclado@c),w
  2390  044B  0279               	skipc
  2391  044C  1C03               	goto	u1291
  2392  044D  2C4F               	goto	u1290
  2393  044E  2C50               u1291:
  2394  044F                     	goto	l1364
  2395  044F  2C13               u1290:
  2396  0450                     	goto	l1372
  2397  0450  2C51               	
  2398                           l134:	
  2399  0451                     	line	36
  2400                           	
  2401                           l1372:	
  2402  0451                     ;teclado.c: 36:     }
  2403                           	movlw	low(01h)
  2404  0451  3001               	movwf	(??_teclado+0)+0
  2405  0452  00F0               	movf	(??_teclado+0)+0,w
  2406  0453  0870               	addwf	(teclado@l),f
  2407  0454  07F8               	
  2408                           l1374:	
  2409  0455                     	movlw	low(04h)
  2410  0455  3004               	subwf	(teclado@l),w
  2411  0456  0278               	skipc
  2412  0457  1C03               	goto	u1301
  2413  0458  2C5A               	goto	u1300
  2414  0459  2C5B               u1301:
  2415  045A                     	goto	l1356
  2416  045A  2BFC               u1300:
  2417  045B                     	goto	l1376
  2418  045B  2C5C               	
  2419                           l132:	
  2420  045C                     	line	37
  2421                           	
  2422                           l1376:	
  2423  045C                     ;teclado.c: 37:     return( aux );
  2424                           	movf	(teclado@aux),w
  2425  045C  0877               	goto	l136
  2426  045D  2C5E               	
  2427                           l1378:	
  2428  045E                     	line	38
  2429                           	
  2430                           l136:	
  2431  045E                     	return
  2432  045E  0008               	opt stack 0
  2433                           GLOBAL	__end_of_teclado
  2434                           	__end_of_teclado:
  2435  045F                     	signat	_teclado,89
  2436                           	global	_lcd_print
  2437                           
  2438 ;; *************** function _lcd_print *****************
  2439 ;; Defined at:
  2440 ;;		line 156 in file "lcd.c"
  2441 ;; Parameters:    Size  Location     Type
  2442 ;;  lin             1    wreg     unsigned char 
  2443 ;;  col             1    6[COMMON] unsigned char 
  2444 ;;  str             1    7[COMMON] PTR const unsigned char 
  2445 ;;		 -> STR_2(15), STR_1(5), main@string(14), 
  2446 ;; Auto vars:     Size  Location     Type
  2447 ;;  lin             1   10[COMMON] unsigned char 
  2448 ;;  pos             1    9[COMMON] unsigned char 
  2449 ;; Return value:  Size  Location     Type
  2450 ;;                  1    wreg      void 
  2451 ;; Registers used:
  2452 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2453 ;; Tracked objects:
  2454 ;;		On entry : 0/0
  2455 ;;		On exit  : 0/0
  2456 ;;		Unchanged: 0/0
  2457 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2458 ;;      Params:         2       0       0       0       0
  2459 ;;      Locals:         2       0       0       0       0
  2460 ;;      Temps:          1       0       0       0       0
  2461 ;;      Totals:         5       0       0       0       0
  2462 ;;Total ram usage:        5 bytes
  2463 ;; Hardware stack levels used:    1
  2464 ;; Hardware stack levels required when called:    2
  2465 ;; This function calls:
  2466 ;;		_lcd_dataReg
  2467 ;;		_lcd_lincol
  2468 ;; This function is called by:
  2469 ;;		_main
  2470 ;; This function uses a non-reentrant model
  2471 ;;
  2472                           psect	text3,local,class=CODE,delta=2,merge=1,group=0
  2473                           	file	"lcd.c"
  2474                           	line	156
  2475                           global __ptext3
  2476                           __ptext3:	;psect for function _lcd_print
  2477  02E7                     psect	text3
  2478                           	file	"lcd.c"
  2479                           	line	156
  2480                           	global	__size_of_lcd_print
  2481                           	__size_of_lcd_print	equ	__end_of_lcd_print-_lcd_print
  2482  0033                     	
  2483                           _lcd_print:	
  2484  02E7                     ;incstack = 0
  2485                           	opt	stack 5
  2486                           ; Regs used in _lcd_print: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2487                           ;lcd_print@lin stored from wreg
  2488                           	movwf	(lcd_print@lin)
  2489  02E7  00FA               	line	158
  2490                           	
  2491                           l1294:	
  2492  02E8                     ;lcd.c: 156: void lcd_print( unsigned char lin, unsigned char col, const char * str );lc
                                 d.c: 157: {;lcd.c: 158:     char pos = col;
  2493                           	movf	(lcd_print@col),w
  2494  02E8  0876               	movwf	(??_lcd_print+0)+0
  2495  02E9  00F8               	movf	(??_lcd_print+0)+0,w
  2496  02EA  0878               	movwf	(lcd_print@pos)
  2497  02EB  00F9               	line	159
  2498                           	
  2499                           l1296:	
  2500  02EC                     ;lcd.c: 159:     lcd_lincol( lin, col );
  2501                           	movf	(lcd_print@col),w
  2502  02EC  0876               	movwf	(??_lcd_print+0)+0
  2503  02ED  00F8               	movf	(??_lcd_print+0)+0,w
  2504  02EE  0878               	movwf	(lcd_lincol@col)
  2505  02EF  00F3               	movf	(lcd_print@lin),w
  2506  02F0  087A               	fcall	_lcd_lincol
  2507  02F1  120A  118A  2295  120A  118A  	line	161
  2508                           ;lcd.c: 161:     while( *str )
  2509                           	goto	l1304
  2510  02F6  2B0C               	
  2511                           l59:	
  2512  02F7                     	line	163
  2513                           	
  2514                           l1298:	
  2515  02F7                     ;lcd.c: 162:     {;lcd.c: 163:         lcd_dataReg( *str );
  2516                           	movf	(lcd_print@str),w
  2517  02F7  0877               	movwf	fsr0
  2518  02F8  0084               	fcall	stringdir
  2519  02F9  120A  118A  2003  120A  118A  	fcall	_lcd_dataReg
  2520  02FE  120A  118A  231A  120A  118A  	line	164
  2521                           	
  2522                           l1300:	
  2523  0303                     ;lcd.c: 164:         ++str;
  2524                           	movlw	low(01h)
  2525  0303  3001               	movwf	(??_lcd_print+0)+0
  2526  0304  00F8               	movf	(??_lcd_print+0)+0,w
  2527  0305  0878               	addwf	(lcd_print@str),f
  2528  0306  07F7               	line	165
  2529                           	
  2530                           l1302:	
  2531  0307                     ;lcd.c: 165:         ++pos;
  2532                           	movlw	low(01h)
  2533  0307  3001               	movwf	(??_lcd_print+0)+0
  2534  0308  00F8               	movf	(??_lcd_print+0)+0,w
  2535  0309  0878               	addwf	(lcd_print@pos),f
  2536  030A  07F9               	goto	l1304
  2537  030B  2B0C               	line	166
  2538                           ;lcd.c: 166:     }
  2539                           	
  2540                           l58:	
  2541  030C                     	line	161
  2542                           	
  2543                           l1304:	
  2544  030C                     ;lcd.c: 161:     while( *str )
  2545                           	movf	(lcd_print@str),w
  2546  030C  0877               	movwf	fsr0
  2547  030D  0084               	fcall	stringdir
  2548  030E  120A  118A  2003  120A  118A  	xorlw	0
  2549  0313  3A00               	skipz
  2550  0314  1D03               	goto	u1131
  2551  0315  2B17               	goto	u1130
  2552  0316  2B18               u1131:
  2553  0317                     	goto	l1298
  2554  0317  2AF7               u1130:
  2555  0318                     	goto	l61
  2556  0318  2B19               	
  2557                           l60:	
  2558  0319                     	line	167
  2559                           	
  2560                           l61:	
  2561  0319                     	return
  2562  0319  0008               	opt stack 0
  2563                           GLOBAL	__end_of_lcd_print
  2564                           	__end_of_lcd_print:
  2565  031A                     	signat	_lcd_print,12409
  2566                           	global	_lcd_num
  2567                           
  2568 ;; *************** function _lcd_num *****************
  2569 ;; Defined at:
  2570 ;;		line 178 in file "lcd.c"
  2571 ;; Parameters:    Size  Location     Type
  2572 ;;  lin             1    wreg     unsigned char 
  2573 ;;  col             1    9[COMMON] unsigned char 
  2574 ;;  num             2   10[COMMON] int 
  2575 ;;  tam             1   12[COMMON] unsigned char 
  2576 ;; Auto vars:     Size  Location     Type
  2577 ;;  lin             1    3[BANK0 ] unsigned char 
  2578 ;;  div             2    6[BANK0 ] int 
  2579 ;;  sinal           1    5[BANK0 ] unsigned char 
  2580 ;;  size            1    4[BANK0 ] unsigned char 
  2581 ;; Return value:  Size  Location     Type
  2582 ;;                  1    wreg      void 
  2583 ;; Registers used:
  2584 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2585 ;; Tracked objects:
  2586 ;;		On entry : 0/0
  2587 ;;		On exit  : 0/0
  2588 ;;		Unchanged: 0/0
  2589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2590 ;;      Params:         4       0       0       0       0
  2591 ;;      Locals:         0       5       0       0       0
  2592 ;;      Temps:          0       3       0       0       0
  2593 ;;      Totals:         4       8       0       0       0
  2594 ;;Total ram usage:       12 bytes
  2595 ;; Hardware stack levels used:    1
  2596 ;; Hardware stack levels required when called:    2
  2597 ;; This function calls:
  2598 ;;		___awdiv
  2599 ;;		___awmod
  2600 ;;		_lcd_dataReg
  2601 ;;		_lcd_lincol
  2602 ;; This function is called by:
  2603 ;;		_main
  2604 ;; This function uses a non-reentrant model
  2605 ;;
  2606                           psect	text4,local,class=CODE,delta=2,merge=1,group=0
  2607                           	line	178
  2608                           global __ptext4
  2609                           __ptext4:	;psect for function _lcd_num
  2610  061F                     psect	text4
  2611                           	file	"lcd.c"
  2612                           	line	178
  2613                           	global	__size_of_lcd_num
  2614                           	__size_of_lcd_num	equ	__end_of_lcd_num-_lcd_num
  2615  00EA                     	
  2616                           _lcd_num:	
  2617  061F                     ;incstack = 0
  2618                           	opt	stack 5
  2619                           ; Regs used in _lcd_num: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2620                           ;lcd_num@lin stored from wreg
  2621                           	bcf	status, 5	;RP0=0, select bank0
  2622  061F  1283               	bcf	status, 6	;RP1=0, select bank0
  2623  0620  1303               	movwf	(lcd_num@lin)
  2624  0621  00A3               	line	185
  2625                           	
  2626                           l1306:	
  2627  0622                     ;lcd.c: 178: void lcd_num( unsigned char lin, unsigned char col,;lcd.c: 179:            
                                          int num, unsigned char tam );lcd.c: 180: {;lcd.c: 181:     int div;;lcd.c: 182:
                                      unsigned char size;;lcd.c: 183:     char sinal;;lcd.c: 185:     sinal = num < 0;
  2628                           	btfsc	(lcd_num@num+1),7
  2629  0622  1BFB               	goto	u1141
  2630  0623  2E25               	goto	u1140
  2631  0624  2E27               u1141:
  2632  0625                     	movlw	1
  2633  0625  3001               	goto	u1150
  2634  0626  2E28               u1140:
  2635  0627                     	movlw	0
  2636  0627  3000               u1150:
  2637  0628                     	movwf	(??_lcd_num+0)+0
  2638  0628  00A0               	movf	(??_lcd_num+0)+0,w
  2639  0629  0820               	movwf	(lcd_num@sinal)
  2640  062A  00A5               	line	186
  2641                           	
  2642                           l1308:	
  2643  062B                     ;lcd.c: 186:     if( sinal )
  2644                           	movf	((lcd_num@sinal)),w
  2645  062B  0825               	btfsc	status,2
  2646  062C  1903               	goto	u1161
  2647  062D  2E2F               	goto	u1160
  2648  062E  2E30               u1161:
  2649  062F                     	goto	l1312
  2650  062F  2E36               u1160:
  2651  0630                     	line	187
  2652                           	
  2653                           l1310:	
  2654  0630                     ;lcd.c: 187:         num = (~num) + 1;
  2655                           	comf	(lcd_num@num),f
  2656  0630  09FA               	comf	(lcd_num@num+1),f
  2657  0631  09FB               	incf	(lcd_num@num),f
  2658  0632  0AFA               	skipnz
  2659  0633  1903               	incf	(lcd_num@num+1),f
  2660  0634  0AFB               	goto	l1312
  2661  0635  2E36               	
  2662                           l64:	
  2663  0636                     	line	189
  2664                           	
  2665                           l1312:	
  2666  0636                     ;lcd.c: 189:     lcd_lincol(lin, col);
  2667                           	movf	(lcd_num@col),w
  2668  0636  0879               	movwf	(??_lcd_num+0)+0
  2669  0637  00A0               	movf	(??_lcd_num+0)+0,w
  2670  0638  0820               	movwf	(lcd_lincol@col)
  2671  0639  00F3               	movf	(lcd_num@lin),w
  2672  063A  0823               	fcall	_lcd_lincol
  2673  063B  120A  118A  2295  120A  118A  	line	191
  2674                           	
  2675                           l1314:	
  2676  0640                     ;lcd.c: 191:     div=10000;
  2677                           	movlw	010h
  2678  0640  3010               	bcf	status, 5	;RP0=0, select bank0
  2679  0641  1283               	bcf	status, 6	;RP1=0, select bank0
  2680  0642  1303               	movwf	(lcd_num@div)
  2681  0643  00A6               	movlw	027h
  2682  0644  3027               	movwf	((lcd_num@div))+1
  2683  0645  00A7               	line	192
  2684                           	
  2685                           l1316:	
  2686  0646                     ;lcd.c: 192:     size = 5;
  2687                           	movlw	low(05h)
  2688  0646  3005               	movwf	(??_lcd_num+0)+0
  2689  0647  00A0               	movf	(??_lcd_num+0)+0,w
  2690  0648  0820               	movwf	(lcd_num@size)
  2691  0649  00A4               	line	193
  2692                           ;lcd.c: 193:     while( div >= 1 )
  2693                           	goto	l1324
  2694  064A  2E7A               	
  2695                           l66:	
  2696  064B                     	line	195
  2697                           	
  2698                           l1318:	
  2699  064B                     ;lcd.c: 194:     {;lcd.c: 195:         if( num/div == 0 )
  2700                           	bcf	status, 5	;RP0=0, select bank0
  2701  064B  1283               	bcf	status, 6	;RP1=0, select bank0
  2702  064C  1303               	movf	(lcd_num@div+1),w
  2703  064D  0827               	movwf	(___awdiv@divisor+1)
  2704  064E  00F1               	movf	(lcd_num@div),w
  2705  064F  0826               	movwf	(___awdiv@divisor)
  2706  0650  00F0               	movf	(lcd_num@num+1),w
  2707  0651  087B               	movwf	(___awdiv@dividend+1)
  2708  0652  00F3               	movf	(lcd_num@num),w
  2709  0653  087A               	movwf	(___awdiv@dividend)
  2710  0654  00F2               	fcall	___awdiv
  2711  0655  120A  118A  245F  120A  118A  	movf	((0+(?___awdiv))),w
  2712  065A  0870               iorwf	((1+(?___awdiv))),w
  2713  065B  0471               	btfss	status,2
  2714  065C  1D03               	goto	u1171
  2715  065D  2E5F               	goto	u1170
  2716  065E  2E60               u1171:
  2717  065F                     	goto	l1330
  2718  065F  2E92               u1170:
  2719  0660                     	line	196
  2720                           	
  2721                           l1320:	
  2722  0660                     ;lcd.c: 196:             --size;
  2723                           	movlw	01h
  2724  0660  3001               	bcf	status, 5	;RP0=0, select bank0
  2725  0661  1283               	bcf	status, 6	;RP1=0, select bank0
  2726  0662  1303               	subwf	(lcd_num@size),f
  2727  0663  02A4               	goto	l1322
  2728  0664  2E66               	line	197
  2729                           ;lcd.c: 197:         else
  2730                           	
  2731                           l67:	
  2732  0665                     	line	198
  2733                           ;lcd.c: 198:             break;
  2734                           	goto	l1330
  2735  0665  2E92               	
  2736                           l68:	
  2737  0666                     	line	199
  2738                           	
  2739                           l1322:	
  2740  0666                     ;lcd.c: 199:         div/=10;
  2741                           	movlw	0Ah
  2742  0666  300A               	movwf	(___awdiv@divisor)
  2743  0667  00F0               	movlw	0
  2744  0668  3000               	movwf	((___awdiv@divisor))+1
  2745  0669  00F1               	movf	(lcd_num@div+1),w
  2746  066A  0827               	movwf	(___awdiv@dividend+1)
  2747  066B  00F3               	movf	(lcd_num@div),w
  2748  066C  0826               	movwf	(___awdiv@dividend)
  2749  066D  00F2               	fcall	___awdiv
  2750  066E  120A  118A  245F  120A  118A  	movf	(1+(?___awdiv)),w
  2751  0673  0871               	bcf	status, 5	;RP0=0, select bank0
  2752  0674  1283               	bcf	status, 6	;RP1=0, select bank0
  2753  0675  1303               	movwf	(lcd_num@div+1)
  2754  0676  00A7               	movf	(0+(?___awdiv)),w
  2755  0677  0870               	movwf	(lcd_num@div)
  2756  0678  00A6               	goto	l1324
  2757  0679  2E7A               	line	200
  2758                           ;lcd.c: 200:     }
  2759                           	
  2760                           l65:	
  2761  067A                     	line	193
  2762                           	
  2763                           l1324:	
  2764  067A                     ;lcd.c: 193:     while( div >= 1 )
  2765                           	movf	(lcd_num@div+1),w
  2766  067A  0827               	xorlw	80h
  2767  067B  3A80               	movwf	btemp+1
  2768  067C  00FF               	movlw	(0)^80h
  2769  067D  3080               	subwf	btemp+1,w
  2770  067E  027F               	skipz
  2771  067F  1D03               	goto	u1185
  2772  0680  2E83               	movlw	01h
  2773  0681  3001               	subwf	(lcd_num@div),w
  2774  0682  0226               u1185:
  2775  0683                     
  2776                           	skipnc
  2777  0683  1803               	goto	u1181
  2778  0684  2E86               	goto	u1180
  2779  0685  2E87               u1181:
  2780  0686                     	goto	l1318
  2781  0686  2E4B               u1180:
  2782  0687                     	goto	l1330
  2783  0687  2E92               	
  2784                           l69:	
  2785  0688                     	line	202
  2786                           ;lcd.c: 202:     while( tam > (size+sinal) && tam > 1 )
  2787                           	goto	l1330
  2788  0688  2E92               	
  2789                           l71:	
  2790  0689                     	line	204
  2791                           	
  2792                           l1326:	
  2793  0689                     ;lcd.c: 203:     {;lcd.c: 204:         lcd_dataReg(' ');
  2794                           	movlw	low(020h)
  2795  0689  3020               	fcall	_lcd_dataReg
  2796  068A  120A  118A  231A  120A  118A  	line	205
  2797                           	
  2798                           l1328:	
  2799  068F                     ;lcd.c: 205:         --tam;
  2800                           	movlw	01h
  2801  068F  3001               	subwf	(lcd_num@tam),f
  2802  0690  02FC               	goto	l1330
  2803  0691  2E92               	line	206
  2804                           ;lcd.c: 206:     }
  2805                           	
  2806                           l70:	
  2807  0692                     	line	202
  2808                           	
  2809                           l1330:	
  2810  0692                     ;lcd.c: 202:     while( tam > (size+sinal) && tam > 1 )
  2811                           	bcf	status, 5	;RP0=0, select bank0
  2812  0692  1283               	bcf	status, 6	;RP1=0, select bank0
  2813  0693  1303               	movf	(lcd_num@size),w
  2814  0694  0824               	addwf	(lcd_num@sinal),w
  2815  0695  0725               	movwf	(??_lcd_num+0)+0
  2816  0696  00A0               	clrf	(??_lcd_num+0)+0+1
  2817  0697  01A1               	rlf	1+(??_lcd_num+0)+0,f
  2818  0698  0DA1               	
  2819                           	movf	1+(??_lcd_num+0)+0,w
  2820  0699  0821               	xorlw	80h
  2821  069A  3A80               	movwf	(??_lcd_num+2)+0
  2822  069B  00A2               	movlw	80h
  2823  069C  3080               	subwf	(??_lcd_num+2)+0,w
  2824  069D  0222               	skipz
  2825  069E  1D03               	goto	u1195
  2826  069F  2EA2               	movf	(lcd_num@tam),w
  2827  06A0  087C               	subwf	0+(??_lcd_num+0)+0,w
  2828  06A1  0220               u1195:
  2829  06A2                     
  2830                           	skipnc
  2831  06A2  1803               	goto	u1191
  2832  06A3  2EA5               	goto	u1190
  2833  06A4  2EA6               u1191:
  2834  06A5                     	goto	l1334
  2835  06A5  2EAE               u1190:
  2836  06A6                     	
  2837                           l1332:	
  2838  06A6                     	movlw	low(02h)
  2839  06A6  3002               	subwf	(lcd_num@tam),w
  2840  06A7  027C               	skipnc
  2841  06A8  1803               	goto	u1201
  2842  06A9  2EAB               	goto	u1200
  2843  06AA  2EAC               u1201:
  2844  06AB                     	goto	l1326
  2845  06AB  2E89               u1200:
  2846  06AC                     	goto	l1334
  2847  06AC  2EAE               	
  2848                           l73:	
  2849  06AD                     	goto	l1334
  2850  06AD  2EAE               	
  2851                           l74:	
  2852  06AE                     	line	208
  2853                           	
  2854                           l1334:	
  2855  06AE                     ;lcd.c: 208:     if( sinal )
  2856                           	bcf	status, 5	;RP0=0, select bank0
  2857  06AE  1283               	bcf	status, 6	;RP1=0, select bank0
  2858  06AF  1303               	movf	((lcd_num@sinal)),w
  2859  06B0  0825               	btfsc	status,2
  2860  06B1  1903               	goto	u1211
  2861  06B2  2EB4               	goto	u1210
  2862  06B3  2EB5               u1211:
  2863  06B4                     	goto	l76
  2864  06B4  2EBC               u1210:
  2865  06B5                     	line	209
  2866                           	
  2867                           l1336:	
  2868  06B5                     ;lcd.c: 209:         lcd_dataReg('-');
  2869                           	movlw	low(02Dh)
  2870  06B5  302D               	fcall	_lcd_dataReg
  2871  06B6  120A  118A  231A  120A  118A  	goto	l76
  2872  06BB  2EBC               	
  2873                           l75:	
  2874  06BC                     	line	211
  2875                           ;lcd.c: 211:     do
  2876                           	
  2877                           l76:	
  2878  06BC                     	line	213
  2879                           ;lcd.c: 212:     {;lcd.c: 213:         lcd_dataReg( (unsigned char)(num / div) + '0' );

  2880                           	bcf	status, 5	;RP0=0, select bank0
  2881  06BC  1283               	bcf	status, 6	;RP1=0, select bank0
  2882  06BD  1303               	movf	(lcd_num@div+1),w
  2883  06BE  0827               	movwf	(___awdiv@divisor+1)
  2884  06BF  00F1               	movf	(lcd_num@div),w
  2885  06C0  0826               	movwf	(___awdiv@divisor)
  2886  06C1  00F0               	movf	(lcd_num@num+1),w
  2887  06C2  087B               	movwf	(___awdiv@dividend+1)
  2888  06C3  00F3               	movf	(lcd_num@num),w
  2889  06C4  087A               	movwf	(___awdiv@dividend)
  2890  06C5  00F2               	fcall	___awdiv
  2891  06C6  120A  118A  245F  120A  118A  	movf	(0+(?___awdiv)),w
  2892  06CB  0870               	addlw	030h
  2893  06CC  3E30               	fcall	_lcd_dataReg
  2894  06CD  120A  118A  231A  120A  118A  	line	214
  2895                           ;lcd.c: 214:         num = num % div;
  2896                           	bcf	status, 5	;RP0=0, select bank0
  2897  06D2  1283               	bcf	status, 6	;RP1=0, select bank0
  2898  06D3  1303               	movf	(lcd_num@div+1),w
  2899  06D4  0827               	movwf	(___awmod@divisor+1)
  2900  06D5  00F1               	movf	(lcd_num@div),w
  2901  06D6  0826               	movwf	(___awmod@divisor)
  2902  06D7  00F0               	movf	(lcd_num@num+1),w
  2903  06D8  087B               	movwf	(___awmod@dividend+1)
  2904  06D9  00F3               	movf	(lcd_num@num),w
  2905  06DA  087A               	movwf	(___awmod@dividend)
  2906  06DB  00F2               	fcall	___awmod
  2907  06DC  120A  118A  238F  120A  118A  	movf	(1+(?___awmod)),w
  2908  06E1  0871               	movwf	(lcd_num@num+1)
  2909  06E2  00FB               	movf	(0+(?___awmod)),w
  2910  06E3  0870               	movwf	(lcd_num@num)
  2911  06E4  00FA               	line	215
  2912                           ;lcd.c: 215:         div/=10;
  2913                           	movlw	0Ah
  2914  06E5  300A               	movwf	(___awdiv@divisor)
  2915  06E6  00F0               	movlw	0
  2916  06E7  3000               	movwf	((___awdiv@divisor))+1
  2917  06E8  00F1               	bcf	status, 5	;RP0=0, select bank0
  2918  06E9  1283               	bcf	status, 6	;RP1=0, select bank0
  2919  06EA  1303               	movf	(lcd_num@div+1),w
  2920  06EB  0827               	movwf	(___awdiv@dividend+1)
  2921  06EC  00F3               	movf	(lcd_num@div),w
  2922  06ED  0826               	movwf	(___awdiv@dividend)
  2923  06EE  00F2               	fcall	___awdiv
  2924  06EF  120A  118A  245F  120A  118A  	movf	(1+(?___awdiv)),w
  2925  06F4  0871               	bcf	status, 5	;RP0=0, select bank0
  2926  06F5  1283               	bcf	status, 6	;RP1=0, select bank0
  2927  06F6  1303               	movwf	(lcd_num@div+1)
  2928  06F7  00A7               	movf	(0+(?___awdiv)),w
  2929  06F8  0870               	movwf	(lcd_num@div)
  2930  06F9  00A6               	line	216
  2931                           	
  2932                           l1338:	
  2933  06FA                     ;lcd.c: 216:     }
  2934                           	movf	(lcd_num@div+1),w
  2935  06FA  0827               	xorlw	80h
  2936  06FB  3A80               	movwf	btemp+1
  2937  06FC  00FF               	movlw	(0)^80h
  2938  06FD  3080               	subwf	btemp+1,w
  2939  06FE  027F               	skipz
  2940  06FF  1D03               	goto	u1225
  2941  0700  2F03               	movlw	01h
  2942  0701  3001               	subwf	(lcd_num@div),w
  2943  0702  0226               u1225:
  2944  0703                     
  2945                           	skipnc
  2946  0703  1803               	goto	u1221
  2947  0704  2F06               	goto	u1220
  2948  0705  2F07               u1221:
  2949  0706                     	goto	l76
  2950  0706  2EBC               u1220:
  2951  0707                     	goto	l78
  2952  0707  2F08               	
  2953                           l77:	
  2954  0708                     	line	218
  2955                           	
  2956                           l78:	
  2957  0708                     	return
  2958  0708  0008               	opt stack 0
  2959                           GLOBAL	__end_of_lcd_num
  2960                           	__end_of_lcd_num:
  2961  0709                     	signat	_lcd_num,16505
  2962                           	global	_lcd_lincol
  2963                           
  2964 ;; *************** function _lcd_lincol *****************
  2965 ;; Defined at:
  2966 ;;		line 111 in file "lcd.c"
  2967 ;; Parameters:    Size  Location     Type
  2968 ;;  lin             1    wreg     unsigned char 
  2969 ;;  col             1    3[COMMON] unsigned char 
  2970 ;; Auto vars:     Size  Location     Type
  2971 ;;  lin             1    5[COMMON] unsigned char 
  2972 ;; Return value:  Size  Location     Type
  2973 ;;                  1    wreg      void 
  2974 ;; Registers used:
  2975 ;;		wreg, status,2, status,0, pclath, cstack
  2976 ;; Tracked objects:
  2977 ;;		On entry : 0/0
  2978 ;;		On exit  : 0/0
  2979 ;;		Unchanged: 0/0
  2980 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2981 ;;      Params:         1       0       0       0       0
  2982 ;;      Locals:         1       0       0       0       0
  2983 ;;      Temps:          1       0       0       0       0
  2984 ;;      Totals:         3       0       0       0       0
  2985 ;;Total ram usage:        3 bytes
  2986 ;; Hardware stack levels used:    1
  2987 ;; Hardware stack levels required when called:    1
  2988 ;; This function calls:
  2989 ;;		_lcd_instReg
  2990 ;; This function is called by:
  2991 ;;		_lcd_print
  2992 ;;		_lcd_num
  2993 ;; This function uses a non-reentrant model
  2994 ;;
  2995                           psect	text5,local,class=CODE,delta=2,merge=1,group=0
  2996                           	line	111
  2997                           global __ptext5
  2998                           __ptext5:	;psect for function _lcd_lincol
  2999  0295                     psect	text5
  3000                           	file	"lcd.c"
  3001                           	line	111
  3002                           	global	__size_of_lcd_lincol
  3003                           	__size_of_lcd_lincol	equ	__end_of_lcd_lincol-_lcd_lincol
  3004  0013                     	
  3005                           _lcd_lincol:	
  3006  0295                     ;incstack = 0
  3007                           	opt	stack 5
  3008                           ; Regs used in _lcd_lincol: [wreg+status,2+status,0+pclath+cstack]
  3009                           ;lcd_lincol@lin stored from wreg
  3010                           	movwf	(lcd_lincol@lin)
  3011  0295  00F5               	line	113
  3012                           	
  3013                           l1154:	
  3014  0296                     ;lcd.c: 111: void lcd_lincol( unsigned char lin, unsigned char col);lcd.c: 112: {;lcd.c:
                                  113:     lcd_instReg( (0x80+((0x40 * lin) + (col + 0x00) & 0x7F)) );
  3015                           	movf	(lcd_lincol@lin),w
  3016  0296  0875               	movwf	(??_lcd_lincol+0)+0
  3017  0297  00F4               	movlw	06h
  3018  0298  3006               u815:
  3019  0299                     	clrc
  3020  0299  1003               	rlf	(??_lcd_lincol+0)+0,f
  3021  029A  0DF4               	addlw	-1
  3022  029B  3EFF               	skipz
  3023  029C  1D03               	goto	u815
  3024  029D  2A99               	movf	(lcd_lincol@col),w
  3025  029E  0873               	addwf	0+(??_lcd_lincol+0)+0,w
  3026  029F  0774               	andlw	07Fh
  3027  02A0  397F               	addlw	080h
  3028  02A1  3E80               	fcall	_lcd_instReg
  3029  02A2  120A  118A  24D0  120A  118A  	line	114
  3030                           	
  3031                           l49:	
  3032  02A7                     	return
  3033  02A7  0008               	opt stack 0
  3034                           GLOBAL	__end_of_lcd_lincol
  3035                           	__end_of_lcd_lincol:
  3036  02A8                     	signat	_lcd_lincol,8313
  3037                           	global	_lcd_dataReg
  3038                           
  3039 ;; *************** function _lcd_dataReg *****************
  3040 ;; Defined at:
  3041 ;;		line 93 in file "lcd.c"
  3042 ;; Parameters:    Size  Location     Type
  3043 ;;  d               1    wreg     unsigned char 
  3044 ;; Auto vars:     Size  Location     Type
  3045 ;;  d               1    2[COMMON] unsigned char 
  3046 ;; Return value:  Size  Location     Type
  3047 ;;                  1    wreg      void 
  3048 ;; Registers used:
  3049 ;;		wreg, status,2, status,0
  3050 ;; Tracked objects:
  3051 ;;		On entry : 0/0
  3052 ;;		On exit  : 0/0
  3053 ;;		Unchanged: 0/0
  3054 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3055 ;;      Params:         0       0       0       0       0
  3056 ;;      Locals:         1       0       0       0       0
  3057 ;;      Temps:          2       0       0       0       0
  3058 ;;      Totals:         3       0       0       0       0
  3059 ;;Total ram usage:        3 bytes
  3060 ;; Hardware stack levels used:    1
  3061 ;; This function calls:
  3062 ;;		Nothing
  3063 ;; This function is called by:
  3064 ;;		_lcd_print
  3065 ;;		_lcd_num
  3066 ;; This function uses a non-reentrant model
  3067 ;;
  3068                           psect	text6,local,class=CODE,delta=2,merge=1,group=0
  3069                           	line	93
  3070                           global __ptext6
  3071                           __ptext6:	;psect for function _lcd_dataReg
  3072  031A                     psect	text6
  3073                           	file	"lcd.c"
  3074                           	line	93
  3075                           	global	__size_of_lcd_dataReg
  3076                           	__size_of_lcd_dataReg	equ	__end_of_lcd_dataReg-_lcd_dataReg
  3077  0036                     	
  3078                           _lcd_dataReg:	
  3079  031A                     ;incstack = 0
  3080                           	opt	stack 6
  3081                           ; Regs used in _lcd_dataReg: [wreg+status,2+status,0]
  3082                           ;lcd_dataReg@d stored from wreg
  3083                           	movwf	(lcd_dataReg@d)
  3084  031A  00F2               	line	95
  3085                           	
  3086                           l1136:	
  3087  031B                     ;lcd.c: 93: void lcd_dataReg( unsigned char d );lcd.c: 94: {;lcd.c: 95:     PORTDbits.RD
                                 2 = 1;
  3088                           	bcf	status, 5	;RP0=0, select bank0
  3089  031B  1283               	bcf	status, 6	;RP1=0, select bank0
  3090  031C  1303               	bsf	(8),2	;volatile
  3091  031D  1508               	line	96
  3092                           	
  3093                           l1138:	
  3094  031E                     ;lcd.c: 96:     PORTD = ((PORTD & 0x0F)|(d >> 4<<4));
  3095                           	movf	(lcd_dataReg@d),w
  3096  031E  0872               	movwf	(??_lcd_dataReg+0)+0
  3097  031F  00F0               	movlw	04h
  3098  0320  3004               u785:
  3099  0321                     	clrc
  3100  0321  1003               	rrf	(??_lcd_dataReg+0)+0,f
  3101  0322  0CF0               	addlw	-1
  3102  0323  3EFF               	skipz
  3103  0324  1D03               	goto	u785
  3104  0325  2B21               	movf	0+(??_lcd_dataReg+0)+0,w
  3105  0326  0870               	movwf	(??_lcd_dataReg+1)+0
  3106  0327  00F1               	movlw	04h
  3107  0328  3004               u795:
  3108  0329                     	clrc
  3109  0329  1003               	rlf	(??_lcd_dataReg+1)+0,f
  3110  032A  0DF1               	addlw	-1
  3111  032B  3EFF               	skipz
  3112  032C  1D03               	goto	u795
  3113  032D  2B29               	movf	(8),w	;volatile
  3114  032E  0808               	andlw	0Fh
  3115  032F  390F               	iorwf	0+(??_lcd_dataReg+1)+0,w
  3116  0330  0471               	movwf	(8)	;volatile
  3117  0331  0088               	line	97
  3118                           	
  3119                           l1140:	
  3120  0332                     ;lcd.c: 97:     PORTDbits.RD3 = 0;
  3121                           	bcf	(8),3	;volatile
  3122  0332  1188               	line	98
  3123                           	
  3124                           l1142:	
  3125  0333                     ;lcd.c: 98:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  3126                           	opt asmopt_push
  3127                           opt asmopt_off
  3128                           	movlw	13
  3129  0333  300D               movwf	((??_lcd_dataReg+0)+0),f
  3130  0334  00F0               	u1337:
  3131  0335                     decfsz	(??_lcd_dataReg+0)+0,f
  3132  0335  0BF0               	goto	u1337
  3133  0336  2B35               opt asmopt_pop
  3134                           
  3135                           	line	99
  3136                           	
  3137                           l1144:	
  3138  0337                     ;lcd.c: 99:     PORTDbits.RD3 = 1;
  3139                           	bcf	status, 5	;RP0=0, select bank0
  3140  0337  1283               	bcf	status, 6	;RP1=0, select bank0
  3141  0338  1303               	bsf	(8),3	;volatile
  3142  0339  1588               	line	101
  3143                           	
  3144                           l1146:	
  3145  033A                     ;lcd.c: 101:     PORTDbits.RD2 = 1;
  3146                           	bsf	(8),2	;volatile
  3147  033A  1508               	line	102
  3148                           	
  3149                           l1148:	
  3150  033B                     ;lcd.c: 102:     PORTD = ((PORTD & 0x0F)|(d<<4));
  3151                           	movf	(lcd_dataReg@d),w
  3152  033B  0872               	movwf	(??_lcd_dataReg+0)+0
  3153  033C  00F0               	movlw	04h
  3154  033D  3004               u805:
  3155  033E                     	clrc
  3156  033E  1003               	rlf	(??_lcd_dataReg+0)+0,f
  3157  033F  0DF0               	addlw	-1
  3158  0340  3EFF               	skipz
  3159  0341  1D03               	goto	u805
  3160  0342  2B3E               	movf	(8),w	;volatile
  3161  0343  0808               	andlw	0Fh
  3162  0344  390F               	iorwf	0+(??_lcd_dataReg+0)+0,w
  3163  0345  0470               	movwf	(8)	;volatile
  3164  0346  0088               	line	103
  3165                           	
  3166                           l1150:	
  3167  0347                     ;lcd.c: 103:     PORTDbits.RD3 = 0;
  3168                           	bcf	(8),3	;volatile
  3169  0347  1188               	line	104
  3170                           ;lcd.c: 104:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  3171                           	opt asmopt_push
  3172                           opt asmopt_off
  3173                           	movlw	13
  3174  0348  300D               movwf	((??_lcd_dataReg+0)+0),f
  3175  0349  00F0               	u1347:
  3176  034A                     decfsz	(??_lcd_dataReg+0)+0,f
  3177  034A  0BF0               	goto	u1347
  3178  034B  2B4A               opt asmopt_pop
  3179                           
  3180                           	line	105
  3181                           	
  3182                           l1152:	
  3183  034C                     ;lcd.c: 105:     PORTDbits.RD3 = 1;
  3184                           	bcf	status, 5	;RP0=0, select bank0
  3185  034C  1283               	bcf	status, 6	;RP1=0, select bank0
  3186  034D  1303               	bsf	(8),3	;volatile
  3187  034E  1588               	line	106
  3188                           	
  3189                           l46:	
  3190  034F                     	return
  3191  034F  0008               	opt stack 0
  3192                           GLOBAL	__end_of_lcd_dataReg
  3193                           	__end_of_lcd_dataReg:
  3194  0350                     	signat	_lcd_dataReg,4217
  3195                           	global	___awmod
  3196                           
  3197 ;; *************** function ___awmod *****************
  3198 ;; Defined at:
  3199 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awmod.c"
  3200 ;; Parameters:    Size  Location     Type
  3201 ;;  divisor         2    0[COMMON] int 
  3202 ;;  dividend        2    2[COMMON] int 
  3203 ;; Auto vars:     Size  Location     Type
  3204 ;;  sign            1    6[COMMON] unsigned char 
  3205 ;;  counter         1    5[COMMON] unsigned char 
  3206 ;; Return value:  Size  Location     Type
  3207 ;;                  2    0[COMMON] int 
  3208 ;; Registers used:
  3209 ;;		wreg, status,2, status,0
  3210 ;; Tracked objects:
  3211 ;;		On entry : 0/0
  3212 ;;		On exit  : 0/0
  3213 ;;		Unchanged: 0/0
  3214 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3215 ;;      Params:         4       0       0       0       0
  3216 ;;      Locals:         2       0       0       0       0
  3217 ;;      Temps:          1       0       0       0       0
  3218 ;;      Totals:         7       0       0       0       0
  3219 ;;Total ram usage:        7 bytes
  3220 ;; Hardware stack levels used:    1
  3221 ;; This function calls:
  3222 ;;		Nothing
  3223 ;; This function is called by:
  3224 ;;		_lcd_num
  3225 ;; This function uses a non-reentrant model
  3226 ;;
  3227                           psect	text7,local,class=CODE,delta=2,merge=1,group=1
  3228                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awmod.c"
  3229                           	line	5
  3230                           global __ptext7
  3231                           __ptext7:	;psect for function ___awmod
  3232  038F                     psect	text7
  3233                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awmod.c"
  3234                           	line	5
  3235                           	global	__size_of___awmod
  3236                           	__size_of___awmod	equ	__end_of___awmod-___awmod
  3237  0063                     	
  3238                           ___awmod:	
  3239  038F                     ;incstack = 0
  3240                           	opt	stack 6
  3241                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3242                           	line	12
  3243                           	
  3244                           l1214:	
  3245  038F                     	clrf	(___awmod@sign)
  3246  038F  01F6               	line	13
  3247                           	
  3248                           l1216:	
  3249  0390                     	btfss	(___awmod@dividend+1),7
  3250  0390  1FF3               	goto	u961
  3251  0391  2B93               	goto	u960
  3252  0392  2B94               u961:
  3253  0393                     	goto	l1222
  3254  0393  2B9C               u960:
  3255  0394                     	line	14
  3256                           	
  3257                           l1218:	
  3258  0394                     	comf	(___awmod@dividend),f
  3259  0394  09F2               	comf	(___awmod@dividend+1),f
  3260  0395  09F3               	incf	(___awmod@dividend),f
  3261  0396  0AF2               	skipnz
  3262  0397  1903               	incf	(___awmod@dividend+1),f
  3263  0398  0AF3               	line	15
  3264                           	
  3265                           l1220:	
  3266  0399                     	clrf	(___awmod@sign)
  3267  0399  01F6               	incf	(___awmod@sign),f
  3268  039A  0AF6               	goto	l1222
  3269  039B  2B9C               	line	16
  3270                           	
  3271                           l381:	
  3272  039C                     	line	17
  3273                           	
  3274                           l1222:	
  3275  039C                     	btfss	(___awmod@divisor+1),7
  3276  039C  1FF1               	goto	u971
  3277  039D  2B9F               	goto	u970
  3278  039E  2BA0               u971:
  3279  039F                     	goto	l1226
  3280  039F  2BA6               u970:
  3281  03A0                     	line	18
  3282                           	
  3283                           l1224:	
  3284  03A0                     	comf	(___awmod@divisor),f
  3285  03A0  09F0               	comf	(___awmod@divisor+1),f
  3286  03A1  09F1               	incf	(___awmod@divisor),f
  3287  03A2  0AF0               	skipnz
  3288  03A3  1903               	incf	(___awmod@divisor+1),f
  3289  03A4  0AF1               	goto	l1226
  3290  03A5  2BA6               	
  3291                           l382:	
  3292  03A6                     	line	19
  3293                           	
  3294                           l1226:	
  3295  03A6                     	movf	((___awmod@divisor)),w
  3296  03A6  0870               iorwf	((___awmod@divisor+1)),w
  3297  03A7  0471               	btfsc	status,2
  3298  03A8  1903               	goto	u981
  3299  03A9  2BAB               	goto	u980
  3300  03AA  2BAC               u981:
  3301  03AB                     	goto	l1244
  3302  03AB  2BE1               u980:
  3303  03AC                     	line	20
  3304                           	
  3305                           l1228:	
  3306  03AC                     	clrf	(___awmod@counter)
  3307  03AC  01F5               	incf	(___awmod@counter),f
  3308  03AD  0AF5               	line	21
  3309                           	goto	l1234
  3310  03AE  2BBB               	
  3311                           l385:	
  3312  03AF                     	line	22
  3313                           	
  3314                           l1230:	
  3315  03AF                     	movlw	01h
  3316  03AF  3001               	
  3317                           u995:
  3318  03B0                     	clrc
  3319  03B0  1003               	rlf	(___awmod@divisor),f
  3320  03B1  0DF0               	rlf	(___awmod@divisor+1),f
  3321  03B2  0DF1               	addlw	-1
  3322  03B3  3EFF               	skipz
  3323  03B4  1D03               	goto	u995
  3324  03B5  2BB0               	line	23
  3325                           	
  3326                           l1232:	
  3327  03B6                     	movlw	low(01h)
  3328  03B6  3001               	movwf	(??___awmod+0)+0
  3329  03B7  00F4               	movf	(??___awmod+0)+0,w
  3330  03B8  0874               	addwf	(___awmod@counter),f
  3331  03B9  07F5               	goto	l1234
  3332  03BA  2BBB               	line	24
  3333                           	
  3334                           l384:	
  3335  03BB                     	line	21
  3336                           	
  3337                           l1234:	
  3338  03BB                     	btfss	(___awmod@divisor+1),(15)&7
  3339  03BB  1FF1               	goto	u1001
  3340  03BC  2BBE               	goto	u1000
  3341  03BD  2BBF               u1001:
  3342  03BE                     	goto	l1230
  3343  03BE  2BAF               u1000:
  3344  03BF                     	goto	l1236
  3345  03BF  2BC1               	
  3346                           l386:	
  3347  03C0                     	goto	l1236
  3348  03C0  2BC1               	line	25
  3349                           	
  3350                           l387:	
  3351  03C1                     	line	26
  3352                           	
  3353                           l1236:	
  3354  03C1                     	movf	(___awmod@divisor+1),w
  3355  03C1  0871               	subwf	(___awmod@dividend+1),w
  3356  03C2  0273               	skipz
  3357  03C3  1D03               	goto	u1015
  3358  03C4  2BC7               	movf	(___awmod@divisor),w
  3359  03C5  0870               	subwf	(___awmod@dividend),w
  3360  03C6  0272               u1015:
  3361  03C7                     	skipc
  3362  03C7  1C03               	goto	u1011
  3363  03C8  2BCA               	goto	u1010
  3364  03C9  2BCB               u1011:
  3365  03CA                     	goto	l1240
  3366  03CA  2BD2               u1010:
  3367  03CB                     	line	27
  3368                           	
  3369                           l1238:	
  3370  03CB                     	movf	(___awmod@divisor),w
  3371  03CB  0870               	subwf	(___awmod@dividend),f
  3372  03CC  02F2               	movf	(___awmod@divisor+1),w
  3373  03CD  0871               	skipc
  3374  03CE  1C03               	decf	(___awmod@dividend+1),f
  3375  03CF  03F3               	subwf	(___awmod@dividend+1),f
  3376  03D0  02F3               	goto	l1240
  3377  03D1  2BD2               	
  3378                           l388:	
  3379  03D2                     	line	28
  3380                           	
  3381                           l1240:	
  3382  03D2                     	movlw	01h
  3383  03D2  3001               	
  3384                           u1025:
  3385  03D3                     	clrc
  3386  03D3  1003               	rrf	(___awmod@divisor+1),f
  3387  03D4  0CF1               	rrf	(___awmod@divisor),f
  3388  03D5  0CF0               	addlw	-1
  3389  03D6  3EFF               	skipz
  3390  03D7  1D03               	goto	u1025
  3391  03D8  2BD3               	line	29
  3392                           	
  3393                           l1242:	
  3394  03D9                     	movlw	01h
  3395  03D9  3001               	subwf	(___awmod@counter),f
  3396  03DA  02F5               	btfss	status,2
  3397  03DB  1D03               	goto	u1031
  3398  03DC  2BDE               	goto	u1030
  3399  03DD  2BDF               u1031:
  3400  03DE                     	goto	l1236
  3401  03DE  2BC1               u1030:
  3402  03DF                     	goto	l1244
  3403  03DF  2BE1               	
  3404                           l389:	
  3405  03E0                     	goto	l1244
  3406  03E0  2BE1               	line	30
  3407                           	
  3408                           l383:	
  3409  03E1                     	line	31
  3410                           	
  3411                           l1244:	
  3412  03E1                     	movf	((___awmod@sign)),w
  3413  03E1  0876               	btfsc	status,2
  3414  03E2  1903               	goto	u1041
  3415  03E3  2BE5               	goto	u1040
  3416  03E4  2BE6               u1041:
  3417  03E5                     	goto	l1248
  3418  03E5  2BEC               u1040:
  3419  03E6                     	line	32
  3420                           	
  3421                           l1246:	
  3422  03E6                     	comf	(___awmod@dividend),f
  3423  03E6  09F2               	comf	(___awmod@dividend+1),f
  3424  03E7  09F3               	incf	(___awmod@dividend),f
  3425  03E8  0AF2               	skipnz
  3426  03E9  1903               	incf	(___awmod@dividend+1),f
  3427  03EA  0AF3               	goto	l1248
  3428  03EB  2BEC               	
  3429                           l390:	
  3430  03EC                     	line	33
  3431                           	
  3432                           l1248:	
  3433  03EC                     	movf	(___awmod@dividend+1),w
  3434  03EC  0873               	movwf	(?___awmod+1)
  3435  03ED  00F1               	movf	(___awmod@dividend),w
  3436  03EE  0872               	movwf	(?___awmod)
  3437  03EF  00F0               	goto	l391
  3438  03F0  2BF1               	
  3439                           l1250:	
  3440  03F1                     	line	34
  3441                           	
  3442                           l391:	
  3443  03F1                     	return
  3444  03F1  0008               	opt stack 0
  3445                           GLOBAL	__end_of___awmod
  3446                           	__end_of___awmod:
  3447  03F2                     	signat	___awmod,8314
  3448                           	global	_lcd_init
  3449                           
  3450 ;; *************** function _lcd_init *****************
  3451 ;; Defined at:
  3452 ;;		line 121 in file "lcd.c"
  3453 ;; Parameters:    Size  Location     Type
  3454 ;;		None
  3455 ;; Auto vars:     Size  Location     Type
  3456 ;;		None
  3457 ;; Return value:  Size  Location     Type
  3458 ;;                  1    wreg      void 
  3459 ;; Registers used:
  3460 ;;		wreg, status,2, status,0, pclath, cstack
  3461 ;; Tracked objects:
  3462 ;;		On entry : 0/0
  3463 ;;		On exit  : 0/0
  3464 ;;		Unchanged: 0/0
  3465 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3466 ;;      Params:         0       0       0       0       0
  3467 ;;      Locals:         0       0       0       0       0
  3468 ;;      Temps:          0       0       0       0       0
  3469 ;;      Totals:         0       0       0       0       0
  3470 ;;Total ram usage:        0 bytes
  3471 ;; Hardware stack levels used:    1
  3472 ;; Hardware stack levels required when called:    1
  3473 ;; This function calls:
  3474 ;;		_delay
  3475 ;;		_lcd_instReg
  3476 ;; This function is called by:
  3477 ;;		_main
  3478 ;; This function uses a non-reentrant model
  3479 ;;
  3480                           psect	text8,local,class=CODE,delta=2,merge=1,group=0
  3481                           	file	"lcd.c"
  3482                           	line	121
  3483                           global __ptext8
  3484                           __ptext8:	;psect for function _lcd_init
  3485  0350                     psect	text8
  3486                           	file	"lcd.c"
  3487                           	line	121
  3488                           	global	__size_of_lcd_init
  3489                           	__size_of_lcd_init	equ	__end_of_lcd_init-_lcd_init
  3490  003F                     	
  3491                           _lcd_init:	
  3492  0350                     ;incstack = 0
  3493                           	opt	stack 6
  3494                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  3495                           	line	123
  3496                           	
  3497                           l1278:	
  3498  0350                     ;lcd.c: 123:     delay(100);
  3499                           	movlw	064h
  3500  0350  3064               	movwf	(delay@t)
  3501  0351  00F0               	movlw	0
  3502  0352  3000               	movwf	((delay@t))+1
  3503  0353  00F1               	fcall	_delay
  3504  0354  120A  118A  22A8  120A  118A  	line	124
  3505                           	
  3506                           l1280:	
  3507  0359                     ;lcd.c: 124:     TRISDbits.TRISD2 = 0;
  3508                           	bsf	status, 5	;RP0=1, select bank1
  3509  0359  1683               	bcf	status, 6	;RP1=0, select bank1
  3510  035A  1303               	bcf	(136)^080h,2	;volatile
  3511  035B  1108               	line	125
  3512                           	
  3513                           l1282:	
  3514  035C                     ;lcd.c: 125:     TRISDbits.TRISD3 = 0;
  3515                           	bcf	(136)^080h,3	;volatile
  3516  035C  1188               	line	126
  3517                           	
  3518                           l1284:	
  3519  035D                     ;lcd.c: 126:     TRISDbits.TRISD4 = 0;
  3520                           	bcf	(136)^080h,4	;volatile
  3521  035D  1208               	line	127
  3522                           	
  3523                           l1286:	
  3524  035E                     ;lcd.c: 127:     TRISDbits.TRISD5 = 0;
  3525                           	bcf	(136)^080h,5	;volatile
  3526  035E  1288               	line	128
  3527                           	
  3528                           l1288:	
  3529  035F                     ;lcd.c: 128:     TRISDbits.TRISD6 = 0;
  3530                           	bcf	(136)^080h,6	;volatile
  3531  035F  1308               	line	129
  3532                           	
  3533                           l1290:	
  3534  0360                     ;lcd.c: 129:     TRISDbits.TRISD7 = 0;
  3535                           	bcf	(136)^080h,7	;volatile
  3536  0360  1388               	line	131
  3537                           ;lcd.c: 131:     delay(100);
  3538                           	movlw	064h
  3539  0361  3064               	movwf	(delay@t)
  3540  0362  00F0               	movlw	0
  3541  0363  3000               	movwf	((delay@t))+1
  3542  0364  00F1               	fcall	_delay
  3543  0365  120A  118A  22A8  120A  118A  	line	132
  3544                           	
  3545                           l1292:	
  3546  036A                     ;lcd.c: 132:     PORTDbits.RD3 = 1;
  3547                           	bcf	status, 5	;RP0=0, select bank0
  3548  036A  1283               	bcf	status, 6	;RP1=0, select bank0
  3549  036B  1303               	bsf	(8),3	;volatile
  3550  036C  1588               	line	133
  3551                           ;lcd.c: 133:     lcd_instReg( 0x20|0x00|0x08 );
  3552                           	movlw	low(028h)
  3553  036D  3028               	fcall	_lcd_instReg
  3554  036E  120A  118A  24D0  120A  118A  	line	134
  3555                           ;lcd.c: 134:     lcd_instReg( 0x08|0x04|0x00|0x00 );
  3556                           	movlw	low(0Ch)
  3557  0373  300C               	fcall	_lcd_instReg
  3558  0374  120A  118A  24D0  120A  118A  	line	135
  3559                           ;lcd.c: 135:     lcd_instReg( 0x01 );
  3560                           	movlw	low(01h)
  3561  0379  3001               	fcall	_lcd_instReg
  3562  037A  120A  118A  24D0  120A  118A  	line	136
  3563                           ;lcd.c: 136:     lcd_instReg( 0x02 );
  3564                           	movlw	low(02h)
  3565  037F  3002               	fcall	_lcd_instReg
  3566  0380  120A  118A  24D0  120A  118A  	line	137
  3567                           ;lcd.c: 137:     delay(100);
  3568                           	movlw	064h
  3569  0385  3064               	movwf	(delay@t)
  3570  0386  00F0               	movlw	0
  3571  0387  3000               	movwf	((delay@t))+1
  3572  0388  00F1               	fcall	_delay
  3573  0389  120A  118A  22A8  120A  118A  	line	138
  3574                           	
  3575                           l52:	
  3576  038E                     	return
  3577  038E  0008               	opt stack 0
  3578                           GLOBAL	__end_of_lcd_init
  3579                           	__end_of_lcd_init:
  3580  038F                     	signat	_lcd_init,89
  3581                           	global	_lcd_instReg
  3582                           
  3583 ;; *************** function _lcd_instReg *****************
  3584 ;; Defined at:
  3585 ;;		line 58 in file "lcd.c"
  3586 ;; Parameters:    Size  Location     Type
  3587 ;;  i               1    wreg     unsigned char 
  3588 ;; Auto vars:     Size  Location     Type
  3589 ;;  i               1    2[COMMON] unsigned char 
  3590 ;; Return value:  Size  Location     Type
  3591 ;;                  1    wreg      void 
  3592 ;; Registers used:
  3593 ;;		wreg, status,2, status,0
  3594 ;; Tracked objects:
  3595 ;;		On entry : 0/0
  3596 ;;		On exit  : 0/0
  3597 ;;		Unchanged: 0/0
  3598 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3599 ;;      Params:         0       0       0       0       0
  3600 ;;      Locals:         1       0       0       0       0
  3601 ;;      Temps:          2       0       0       0       0
  3602 ;;      Totals:         3       0       0       0       0
  3603 ;;Total ram usage:        3 bytes
  3604 ;; Hardware stack levels used:    1
  3605 ;; This function calls:
  3606 ;;		Nothing
  3607 ;; This function is called by:
  3608 ;;		_lcd_lincol
  3609 ;;		_lcd_init
  3610 ;;		_lcd_clr
  3611 ;; This function uses a non-reentrant model
  3612 ;;
  3613                           psect	text9,local,class=CODE,delta=2,merge=1,group=0
  3614                           	line	58
  3615                           global __ptext9
  3616                           __ptext9:	;psect for function _lcd_instReg
  3617  04D0                     psect	text9
  3618                           	file	"lcd.c"
  3619                           	line	58
  3620                           	global	__size_of_lcd_instReg
  3621                           	__size_of_lcd_instReg	equ	__end_of_lcd_instReg-_lcd_instReg
  3622  008B                     	
  3623                           _lcd_instReg:	
  3624  04D0                     ;incstack = 0
  3625                           	opt	stack 5
  3626                           ; Regs used in _lcd_instReg: [wreg+status,2+status,0]
  3627                           ;lcd_instReg@i stored from wreg
  3628                           	movwf	(lcd_instReg@i)
  3629  04D0  00F2               	line	60
  3630                           	
  3631                           l1088:	
  3632  04D1                     ;lcd.c: 58: void lcd_instReg( unsigned char i );lcd.c: 59: {;lcd.c: 60:     PORTDbits.RD
                                 2 = 0;
  3633                           	bcf	status, 5	;RP0=0, select bank0
  3634  04D1  1283               	bcf	status, 6	;RP1=0, select bank0
  3635  04D2  1303               	bcf	(8),2	;volatile
  3636  04D3  1108               	line	61
  3637                           	
  3638                           l1090:	
  3639  04D4                     ;lcd.c: 61:     PORTD = ((PORTD & 0x0F)|(i>>4<<4));
  3640                           	movf	(lcd_instReg@i),w
  3641  04D4  0872               	movwf	(??_lcd_instReg+0)+0
  3642  04D5  00F0               	movlw	04h
  3643  04D6  3004               u675:
  3644  04D7                     	clrc
  3645  04D7  1003               	rrf	(??_lcd_instReg+0)+0,f
  3646  04D8  0CF0               	addlw	-1
  3647  04D9  3EFF               	skipz
  3648  04DA  1D03               	goto	u675
  3649  04DB  2CD7               	movf	0+(??_lcd_instReg+0)+0,w
  3650  04DC  0870               	movwf	(??_lcd_instReg+1)+0
  3651  04DD  00F1               	movlw	04h
  3652  04DE  3004               u685:
  3653  04DF                     	clrc
  3654  04DF  1003               	rlf	(??_lcd_instReg+1)+0,f
  3655  04E0  0DF1               	addlw	-1
  3656  04E1  3EFF               	skipz
  3657  04E2  1D03               	goto	u685
  3658  04E3  2CDF               	movf	(8),w	;volatile
  3659  04E4  0808               	andlw	0Fh
  3660  04E5  390F               	iorwf	0+(??_lcd_instReg+1)+0,w
  3661  04E6  0471               	movwf	(8)	;volatile
  3662  04E7  0088               	line	63
  3663                           	
  3664                           l1092:	
  3665  04E8                     ;lcd.c: 63:     PORTDbits.RD3 = 0;
  3666                           	bcf	(8),3	;volatile
  3667  04E8  1188               	line	64
  3668                           ;lcd.c: 64:     if( i == 0x01 || i == 0x02 )
  3669                           		decf	((lcd_instReg@i)),w
  3670  04E9  0372               	btfsc	status,2
  3671  04EA  1903               	goto	u691
  3672  04EB  2CED               	goto	u690
  3673  04EC  2CEE               u691:
  3674  04ED                     	goto	l1096
  3675  04ED  2CF5               u690:
  3676  04EE                     	
  3677                           l1094:	
  3678  04EE                     		movlw	2
  3679  04EE  3002               	xorwf	((lcd_instReg@i)),w
  3680  04EF  0672               	btfss	status,2
  3681  04F0  1D03               	goto	u701
  3682  04F1  2CF3               	goto	u700
  3683  04F2  2CF4               u701:
  3684  04F3                     	goto	l1098
  3685  04F3  2CFF               u700:
  3686  04F4                     	goto	l1096
  3687  04F4  2CF5               	
  3688                           l36:	
  3689  04F5                     	line	65
  3690                           	
  3691                           l1096:	
  3692  04F5                     ;lcd.c: 65:         _delay((unsigned long)((2)*(4000000/4000.0)));
  3693                           	opt asmopt_push
  3694                           opt asmopt_off
  3695                           movlw	3
  3696  04F5  3003               movwf	((??_lcd_instReg+0)+0+1),f
  3697  04F6  00F1               	movlw	151
  3698  04F7  3097               movwf	((??_lcd_instReg+0)+0),f
  3699  04F8  00F0               	u1357:
  3700  04F9                     decfsz	((??_lcd_instReg+0)+0),f
  3701  04F9  0BF0               	goto	u1357
  3702  04FA  2CF9               	decfsz	((??_lcd_instReg+0)+0+1),f
  3703  04FB  0BF1               	goto	u1357
  3704  04FC  2CF9               	nop2
  3705  04FD  2CFE               opt asmopt_pop
  3706                           
  3707                           	goto	l1100
  3708  04FE  2D04               	line	66
  3709                           ;lcd.c: 66:     else
  3710                           	
  3711                           l34:	
  3712  04FF                     	line	67
  3713                           	
  3714                           l1098:	
  3715  04FF                     ;lcd.c: 67:         _delay((unsigned long)((40)*(4000000/4000000.0)));
  3716                           	opt asmopt_push
  3717                           opt asmopt_off
  3718                           	movlw	13
  3719  04FF  300D               movwf	((??_lcd_instReg+0)+0),f
  3720  0500  00F0               	u1367:
  3721  0501                     decfsz	(??_lcd_instReg+0)+0,f
  3722  0501  0BF0               	goto	u1367
  3723  0502  2D01               opt asmopt_pop
  3724                           
  3725                           	goto	l1100
  3726  0503  2D04               	
  3727                           l37:	
  3728  0504                     	line	68
  3729                           	
  3730                           l1100:	
  3731  0504                     ;lcd.c: 68:     PORTDbits.RD3 = 1;
  3732                           	bcf	status, 5	;RP0=0, select bank0
  3733  0504  1283               	bcf	status, 6	;RP1=0, select bank0
  3734  0505  1303               	bsf	(8),3	;volatile
  3735  0506  1588               	line	71
  3736                           	
  3737                           l1102:	
  3738  0507                     ;lcd.c: 71:     if( (i & 0xF0) == (0x20 | 0x00) )
  3739                           	movlw	low(0F0h)
  3740  0507  30F0               	andwf	(lcd_instReg@i),w
  3741  0508  0572               	movwf	(??_lcd_instReg+0)+0
  3742  0509  00F0               		movlw	32
  3743  050A  3020               	xorwf	((??_lcd_instReg+0)+0),w
  3744  050B  0670               	btfss	status,2
  3745  050C  1D03               	goto	u711
  3746  050D  2D0F               	goto	u710
  3747  050E  2D10               u711:
  3748  050F                     	goto	l1114
  3749  050F  2D2E               u710:
  3750  0510                     	line	73
  3751                           	
  3752                           l1104:	
  3753  0510                     ;lcd.c: 72:     {;lcd.c: 73:         PORTDbits.RD2 = 0;
  3754                           	bcf	(8),2	;volatile
  3755  0510  1108               	line	74
  3756                           	
  3757                           l1106:	
  3758  0511                     ;lcd.c: 74:         PORTD = ((PORTD & 0x0F)|(i>>4<<4));
  3759                           	movf	(lcd_instReg@i),w
  3760  0511  0872               	movwf	(??_lcd_instReg+0)+0
  3761  0512  00F0               	movlw	04h
  3762  0513  3004               u725:
  3763  0514                     	clrc
  3764  0514  1003               	rrf	(??_lcd_instReg+0)+0,f
  3765  0515  0CF0               	addlw	-1
  3766  0516  3EFF               	skipz
  3767  0517  1D03               	goto	u725
  3768  0518  2D14               	movf	0+(??_lcd_instReg+0)+0,w
  3769  0519  0870               	movwf	(??_lcd_instReg+1)+0
  3770  051A  00F1               	movlw	04h
  3771  051B  3004               u735:
  3772  051C                     	clrc
  3773  051C  1003               	rlf	(??_lcd_instReg+1)+0,f
  3774  051D  0DF1               	addlw	-1
  3775  051E  3EFF               	skipz
  3776  051F  1D03               	goto	u735
  3777  0520  2D1C               	movf	(8),w	;volatile
  3778  0521  0808               	andlw	0Fh
  3779  0522  390F               	iorwf	0+(??_lcd_instReg+1)+0,w
  3780  0523  0471               	movwf	(8)	;volatile
  3781  0524  0088               	line	75
  3782                           	
  3783                           l1108:	
  3784  0525                     ;lcd.c: 75:         PORTDbits.RD3 = 0;
  3785                           	bcf	(8),3	;volatile
  3786  0525  1188               	line	76
  3787                           	
  3788                           l1110:	
  3789  0526                     ;lcd.c: 76:         _delay((unsigned long)((40)*(4000000/4000000.0)));
  3790                           	opt asmopt_push
  3791                           opt asmopt_off
  3792                           	movlw	13
  3793  0526  300D               movwf	((??_lcd_instReg+0)+0),f
  3794  0527  00F0               	u1377:
  3795  0528                     decfsz	(??_lcd_instReg+0)+0,f
  3796  0528  0BF0               	goto	u1377
  3797  0529  2D28               opt asmopt_pop
  3798                           
  3799                           	line	77
  3800                           	
  3801                           l1112:	
  3802  052A                     ;lcd.c: 77:         PORTDbits.RD3 = 1;
  3803                           	bcf	status, 5	;RP0=0, select bank0
  3804  052A  1283               	bcf	status, 6	;RP1=0, select bank0
  3805  052B  1303               	bsf	(8),3	;volatile
  3806  052C  1588               	goto	l1114
  3807  052D  2D2E               	line	78
  3808                           ;lcd.c: 78:     }
  3809                           	
  3810                           l38:	
  3811  052E                     	line	80
  3812                           	
  3813                           l1114:	
  3814  052E                     ;lcd.c: 80:     PORTDbits.RD2 = 0;
  3815                           	bcf	(8),2	;volatile
  3816  052E  1108               	line	81
  3817                           	
  3818                           l1116:	
  3819  052F                     ;lcd.c: 81:     PORTD = ((PORTD & 0x0F)|(i<<4));
  3820                           	movf	(lcd_instReg@i),w
  3821  052F  0872               	movwf	(??_lcd_instReg+0)+0
  3822  0530  00F0               	movlw	04h
  3823  0531  3004               u745:
  3824  0532                     	clrc
  3825  0532  1003               	rlf	(??_lcd_instReg+0)+0,f
  3826  0533  0DF0               	addlw	-1
  3827  0534  3EFF               	skipz
  3828  0535  1D03               	goto	u745
  3829  0536  2D32               	movf	(8),w	;volatile
  3830  0537  0808               	andlw	0Fh
  3831  0538  390F               	iorwf	0+(??_lcd_instReg+0)+0,w
  3832  0539  0470               	movwf	(8)	;volatile
  3833  053A  0088               	line	82
  3834                           	
  3835                           l1118:	
  3836  053B                     ;lcd.c: 82:     PORTDbits.RD3 = 0;
  3837                           	bcf	(8),3	;volatile
  3838  053B  1188               	line	83
  3839                           	
  3840                           l1120:	
  3841  053C                     ;lcd.c: 83:     if( i == 0x01 || i == 0x02 )
  3842                           		decf	((lcd_instReg@i)),w
  3843  053C  0372               	btfsc	status,2
  3844  053D  1903               	goto	u751
  3845  053E  2D40               	goto	u750
  3846  053F  2D41               u751:
  3847  0540                     	goto	l1124
  3848  0540  2D48               u750:
  3849  0541                     	
  3850                           l1122:	
  3851  0541                     		movlw	2
  3852  0541  3002               	xorwf	((lcd_instReg@i)),w
  3853  0542  0672               	btfss	status,2
  3854  0543  1D03               	goto	u761
  3855  0544  2D46               	goto	u760
  3856  0545  2D47               u761:
  3857  0546                     	goto	l1126
  3858  0546  2D52               u760:
  3859  0547                     	goto	l1124
  3860  0547  2D48               	
  3861                           l41:	
  3862  0548                     	line	84
  3863                           	
  3864                           l1124:	
  3865  0548                     ;lcd.c: 84:         _delay((unsigned long)((2)*(4000000/4000.0)));
  3866                           	opt asmopt_push
  3867                           opt asmopt_off
  3868                           movlw	3
  3869  0548  3003               movwf	((??_lcd_instReg+0)+0+1),f
  3870  0549  00F1               	movlw	151
  3871  054A  3097               movwf	((??_lcd_instReg+0)+0),f
  3872  054B  00F0               	u1387:
  3873  054C                     decfsz	((??_lcd_instReg+0)+0),f
  3874  054C  0BF0               	goto	u1387
  3875  054D  2D4C               	decfsz	((??_lcd_instReg+0)+0+1),f
  3876  054E  0BF1               	goto	u1387
  3877  054F  2D4C               	nop2
  3878  0550  2D51               opt asmopt_pop
  3879                           
  3880                           	goto	l1128
  3881  0551  2D57               	line	85
  3882                           ;lcd.c: 85:     else
  3883                           	
  3884                           l39:	
  3885  0552                     	line	86
  3886                           	
  3887                           l1126:	
  3888  0552                     ;lcd.c: 86:         _delay((unsigned long)((40)*(4000000/4000000.0)));
  3889                           	opt asmopt_push
  3890                           opt asmopt_off
  3891                           	movlw	13
  3892  0552  300D               movwf	((??_lcd_instReg+0)+0),f
  3893  0553  00F0               	u1397:
  3894  0554                     decfsz	(??_lcd_instReg+0)+0,f
  3895  0554  0BF0               	goto	u1397
  3896  0555  2D54               opt asmopt_pop
  3897                           
  3898                           	goto	l1128
  3899  0556  2D57               	
  3900                           l42:	
  3901  0557                     	line	87
  3902                           	
  3903                           l1128:	
  3904  0557                     ;lcd.c: 87:     PORTDbits.RD3 = 1;
  3905                           	bcf	status, 5	;RP0=0, select bank0
  3906  0557  1283               	bcf	status, 6	;RP1=0, select bank0
  3907  0558  1303               	bsf	(8),3	;volatile
  3908  0559  1588               	line	88
  3909                           	
  3910                           l43:	
  3911  055A                     	return
  3912  055A  0008               	opt stack 0
  3913                           GLOBAL	__end_of_lcd_instReg
  3914                           	__end_of_lcd_instReg:
  3915  055B                     	signat	_lcd_instReg,4217
  3916                           	global	_delay
  3917                           
  3918 ;; *************** function _delay *****************
  3919 ;; Defined at:
  3920 ;;		line 12 in file "delay.c"
  3921 ;; Parameters:    Size  Location     Type
  3922 ;;  t               2    0[COMMON] unsigned int 
  3923 ;; Auto vars:     Size  Location     Type
  3924 ;;		None
  3925 ;; Return value:  Size  Location     Type
  3926 ;;                  1    wreg      void 
  3927 ;; Registers used:
  3928 ;;		wreg, status,2, status,0
  3929 ;; Tracked objects:
  3930 ;;		On entry : 0/0
  3931 ;;		On exit  : 0/0
  3932 ;;		Unchanged: 0/0
  3933 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3934 ;;      Params:         2       0       0       0       0
  3935 ;;      Locals:         0       0       0       0       0
  3936 ;;      Temps:          1       0       0       0       0
  3937 ;;      Totals:         3       0       0       0       0
  3938 ;;Total ram usage:        3 bytes
  3939 ;; Hardware stack levels used:    1
  3940 ;; This function calls:
  3941 ;;		Nothing
  3942 ;; This function is called by:
  3943 ;;		_lcd_init
  3944 ;;		_main
  3945 ;; This function uses a non-reentrant model
  3946 ;;
  3947                           psect	text10,local,class=CODE,delta=2,merge=1,group=0
  3948                           	file	"delay.c"
  3949                           	line	12
  3950                           global __ptext10
  3951                           __ptext10:	;psect for function _delay
  3952  02A8                     psect	text10
  3953                           	file	"delay.c"
  3954                           	line	12
  3955                           	global	__size_of_delay
  3956                           	__size_of_delay	equ	__end_of_delay-_delay
  3957  0017                     	
  3958                           _delay:	
  3959  02A8                     ;incstack = 0
  3960                           	opt	stack 6
  3961                           ; Regs used in _delay: [wreg+status,2+status,0]
  3962                           	line	14
  3963                           	
  3964                           l1130:	
  3965  02A8                     ;delay.c: 12: void delay( unsigned int t );delay.c: 13: {;delay.c: 14:     while( t )
  3966                           	goto	l1134
  3967  02A8  2AB7               	
  3968                           l6:	
  3969  02A9                     	line	16
  3970                           	
  3971                           l1132:	
  3972  02A9                     ;delay.c: 15:     {;delay.c: 16:         _delay((unsigned long)((1)*(4000000/4000.0)));

  3973                           	opt asmopt_push
  3974                           opt asmopt_off
  3975                           	movlw	199
  3976  02A9  30C7               movwf	((??_delay+0)+0),f
  3977  02AA  00F2               	u1407:
  3978  02AB                     	nop2
  3979  02AB  2AAC               decfsz	(??_delay+0)+0,f
  3980  02AC  0BF2               	goto	u1407
  3981  02AD  2AAB               	nop2
  3982  02AE  2AAF               	nop2
  3983  02AF  2AB0               opt asmopt_pop
  3984                           
  3985                           	line	17
  3986                           ;delay.c: 17:         --t;
  3987                           	movlw	01h
  3988  02B0  3001               	subwf	(delay@t),f
  3989  02B1  02F0               	movlw	0
  3990  02B2  3000               	skipc
  3991  02B3  1C03               	decf	(delay@t+1),f
  3992  02B4  03F1               	subwf	(delay@t+1),f
  3993  02B5  02F1               	goto	l1134
  3994  02B6  2AB7               	line	18
  3995                           ;delay.c: 18:     }
  3996                           	
  3997                           l5:	
  3998  02B7                     	line	14
  3999                           	
  4000                           l1134:	
  4001  02B7                     ;delay.c: 14:     while( t )
  4002                           	movf	((delay@t)),w
  4003  02B7  0870               iorwf	((delay@t+1)),w
  4004  02B8  0471               	btfss	status,2
  4005  02B9  1D03               	goto	u771
  4006  02BA  2ABC               	goto	u770
  4007  02BB  2ABD               u771:
  4008  02BC                     	goto	l1132
  4009  02BC  2AA9               u770:
  4010  02BD                     	goto	l8
  4011  02BD  2ABE               	
  4012                           l7:	
  4013  02BE                     	line	19
  4014                           	
  4015                           l8:	
  4016  02BE                     	return
  4017  02BE  0008               	opt stack 0
  4018                           GLOBAL	__end_of_delay
  4019                           	__end_of_delay:
  4020  02BF                     	signat	_delay,4217
  4021                           	global	_edit
  4022                           
  4023 ;; *************** function _edit *****************
  4024 ;; Defined at:
  4025 ;;		line 8 in file "editnum.c"
  4026 ;; Parameters:    Size  Location     Type
  4027 ;;  ptr_edit        1    wreg     PTR int 
  4028 ;;		 -> main@num(2), 
  4029 ;;  tecla           1    0[BANK0 ] unsigned char 
  4030 ;;  delete          1    1[BANK0 ] unsigned char 
  4031 ;;  menos           1    2[BANK0 ] unsigned char 
  4032 ;;  min             2    3[BANK0 ] unsigned int 
  4033 ;;  max             2    5[BANK0 ] unsigned int 
  4034 ;; Auto vars:     Size  Location     Type
  4035 ;;  ptr_edit        1   11[BANK0 ] PTR int 
  4036 ;;		 -> main@num(2), 
  4037 ;;  aux             4    7[BANK0 ] long 
  4038 ;; Return value:  Size  Location     Type
  4039 ;;                  1    wreg      void 
  4040 ;; Registers used:
  4041 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4042 ;; Tracked objects:
  4043 ;;		On entry : 0/0
  4044 ;;		On exit  : 0/0
  4045 ;;		Unchanged: 0/0
  4046 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4047 ;;      Params:         0       7       0       0       0
  4048 ;;      Locals:         0       5       0       0       0
  4049 ;;      Temps:          4       0       0       0       0
  4050 ;;      Totals:         4      12       0       0       0
  4051 ;;Total ram usage:       16 bytes
  4052 ;; Hardware stack levels used:    1
  4053 ;; Hardware stack levels required when called:    1
  4054 ;; This function calls:
  4055 ;;		___awdiv
  4056 ;;		___wmul
  4057 ;; This function is called by:
  4058 ;;		_main
  4059 ;; This function uses a non-reentrant model
  4060 ;;
  4061                           psect	text11,local,class=CODE,delta=2,merge=1,group=0
  4062                           	file	"editnum.c"
  4063                           	line	8
  4064                           global __ptext11
  4065                           __ptext11:	;psect for function _edit
  4066  055B                     psect	text11
  4067                           	file	"editnum.c"
  4068                           	line	8
  4069                           	global	__size_of_edit
  4070                           	__size_of_edit	equ	__end_of_edit-_edit
  4071  00C4                     	
  4072                           _edit:	
  4073  055B                     ;incstack = 0
  4074                           	opt	stack 6
  4075                           ; Regs used in _edit: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4076                           ;edit@ptr_edit stored from wreg
  4077                           	bcf	status, 5	;RP0=0, select bank0
  4078  055B  1283               	bcf	status, 6	;RP1=0, select bank0
  4079  055C  1303               	movwf	(edit@ptr_edit)
  4080  055D  00AB               	line	16
  4081                           	
  4082                           l1252:	
  4083  055E                     ;editnum.c: 8: void edit( int * ptr_edit,;editnum.c: 9:             unsigned char tecla,
                                 ;editnum.c: 10:             unsigned char delete,;editnum.c: 11:             unsigned ch
                                 ar menos,;editnum.c: 12:             unsigned int min,;editnum.c: 13:             unsign
                                 ed int max);editnum.c: 14: {;editnum.c: 15:     long aux;;editnum.c: 16:     if( !teclaA
                                 nt && tecla )
  4084                           	movf	((_teclaAnt)),w
  4085  055E  0836               	btfss	status,2
  4086  055F  1D03               	goto	u1051
  4087  0560  2D62               	goto	u1050
  4088  0561  2D63               u1051:
  4089  0562                     	goto	l1276
  4090  0562  2E1A               u1050:
  4091  0563                     	
  4092                           l1254:	
  4093  0563                     	movf	((edit@tecla)),w
  4094  0563  0820               	btfsc	status,2
  4095  0564  1903               	goto	u1061
  4096  0565  2D67               	goto	u1060
  4097  0566  2D68               u1061:
  4098  0567                     	goto	l1276
  4099  0567  2E1A               u1060:
  4100  0568                     	line	18
  4101                           	
  4102                           l1256:	
  4103  0568                     ;editnum.c: 17:     {;editnum.c: 18:         if( tecla >= '0' && tecla <= '9' )
  4104                           	movlw	low(030h)
  4105  0568  3030               	subwf	(edit@tecla),w
  4106  0569  0220               	skipc
  4107  056A  1C03               	goto	u1071
  4108  056B  2D6D               	goto	u1070
  4109  056C  2D6E               u1071:
  4110  056D                     	goto	l1266
  4111  056D  2DBE               u1070:
  4112  056E                     	
  4113                           l1258:	
  4114  056E                     	movlw	low(03Ah)
  4115  056E  303A               	subwf	(edit@tecla),w
  4116  056F  0220               	skipnc
  4117  0570  1803               	goto	u1081
  4118  0571  2D73               	goto	u1080
  4119  0572  2D74               u1081:
  4120  0573                     	goto	l1266
  4121  0573  2DBE               u1080:
  4122  0574                     	line	20
  4123                           	
  4124                           l1260:	
  4125  0574                     ;editnum.c: 19:         {;editnum.c: 20:             aux = ((*ptr_edit) * 10)+(tecla-'0'
                                 );
  4126                           	movf	(edit@ptr_edit),w
  4127  0574  082B               	movwf	fsr0
  4128  0575  0084               	bcf	status, 7	;select IRP bank0
  4129  0576  1383               	movf	indf,w
  4130  0577  0800               	movwf	(___wmul@multiplier)
  4131  0578  00F0               	incf	fsr0,f
  4132  0579  0A84               	movf	indf,w
  4133  057A  0800               	movwf	(___wmul@multiplier+1)
  4134  057B  00F1               	movlw	0Ah
  4135  057C  300A               	movwf	(___wmul@multiplicand)
  4136  057D  00F2               	movlw	0
  4137  057E  3000               	movwf	((___wmul@multiplicand))+1
  4138  057F  00F3               	fcall	___wmul
  4139  0580  120A  118A  22BF  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  4140  0585  1283               	bcf	status, 6	;RP1=0, select bank0
  4141  0586  1303               	movf	(edit@tecla),w
  4142  0587  0820               	addwf	(0+(?___wmul)),w
  4143  0588  0770               	movwf	(??_edit+0)+0
  4144  0589  00F9               	movf	(1+(?___wmul)),w
  4145  058A  0871               	skipnc
  4146  058B  1803               	incf	(1+(?___wmul)),w
  4147  058C  0A71               	movwf	((??_edit+0)+0)+1
  4148  058D  00FA               	movf	0+(??_edit+0)+0,w
  4149  058E  0879               	addlw	low(0FFD0h)
  4150  058F  3ED0               	movwf	(edit@aux)
  4151  0590  00A7               	movf	1+(??_edit+0)+0,w
  4152  0591  087A               	skipnc
  4153  0592  1803               	addlw	1
  4154  0593  3E01               	addlw	high(0FFD0h)
  4155  0594  3EFF               	movwf	1+(edit@aux)
  4156  0595  00A8               	clrf	2+(edit@aux)
  4157  0596  01A9               	clrf	3+(edit@aux)
  4158  0597  01AA               	line	21
  4159                           	
  4160                           l1262:	
  4161  0598                     ;editnum.c: 21:             if( aux <= max )
  4162                           	movf	(edit@max),w
  4163  0598  0825               	movwf	((??_edit+0)+0)
  4164  0599  00F9               	movf	(edit@max+1),w
  4165  059A  0826               	movwf	((??_edit+0)+0+1)
  4166  059B  00FA               	clrf	((??_edit+0)+0+2)
  4167  059C  01FB               	clrf	((??_edit+0)+0+3)
  4168  059D  01FC               	movf	3+(??_edit+0)+0,w
  4169  059E  087C               	xorlw	80h
  4170  059F  3A80               	movwf	btemp+1
  4171  05A0  00FF               	movf	(edit@aux+3),w
  4172  05A1  082A               	xorlw	80h
  4173  05A2  3A80               	subwf	btemp+1,w
  4174  05A3  027F               	
  4175                           	skipz
  4176  05A4  1D03               	goto	u1093
  4177  05A5  2DB0               	movf	(edit@aux+2),w
  4178  05A6  0829               	subwf	2+(??_edit+0)+0,w
  4179  05A7  027B               	skipz
  4180  05A8  1D03               	goto	u1093
  4181  05A9  2DB0               	movf	(edit@aux+1),w
  4182  05AA  0828               	subwf	1+(??_edit+0)+0,w
  4183  05AB  027A               	skipz
  4184  05AC  1D03               	goto	u1093
  4185  05AD  2DB0               	movf	(edit@aux),w
  4186  05AE  0827               	subwf	0+(??_edit+0)+0,w
  4187  05AF  0279               u1093:
  4188  05B0                     	skipc
  4189  05B0  1C03               	goto	u1091
  4190  05B1  2DB3               	goto	u1090
  4191  05B2  2DB4               u1091:
  4192  05B3                     	goto	l1266
  4193  05B3  2DBE               u1090:
  4194  05B4                     	line	22
  4195                           	
  4196                           l1264:	
  4197  05B4                     ;editnum.c: 22:                 *ptr_edit = aux;
  4198                           	movf	(edit@ptr_edit),w
  4199  05B4  082B               	movwf	fsr0
  4200  05B5  0084               	movf	(edit@aux),w
  4201  05B6  0827               	bcf	status, 7	;select IRP bank0
  4202  05B7  1383               	movwf	indf
  4203  05B8  0080               	incf	fsr0,f
  4204  05B9  0A84               	movf	(edit@aux+1),w
  4205  05BA  0828               	movwf	indf
  4206  05BB  0080               	goto	l1266
  4207  05BC  2DBE               	
  4208                           l17:	
  4209  05BD                     	goto	l1266
  4210  05BD  2DBE               	line	23
  4211                           ;editnum.c: 23:         }
  4212                           	
  4213                           l16:	
  4214  05BE                     	line	24
  4215                           	
  4216                           l1266:	
  4217  05BE                     ;editnum.c: 24:         if( tecla == delete )
  4218                           	movf	(edit@tecla),w
  4219  05BE  0820               	xorwf	(edit@delete),w
  4220  05BF  0621               	skipz
  4221  05C0  1D03               	goto	u1101
  4222  05C1  2DC3               	goto	u1100
  4223  05C2  2DC4               u1101:
  4224  05C3                     	goto	l1272
  4225  05C3  2DFE               u1100:
  4226  05C4                     	line	26
  4227                           	
  4228                           l1268:	
  4229  05C4                     ;editnum.c: 25:         {;editnum.c: 26:             if( (*ptr_edit)/10 >= min )
  4230                           	movlw	0Ah
  4231  05C4  300A               	movwf	(___awdiv@divisor)
  4232  05C5  00F0               	movlw	0
  4233  05C6  3000               	movwf	((___awdiv@divisor))+1
  4234  05C7  00F1               	movf	(edit@ptr_edit),w
  4235  05C8  082B               	movwf	fsr0
  4236  05C9  0084               	bcf	status, 7	;select IRP bank0
  4237  05CA  1383               	movf	indf,w
  4238  05CB  0800               	movwf	(___awdiv@dividend)
  4239  05CC  00F2               	incf	fsr0,f
  4240  05CD  0A84               	movf	indf,w
  4241  05CE  0800               	movwf	(___awdiv@dividend+1)
  4242  05CF  00F3               	fcall	___awdiv
  4243  05D0  120A  118A  245F  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  4244  05D5  1283               	bcf	status, 6	;RP1=0, select bank0
  4245  05D6  1303               	movf	(edit@min+1),w
  4246  05D7  0824               	subwf	(1+(?___awdiv)),w
  4247  05D8  0271               	skipz
  4248  05D9  1D03               	goto	u1115
  4249  05DA  2DDD               	movf	(edit@min),w
  4250  05DB  0823               	subwf	(0+(?___awdiv)),w
  4251  05DC  0270               u1115:
  4252  05DD                     	skipc
  4253  05DD  1C03               	goto	u1111
  4254  05DE  2DE0               	goto	u1110
  4255  05DF  2DE1               u1111:
  4256  05E0                     	goto	l1272
  4257  05E0  2DFE               u1110:
  4258  05E1                     	line	27
  4259                           	
  4260                           l1270:	
  4261  05E1                     ;editnum.c: 27:                 *ptr_edit = (*ptr_edit) / 10;
  4262                           	movlw	0Ah
  4263  05E1  300A               	movwf	(___awdiv@divisor)
  4264  05E2  00F0               	movlw	0
  4265  05E3  3000               	movwf	((___awdiv@divisor))+1
  4266  05E4  00F1               	movf	(edit@ptr_edit),w
  4267  05E5  082B               	movwf	fsr0
  4268  05E6  0084               	bcf	status, 7	;select IRP bank0
  4269  05E7  1383               	movf	indf,w
  4270  05E8  0800               	movwf	(___awdiv@dividend)
  4271  05E9  00F2               	incf	fsr0,f
  4272  05EA  0A84               	movf	indf,w
  4273  05EB  0800               	movwf	(___awdiv@dividend+1)
  4274  05EC  00F3               	fcall	___awdiv
  4275  05ED  120A  118A  245F  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  4276  05F2  1283               	bcf	status, 6	;RP1=0, select bank0
  4277  05F3  1303               	movf	(edit@ptr_edit),w
  4278  05F4  082B               	movwf	fsr0
  4279  05F5  0084               	movf	(0+(?___awdiv)),w
  4280  05F6  0870               	bcf	status, 7	;select IRP bank0
  4281  05F7  1383               	movwf	indf
  4282  05F8  0080               	incf	fsr0,f
  4283  05F9  0A84               	movf	(1+(?___awdiv)),w
  4284  05FA  0871               	movwf	indf
  4285  05FB  0080               	goto	l1272
  4286  05FC  2DFE               	
  4287                           l19:	
  4288  05FD                     	goto	l1272
  4289  05FD  2DFE               	line	28
  4290                           ;editnum.c: 28:         }
  4291                           	
  4292                           l18:	
  4293  05FE                     	line	29
  4294                           	
  4295                           l1272:	
  4296  05FE                     ;editnum.c: 29:         if( tecla == menos )
  4297                           	movf	(edit@tecla),w
  4298  05FE  0820               	xorwf	(edit@menos),w
  4299  05FF  0622               	skipz
  4300  0600  1D03               	goto	u1121
  4301  0601  2E03               	goto	u1120
  4302  0602  2E04               u1121:
  4303  0603                     	goto	l1276
  4304  0603  2E1A               u1120:
  4305  0604                     	line	31
  4306                           	
  4307                           l1274:	
  4308  0604                     ;editnum.c: 30:         {;editnum.c: 31:             * ptr_edit = ~(*ptr_edit) + 1;
  4309                           	movf	(edit@ptr_edit),w
  4310  0604  082B               	movwf	fsr0
  4311  0605  0084               	bcf	status, 7	;select IRP bank0
  4312  0606  1383               	movf	indf,w
  4313  0607  0800               	movwf	(??_edit+0)+0+0
  4314  0608  00F9               	incf	fsr0,f
  4315  0609  0A84               	movf	indf,w
  4316  060A  0800               	movwf	(??_edit+0)+0+1
  4317  060B  00FA               	comf	(??_edit+0)+0,f
  4318  060C  09F9               	comf	(??_edit+0)+1,f
  4319  060D  09FA               	incf	(??_edit+0)+0,f
  4320  060E  0AF9               	skipnz
  4321  060F  1903               	incf	(??_edit+0)+1,f
  4322  0610  0AFA               	movf	(edit@ptr_edit),w
  4323  0611  082B               	movwf	fsr0
  4324  0612  0084               	movf	0+(??_edit+0)+0,w
  4325  0613  0879               	movwf	indf
  4326  0614  0080               	incf	fsr0,f
  4327  0615  0A84               	movf	1+(??_edit+0)+0,w
  4328  0616  087A               	movwf	indf
  4329  0617  0080               	goto	l1276
  4330  0618  2E1A               	line	32
  4331                           ;editnum.c: 32:         }
  4332                           	
  4333                           l20:	
  4334  0619                     	goto	l1276
  4335  0619  2E1A               	line	33
  4336                           ;editnum.c: 33:     }
  4337                           	
  4338                           l15:	
  4339  061A                     	line	34
  4340                           	
  4341                           l1276:	
  4342  061A                     ;editnum.c: 34:     teclaAnt = tecla;
  4343                           	movf	(edit@tecla),w
  4344  061A  0820               	movwf	(??_edit+0)+0
  4345  061B  00F9               	movf	(??_edit+0)+0,w
  4346  061C  0879               	movwf	(_teclaAnt)
  4347  061D  00B6               	line	35
  4348                           	
  4349                           l21:	
  4350  061E                     	return
  4351  061E  0008               	opt stack 0
  4352                           GLOBAL	__end_of_edit
  4353                           	__end_of_edit:
  4354  061F                     	signat	_edit,24697
  4355                           	global	___wmul
  4356                           
  4357 ;; *************** function ___wmul *****************
  4358 ;; Defined at:
  4359 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul16.c"
  4360 ;; Parameters:    Size  Location     Type
  4361 ;;  multiplier      2    0[COMMON] unsigned int 
  4362 ;;  multiplicand    2    2[COMMON] unsigned int 
  4363 ;; Auto vars:     Size  Location     Type
  4364 ;;  product         2    4[COMMON] unsigned int 
  4365 ;; Return value:  Size  Location     Type
  4366 ;;                  2    0[COMMON] unsigned int 
  4367 ;; Registers used:
  4368 ;;		wreg, status,2, status,0
  4369 ;; Tracked objects:
  4370 ;;		On entry : 0/0
  4371 ;;		On exit  : 0/0
  4372 ;;		Unchanged: 0/0
  4373 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4374 ;;      Params:         4       0       0       0       0
  4375 ;;      Locals:         2       0       0       0       0
  4376 ;;      Temps:          0       0       0       0       0
  4377 ;;      Totals:         6       0       0       0       0
  4378 ;;Total ram usage:        6 bytes
  4379 ;; Hardware stack levels used:    1
  4380 ;; This function calls:
  4381 ;;		Nothing
  4382 ;; This function is called by:
  4383 ;;		_edit
  4384 ;; This function uses a non-reentrant model
  4385 ;;
  4386                           psect	text12,local,class=CODE,delta=2,merge=1,group=1
  4387                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul16.c"
  4388                           	line	15
  4389                           global __ptext12
  4390                           __ptext12:	;psect for function ___wmul
  4391  02BF                     psect	text12
  4392                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul16.c"
  4393                           	line	15
  4394                           	global	__size_of___wmul
  4395                           	__size_of___wmul	equ	__end_of___wmul-___wmul
  4396  0028                     	
  4397                           ___wmul:	
  4398  02BF                     ;incstack = 0
  4399                           	opt	stack 6
  4400                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4401                           	line	43
  4402                           	
  4403                           l1156:	
  4404  02BF                     	clrf	(___wmul@product)
  4405  02BF  01F4               	clrf	(___wmul@product+1)
  4406  02C0  01F5               	goto	l1158
  4407  02C1  2AC2               	line	44
  4408                           	
  4409                           l224:	
  4410  02C2                     	line	45
  4411                           	
  4412                           l1158:	
  4413  02C2                     	btfss	(___wmul@multiplier),(0)&7
  4414  02C2  1C70               	goto	u821
  4415  02C3  2AC5               	goto	u820
  4416  02C4  2AC6               u821:
  4417  02C5                     	goto	l225
  4418  02C5  2ACC               u820:
  4419  02C6                     	line	46
  4420                           	
  4421                           l1160:	
  4422  02C6                     	movf	(___wmul@multiplicand),w
  4423  02C6  0872               	addwf	(___wmul@product),f
  4424  02C7  07F4               	skipnc
  4425  02C8  1803               	incf	(___wmul@product+1),f
  4426  02C9  0AF5               	movf	(___wmul@multiplicand+1),w
  4427  02CA  0873               	addwf	(___wmul@product+1),f
  4428  02CB  07F5               	
  4429                           l225:	
  4430  02CC                     	line	47
  4431                           	movlw	01h
  4432  02CC  3001               	
  4433                           u835:
  4434  02CD                     	clrc
  4435  02CD  1003               	rlf	(___wmul@multiplicand),f
  4436  02CE  0DF2               	rlf	(___wmul@multiplicand+1),f
  4437  02CF  0DF3               	addlw	-1
  4438  02D0  3EFF               	skipz
  4439  02D1  1D03               	goto	u835
  4440  02D2  2ACD               	line	48
  4441                           	
  4442                           l1162:	
  4443  02D3                     	movlw	01h
  4444  02D3  3001               	
  4445                           u845:
  4446  02D4                     	clrc
  4447  02D4  1003               	rrf	(___wmul@multiplier+1),f
  4448  02D5  0CF1               	rrf	(___wmul@multiplier),f
  4449  02D6  0CF0               	addlw	-1
  4450  02D7  3EFF               	skipz
  4451  02D8  1D03               	goto	u845
  4452  02D9  2AD4               	line	49
  4453                           	
  4454                           l1164:	
  4455  02DA                     	movf	((___wmul@multiplier)),w
  4456  02DA  0870               iorwf	((___wmul@multiplier+1)),w
  4457  02DB  0471               	btfss	status,2
  4458  02DC  1D03               	goto	u851
  4459  02DD  2ADF               	goto	u850
  4460  02DE  2AE0               u851:
  4461  02DF                     	goto	l1158
  4462  02DF  2AC2               u850:
  4463  02E0                     	goto	l1166
  4464  02E0  2AE1               	
  4465                           l226:	
  4466  02E1                     	line	52
  4467                           	
  4468                           l1166:	
  4469  02E1                     	movf	(___wmul@product+1),w
  4470  02E1  0875               	movwf	(?___wmul+1)
  4471  02E2  00F1               	movf	(___wmul@product),w
  4472  02E3  0874               	movwf	(?___wmul)
  4473  02E4  00F0               	goto	l227
  4474  02E5  2AE6               	
  4475                           l1168:	
  4476  02E6                     	line	53
  4477                           	
  4478                           l227:	
  4479  02E6                     	return
  4480  02E6  0008               	opt stack 0
  4481                           GLOBAL	__end_of___wmul
  4482                           	__end_of___wmul:
  4483  02E7                     	signat	___wmul,8314
  4484                           	global	___awdiv
  4485                           
  4486 ;; *************** function ___awdiv *****************
  4487 ;; Defined at:
  4488 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awdiv.c"
  4489 ;; Parameters:    Size  Location     Type
  4490 ;;  divisor         2    0[COMMON] int 
  4491 ;;  dividend        2    2[COMMON] int 
  4492 ;; Auto vars:     Size  Location     Type
  4493 ;;  quotient        2    7[COMMON] int 
  4494 ;;  sign            1    6[COMMON] unsigned char 
  4495 ;;  counter         1    5[COMMON] unsigned char 
  4496 ;; Return value:  Size  Location     Type
  4497 ;;                  2    0[COMMON] int 
  4498 ;; Registers used:
  4499 ;;		wreg, status,2, status,0
  4500 ;; Tracked objects:
  4501 ;;		On entry : 0/0
  4502 ;;		On exit  : 0/0
  4503 ;;		Unchanged: 0/0
  4504 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4505 ;;      Params:         4       0       0       0       0
  4506 ;;      Locals:         4       0       0       0       0
  4507 ;;      Temps:          1       0       0       0       0
  4508 ;;      Totals:         9       0       0       0       0
  4509 ;;Total ram usage:        9 bytes
  4510 ;; Hardware stack levels used:    1
  4511 ;; This function calls:
  4512 ;;		Nothing
  4513 ;; This function is called by:
  4514 ;;		_edit
  4515 ;;		_lcd_num
  4516 ;; This function uses a non-reentrant model
  4517 ;;
  4518                           psect	text13,local,class=CODE,delta=2,merge=1,group=1
  4519                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awdiv.c"
  4520                           	line	5
  4521                           global __ptext13
  4522                           __ptext13:	;psect for function ___awdiv
  4523  045F                     psect	text13
  4524                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awdiv.c"
  4525                           	line	5
  4526                           	global	__size_of___awdiv
  4527                           	__size_of___awdiv	equ	__end_of___awdiv-___awdiv
  4528  0071                     	
  4529                           ___awdiv:	
  4530  045F                     ;incstack = 0
  4531                           	opt	stack 6
  4532                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4533                           	line	13
  4534                           	
  4535                           l1170:	
  4536  045F                     	clrf	(___awdiv@sign)
  4537  045F  01F6               	line	14
  4538                           	
  4539                           l1172:	
  4540  0460                     	btfss	(___awdiv@divisor+1),7
  4541  0460  1FF1               	goto	u861
  4542  0461  2C63               	goto	u860
  4543  0462  2C64               u861:
  4544  0463                     	goto	l1178
  4545  0463  2C6C               u860:
  4546  0464                     	line	15
  4547                           	
  4548                           l1174:	
  4549  0464                     	comf	(___awdiv@divisor),f
  4550  0464  09F0               	comf	(___awdiv@divisor+1),f
  4551  0465  09F1               	incf	(___awdiv@divisor),f
  4552  0466  0AF0               	skipnz
  4553  0467  1903               	incf	(___awdiv@divisor+1),f
  4554  0468  0AF1               	line	16
  4555                           	
  4556                           l1176:	
  4557  0469                     	clrf	(___awdiv@sign)
  4558  0469  01F6               	incf	(___awdiv@sign),f
  4559  046A  0AF6               	goto	l1178
  4560  046B  2C6C               	line	17
  4561                           	
  4562                           l368:	
  4563  046C                     	line	18
  4564                           	
  4565                           l1178:	
  4566  046C                     	btfss	(___awdiv@dividend+1),7
  4567  046C  1FF3               	goto	u871
  4568  046D  2C6F               	goto	u870
  4569  046E  2C70               u871:
  4570  046F                     	goto	l1184
  4571  046F  2C7A               u870:
  4572  0470                     	line	19
  4573                           	
  4574                           l1180:	
  4575  0470                     	comf	(___awdiv@dividend),f
  4576  0470  09F2               	comf	(___awdiv@dividend+1),f
  4577  0471  09F3               	incf	(___awdiv@dividend),f
  4578  0472  0AF2               	skipnz
  4579  0473  1903               	incf	(___awdiv@dividend+1),f
  4580  0474  0AF3               	line	20
  4581                           	
  4582                           l1182:	
  4583  0475                     	movlw	low(01h)
  4584  0475  3001               	movwf	(??___awdiv+0)+0
  4585  0476  00F4               	movf	(??___awdiv+0)+0,w
  4586  0477  0874               	xorwf	(___awdiv@sign),f
  4587  0478  06F6               	goto	l1184
  4588  0479  2C7A               	line	21
  4589                           	
  4590                           l369:	
  4591  047A                     	line	22
  4592                           	
  4593                           l1184:	
  4594  047A                     	clrf	(___awdiv@quotient)
  4595  047A  01F7               	clrf	(___awdiv@quotient+1)
  4596  047B  01F8               	line	23
  4597                           	
  4598                           l1186:	
  4599  047C                     	movf	((___awdiv@divisor)),w
  4600  047C  0870               iorwf	((___awdiv@divisor+1)),w
  4601  047D  0471               	btfsc	status,2
  4602  047E  1903               	goto	u881
  4603  047F  2C81               	goto	u880
  4604  0480  2C82               u881:
  4605  0481                     	goto	l1206
  4606  0481  2CBF               u880:
  4607  0482                     	line	24
  4608                           	
  4609                           l1188:	
  4610  0482                     	clrf	(___awdiv@counter)
  4611  0482  01F5               	incf	(___awdiv@counter),f
  4612  0483  0AF5               	line	25
  4613                           	goto	l1194
  4614  0484  2C91               	
  4615                           l372:	
  4616  0485                     	line	26
  4617                           	
  4618                           l1190:	
  4619  0485                     	movlw	01h
  4620  0485  3001               	
  4621                           u895:
  4622  0486                     	clrc
  4623  0486  1003               	rlf	(___awdiv@divisor),f
  4624  0487  0DF0               	rlf	(___awdiv@divisor+1),f
  4625  0488  0DF1               	addlw	-1
  4626  0489  3EFF               	skipz
  4627  048A  1D03               	goto	u895
  4628  048B  2C86               	line	27
  4629                           	
  4630                           l1192:	
  4631  048C                     	movlw	low(01h)
  4632  048C  3001               	movwf	(??___awdiv+0)+0
  4633  048D  00F4               	movf	(??___awdiv+0)+0,w
  4634  048E  0874               	addwf	(___awdiv@counter),f
  4635  048F  07F5               	goto	l1194
  4636  0490  2C91               	line	28
  4637                           	
  4638                           l371:	
  4639  0491                     	line	25
  4640                           	
  4641                           l1194:	
  4642  0491                     	btfss	(___awdiv@divisor+1),(15)&7
  4643  0491  1FF1               	goto	u901
  4644  0492  2C94               	goto	u900
  4645  0493  2C95               u901:
  4646  0494                     	goto	l1190
  4647  0494  2C85               u900:
  4648  0495                     	goto	l1196
  4649  0495  2C97               	
  4650                           l373:	
  4651  0496                     	goto	l1196
  4652  0496  2C97               	line	29
  4653                           	
  4654                           l374:	
  4655  0497                     	line	30
  4656                           	
  4657                           l1196:	
  4658  0497                     	movlw	01h
  4659  0497  3001               	
  4660                           u915:
  4661  0498                     	clrc
  4662  0498  1003               	rlf	(___awdiv@quotient),f
  4663  0499  0DF7               	rlf	(___awdiv@quotient+1),f
  4664  049A  0DF8               	addlw	-1
  4665  049B  3EFF               	skipz
  4666  049C  1D03               	goto	u915
  4667  049D  2C98               	line	31
  4668                           	movf	(___awdiv@divisor+1),w
  4669  049E  0871               	subwf	(___awdiv@dividend+1),w
  4670  049F  0273               	skipz
  4671  04A0  1D03               	goto	u925
  4672  04A1  2CA4               	movf	(___awdiv@divisor),w
  4673  04A2  0870               	subwf	(___awdiv@dividend),w
  4674  04A3  0272               u925:
  4675  04A4                     	skipc
  4676  04A4  1C03               	goto	u921
  4677  04A5  2CA7               	goto	u920
  4678  04A6  2CA8               u921:
  4679  04A7                     	goto	l1202
  4680  04A7  2CB0               u920:
  4681  04A8                     	line	32
  4682                           	
  4683                           l1198:	
  4684  04A8                     	movf	(___awdiv@divisor),w
  4685  04A8  0870               	subwf	(___awdiv@dividend),f
  4686  04A9  02F2               	movf	(___awdiv@divisor+1),w
  4687  04AA  0871               	skipc
  4688  04AB  1C03               	decf	(___awdiv@dividend+1),f
  4689  04AC  03F3               	subwf	(___awdiv@dividend+1),f
  4690  04AD  02F3               	line	33
  4691                           	
  4692                           l1200:	
  4693  04AE                     	bsf	(___awdiv@quotient)+(0/8),(0)&7
  4694  04AE  1477               	goto	l1202
  4695  04AF  2CB0               	line	34
  4696                           	
  4697                           l375:	
  4698  04B0                     	line	35
  4699                           	
  4700                           l1202:	
  4701  04B0                     	movlw	01h
  4702  04B0  3001               	
  4703                           u935:
  4704  04B1                     	clrc
  4705  04B1  1003               	rrf	(___awdiv@divisor+1),f
  4706  04B2  0CF1               	rrf	(___awdiv@divisor),f
  4707  04B3  0CF0               	addlw	-1
  4708  04B4  3EFF               	skipz
  4709  04B5  1D03               	goto	u935
  4710  04B6  2CB1               	line	36
  4711                           	
  4712                           l1204:	
  4713  04B7                     	movlw	01h
  4714  04B7  3001               	subwf	(___awdiv@counter),f
  4715  04B8  02F5               	btfss	status,2
  4716  04B9  1D03               	goto	u941
  4717  04BA  2CBC               	goto	u940
  4718  04BB  2CBD               u941:
  4719  04BC                     	goto	l1196
  4720  04BC  2C97               u940:
  4721  04BD                     	goto	l1206
  4722  04BD  2CBF               	
  4723                           l376:	
  4724  04BE                     	goto	l1206
  4725  04BE  2CBF               	line	37
  4726                           	
  4727                           l370:	
  4728  04BF                     	line	38
  4729                           	
  4730                           l1206:	
  4731  04BF                     	movf	((___awdiv@sign)),w
  4732  04BF  0876               	btfsc	status,2
  4733  04C0  1903               	goto	u951
  4734  04C1  2CC3               	goto	u950
  4735  04C2  2CC4               u951:
  4736  04C3                     	goto	l1210
  4737  04C3  2CCA               u950:
  4738  04C4                     	line	39
  4739                           	
  4740                           l1208:	
  4741  04C4                     	comf	(___awdiv@quotient),f
  4742  04C4  09F7               	comf	(___awdiv@quotient+1),f
  4743  04C5  09F8               	incf	(___awdiv@quotient),f
  4744  04C6  0AF7               	skipnz
  4745  04C7  1903               	incf	(___awdiv@quotient+1),f
  4746  04C8  0AF8               	goto	l1210
  4747  04C9  2CCA               	
  4748                           l377:	
  4749  04CA                     	line	40
  4750                           	
  4751                           l1210:	
  4752  04CA                     	movf	(___awdiv@quotient+1),w
  4753  04CA  0878               	movwf	(?___awdiv+1)
  4754  04CB  00F1               	movf	(___awdiv@quotient),w
  4755  04CC  0877               	movwf	(?___awdiv)
  4756  04CD  00F0               	goto	l378
  4757  04CE  2CCF               	
  4758                           l1212:	
  4759  04CF                     	line	41
  4760                           	
  4761                           l378:	
  4762  04CF                     	return
  4763  04CF  0008               	opt stack 0
  4764                           GLOBAL	__end_of___awdiv
  4765                           	__end_of___awdiv:
  4766  04D0                     	signat	___awdiv,8314
  4767                           	global	_dht_read
  4768                           
  4769 ;; *************** function _dht_read *****************
  4770 ;; Defined at:
  4771 ;;		line 19 in file "dht.c"
  4772 ;; Parameters:    Size  Location     Type
  4773 ;;  ptr             1    wreg     PTR struct .
  4774 ;;		 -> sensor(4), 
  4775 ;; Auto vars:     Size  Location     Type
  4776 ;;  ptr             1    1[COMMON] PTR struct .
  4777 ;;		 -> sensor(4), 
  4778 ;; Return value:  Size  Location     Type
  4779 ;;                  1    wreg      void 
  4780 ;; Registers used:
  4781 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4782 ;; Tracked objects:
  4783 ;;		On entry : 0/0
  4784 ;;		On exit  : 0/0
  4785 ;;		Unchanged: 0/0
  4786 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4787 ;;      Params:         0       0       0       0       0
  4788 ;;      Locals:         1       0       0       0       0
  4789 ;;      Temps:          1       0       0       0       0
  4790 ;;      Totals:         2       0       0       0       0
  4791 ;;Total ram usage:        2 bytes
  4792 ;; Hardware stack levels used:    1
  4793 ;; This function calls:
  4794 ;;		Nothing
  4795 ;; This function is called by:
  4796 ;;		_main
  4797 ;; This function uses a non-reentrant model
  4798 ;;
  4799                           psect	text14,local,class=CODE,delta=2,merge=1,group=0
  4800                           	file	"dht.c"
  4801                           	line	19
  4802                           global __ptext14
  4803                           __ptext14:	;psect for function _dht_read
  4804  0274                     psect	text14
  4805                           	file	"dht.c"
  4806                           	line	19
  4807                           	global	__size_of_dht_read
  4808                           	__size_of_dht_read	equ	__end_of_dht_read-_dht_read
  4809  0010                     	
  4810                           _dht_read:	
  4811  0274                     ;incstack = 0
  4812                           	opt	stack 7
  4813                           ; Regs used in _dht_read: [wreg-fsr0h+status,2+status,0]
  4814                           ;dht_read@ptr stored from wreg
  4815                           	movwf	(dht_read@ptr)
  4816  0274  00F1               	line	21
  4817                           	
  4818                           l1380:	
  4819  0275                     ;dht.c: 19: void dht_read ( DHT_t * ptr );dht.c: 20: {;dht.c: 21:     ptr->dht.temperatu
                                  = 21;
  4820                           	movlw	low(015h)
  4821  0275  3015               	movwf	(??_dht_read+0)+0
  4822  0276  00F0               	movf	(dht_read@ptr),w
  4823  0277  0871               	addlw	03h
  4824  0278  3E03               	movwf	fsr0
  4825  0279  0084               	movf	(??_dht_read+0)+0,w
  4826  027A  0870               	bcf	status, 7	;select IRP bank0
  4827  027B  1383               	movwf	indf
  4828  027C  0080               	line	22
  4829                           	
  4830                           l1382:	
  4831  027D                     ;dht.c: 22:     ptr->dht.umida = 50;
  4832                           	movlw	low(032h)
  4833  027D  3032               	movwf	(??_dht_read+0)+0
  4834  027E  00F0               	incf	(dht_read@ptr),w
  4835  027F  0A71               	movwf	fsr0
  4836  0280  0084               	movf	(??_dht_read+0)+0,w
  4837  0281  0870               	movwf	indf
  4838  0282  0080               	line	23
  4839                           	
  4840                           l139:	
  4841  0283                     	return
  4842  0283  0008               	opt stack 0
  4843                           GLOBAL	__end_of_dht_read
  4844                           	__end_of_dht_read:
  4845  0284                     	signat	_dht_read,4217
  4846                           global	___latbits
  4847                           ___latbits	equ	2
  4848  0002                     	global	btemp
  4849                           	btemp set 07Eh
  4850  007E                     
  4851                           	DABS	1,126,2	;btemp
  4852                           	global	wtemp0
  4853                           	wtemp0 set btemp+0
  4854  007E                     	end


Data Sizes:
    Strings     20
    Constant    30
    Data        0
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      13
    BANK0            80     20      27
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    dht_read@ptr	PTR struct . size(1) Largest target is 4
		 -> sensor(BANK0[4]), 

    lcd_print@str	PTR const unsigned char  size(1) Largest target is 15
		 -> STR_2(CODE[15]), STR_1(CODE[5]), main@string(CODE[14]), 

    edit@ptr_edit	PTR int  size(1) Largest target is 2
		 -> main@num(BANK0[2]), 


Critical Paths under _main in COMMON

    _main->_edit
    _main->_lcd_num
    _lcd_print->_lcd_lincol
    _lcd_num->___awdiv
    _lcd_lincol->_lcd_instReg
    _lcd_init->_delay
    _lcd_init->_lcd_instReg
    _edit->___awdiv

Critical Paths under _main in BANK0

    _main->_edit

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0    7764
                                             12 BANK0      8     8      0
                              _delay
                           _dht_read
                               _edit
                           _lcd_init
                            _lcd_num
                          _lcd_print
                            _teclado
                       _teclado_init
 ---------------------------------------------------------------------------------
 (1) _teclado_init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _teclado                                             10    10      0     204
                                              0 COMMON    10    10      0
 ---------------------------------------------------------------------------------
 (1) _lcd_print                                            5     3      2     985
                                              6 COMMON     5     3      2
                        _lcd_dataReg
                         _lcd_lincol
 ---------------------------------------------------------------------------------
 (1) _lcd_num                                             12     8      4    3209
                                              9 COMMON     4     0      4
                                              0 BANK0      8     8      0
                            ___awdiv
                            ___awmod
                        _lcd_dataReg
                         _lcd_lincol
 ---------------------------------------------------------------------------------
 (2) _lcd_lincol                                           3     2      1     372
                                              3 COMMON     3     2      1
                        _lcd_instReg
 ---------------------------------------------------------------------------------
 (2) _lcd_dataReg                                          3     3      0      44
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     448
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0     503
                              _delay
                        _lcd_instReg
 ---------------------------------------------------------------------------------
 (3) _lcd_instReg                                          3     3      0     176
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _delay                                                3     1      2     327
                                              0 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (1) _edit                                                16     9      7    2310
                                              9 COMMON     4     4      0
                                              0 BANK0     12     5      7
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     244
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4    1212
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _dht_read                                             2     2      0      77
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _delay
   _dht_read
   _edit
     ___awdiv
     ___wmul
   _lcd_init
     _delay
     _lcd_instReg
   _lcd_num
     ___awdiv
     ___awmod
     _lcd_dataReg
     _lcd_lincol
       _lcd_instReg
   _lcd_print
     _lcd_dataReg
     _lcd_lincol
       _lcd_instReg
   _teclado
   _teclado_init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      D       D       1       92.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      28       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     14      1B       5       33.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      28      12        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Fri Apr 01 07:54:17 2022

                      l5 02B7                        l6 02A9                        l7 02BE  
                      l8 02BE                        pc 0002              __CFG_CP$OFF 0000  
           lcd_dataReg@d 0072                       l20 0619                       l21 061E  
                     l15 061A                       l16 05BE                       l17 05BD  
                     l41 0548                       l18 05FE                       l42 0557  
                     l34 04FF                       l19 05FD                       l43 055A  
                     l36 04F5                       l52 038E                       l60 0319  
                     l37 0504                       l61 0319                       l38 052E  
                     l46 034F                       l70 0692                       l39 0552  
                     l71 0689                       l64 0636                       l49 02A7  
                     l73 06AD                       l65 067A                       l74 06AE  
                     l66 064B                       l58 030C                       l75 06BC  
                     l67 0665                       l59 02F7                       l76 06BC  
                     l68 0666                       l77 0708                       l69 0688  
                     l78 0708             ___awdiv@sign 0076                       fsr 0004  
    ___wmul@multiplicand 0072                      l110 07CA                      l111 07EF  
                    l103 0719                      l112 07F0                      l104 07D9  
                    l113 07F0                      l105 0792                      l106 07AA  
                    l131 03FC                      l107 07EE                      l132 045C  
                    l108 07B1                      l133 0413                      l109 07C8  
                    l134 0451                      l126 0294                      l135 0446  
                    l224 02C2                      l136 045E                      l225 02CC  
                    l226 02E1                      l139 0283                      l227 02E6  
                    l370 04BF                      l371 0491                      l372 0485  
                    l373 0496                      l381 039C                      l374 0497  
                    l390 03EC                      l382 03A6                      l375 04B0  
                    l391 03F1                      l383 03E1                      l376 04BE  
                    l368 046C                      l384 03BB                      l377 04CA  
                    l369 047A                      l385 03AF                      l378 04CF  
                    l386 03C0                      l387 03C1                      l388 03D2  
                    l389 03E0             __CFG_CPD$OFF 0000                      u700 04F4  
                    u701 04F3                      u710 0510                      u711 050F  
                    u900 0495                      u820 02C6                      u901 0494  
                    u821 02C5                      u725 0514                      u805 033E  
                    u750 0541                      u751 0540                      u735 051C  
                    u815 0299                      u920 04A8                      u760 0547  
                    u921 04A7                      u761 0546                      u745 0532  
                    u850 02E0                      u770 02BD                      u690 04EE  
                    u915 0498                      u851 02DF                      u835 02CD  
                    u771 02BC                      u691 04ED                      u675 04D7  
                    u940 04BD                      u860 0464                      u941 04BC  
                    u925 04A4                      u861 0463                      u845 02D4  
                    u685 04DF                      u950 04C4                      u870 0470  
                    u951 04C3                      u935 04B1                      u871 046F  
                    u880 0482                      u960 0394                      u881 0481  
                    u961 0393                      u785 0321                      u970 03A0  
                    u971 039F                      u795 0329                      u980 03AC  
                    u981 03AB                      u895 0486                      u995 03B0  
                    fsr0 0004                      indf 0000             ___awmod@sign 0076  
           __CFG_FOSC$HS 0000             __CFG_LVP$OFF 0000              lcd_num@size 0024  
                   l1100 0504                     l1110 0526                     l1102 0507  
                   l1200 04AE                     l1120 053C                     l1112 052A  
                   l1104 0510                     l1210 04CA                     l1202 04B0  
                   l1130 02A8                     l1122 0541                     l1106 0511  
                   l1114 052E                     l1212 04CF                     l1204 04B7  
                   l1132 02A9                     l1124 0548                     l1116 052F  
                   l1108 0525                     l1220 0399                     l1140 0332  
                   l1300 0303                     l1206 04BF                     l1134 02B7  
                   l1126 0552                     l1118 053B                     l1230 03AF  
                   l1222 039C                     l1214 038F                     l1150 0347  
                   l1142 0333                     l1310 0630                     l1302 0307  
                   l1208 04C4                     l1160 02C6                     l1128 0557  
                   l1240 03D2                     l1232 03B6                     l1224 03A0  
                   l1216 0390                     l1152 034C                     l1144 0337  
                   l1136 031B                     l1320 0660                     l1312 0636  
                   l1304 030C                     l1400 075D                     l1170 045F  
                   l1162 02D3                     l1090 04D4                     l1250 03F1  
                   l1242 03D9                     l1234 03BB                     l1226 03A6  
                   l1218 0394                     l1146 033A                     l1138 031E  
                   l1154 0296                     l1322 0666                     l1330 0692  
                   l1314 0640                     l1306 0622                     l1410 07AA  
                   l1402 0763                     l1180 0470                     l1172 0460  
                   l1164 02DA                     l1156 02BF                     l1260 0574  
                   l1252 055E                     l1092 04E8                     l1236 03C1  
                   l1228 03AC                     l1244 03E1                     l1148 033B  
                   l1332 06A6                     l1324 067A                     l1316 0646  
                   l1308 062B                     l1340 0284                     l1420 07CA  
                   l1412 07B1                     l1404 077A                     l1190 0485  
                   l1182 0475                     l1174 0464                     l1166 02E1  
                   l1158 02C2                     l1270 05E1                     l1262 0598  
                   l1254 0563                     l1094 04EE                     l1246 03E6  
                   l1238 03CB                     l1334 06AE                     l1326 0689  
                   l1318 064B                     l1350 03F2                     l1342 0288  
                   l1422 07D3                     l1414 07B8                     l1406 0792  
                   l1192 048C                     l1184 047A                     l1176 0469  
                   l1168 02E6                     l1272 05FE                     l1264 05B4  
                   l1256 0568                     l1096 04F5                     l1088 04D1  
                   l1280 0359                     l1248 03EC                     l1336 06B5  
                   l1328 068F                     l1360 040B                     l1352 03F4  
                   l1344 028B                     l1424 07D8                     l1416 07C3  
                   l1408 079B                     l1194 0491                     l1186 047C  
                   l1178 046C                     l1274 0604                     l1258 056E  
                   l1266 05BE                     l1098 04FF                     l1290 0360  
                   l1282 035C                     l1338 06FA                     l1370 044A  
                   l1362 0412                     l1354 03FB                     l1346 028E  
                   l1418 07C8                     l1426 07D9                     l1380 0275  
                   l1196 0497                     l1188 0482                     l1268 05C4  
                   l1276 061A                     l1292 036A                     l1284 035D  
                   l1372 0451                     l1364 0413                     l1356 03FC  
                   l1348 0290                     l1382 027D                     l1198 04A8  
                   l1286 035E                     l1278 0350                     l1294 02E8  
                   l1374 0455                     l1366 042F                     l1358 040A  
                   l1390 0713                     l1288 035F                     l1296 02EC  
                   l1368 0446                     l1376 045C                     l1464 07E3  
                   l1392 0719                     l1298 02F7                     l1378 045E  
                   l1394 0723                     l1386 0709                     l1396 072E  
                   l1388 070E                     l1398 0749                     STR_1 0036  
                   STR_2 0027                     u1000 03BF                     u1001 03BE  
                   u1010 03CB                     u1011 03CA                     u1100 05C4  
                   u1101 05C3                     u1110 05E1                     u1030 03DF  
                   u1111 05E0                     u1031 03DE                     u1015 03C7  
                   u1120 0604                     u1040 03E6                     u1200 06AC  
                   u1121 0603                     u1041 03E5                     u1025 03D3  
                   u1201 06AB                     u1050 0563                     u1210 06B5  
                   u1130 0318                     u1115 05DD                     u1051 0562  
                   u1211 06B4                     u1131 0317                     u1060 0568  
                   u1220 0707                     u1140 0627                     u1300 045B  
                   u1061 0567                     u1221 0706                     u1141 0625  
                   u1301 045A                     u1070 056E                     u1150 0628  
                   u1230 03FA                     u1310 079B                     u1071 056D  
                   u1231 03F9                     u1311 079A                     u1080 0574  
                   u1160 0630                     u1320 07B8                     u1081 0573  
                   u1225 0703                     u1161 062F                     u1321 07B7  
                   u1090 05B4                     u1170 0660                     u1250 0411  
                   u1091 05B3                     u1171 065F                     u1251 0410  
                   u1180 0687                     u1244 0402                     u1093 05B0  
                   u1181 0686                     u1245 0400                     u1190 06A6  
                   u1270 042F                     u1407 02AB                     u1191 06A5  
                   u1271 042E                     u1264 0421                     u1337 0335  
                   u1185 0683                     u1265 041E                     u1290 0450  
                   u1347 034A                     u1195 06A2                     u1291 044F  
                   u1357 04F9                     u1285 0432                     u1367 0501  
                   u1377 0528                     u1387 054C                     u1397 0554  
                   _WPUB 0095             __CFG_WRT$OFF 0000                     _edit 055B  
                   _main 0709                     btemp 007E                     start 0000  
          __CFG_IESO$OFF 0000             lcd_instReg@i 0072             lcd_num@sinal 0025  
                  ?_edit 0020                    ?_main 0070          __end_of___awdiv 04D0  
          __CFG_WDTE$OFF 0000          __end_of___awmod 03F2          ___awdiv@divisor 0070  
        ___awdiv@counter 0075                    _PORTB 0006                    _PORTD 0008  
                  _TRISB 0086    __end_of_tecladoMatriz 0019             lcd_print@col 0076  
           lcd_print@lin 007A           __CFG_FCMEN$OFF 0000             lcd_print@pos 0079  
           lcd_print@str 0077          __end_of_lcd_num 0709                    _delay 02A8  
        __end_of_teclado 045F           __CFG_BOREN$OFF 0000                    pclath 000A  
                  status 0003                    wtemp0 007E            lcd_lincol@col 0073  
          lcd_lincol@lin 0075           __CFG_MCLRE$OFF 0000          __initialization 07F3  
           __end_of_edit 061F             __end_of_main 07F3                   ??_edit 0079  
                 ??_main 002C                   ?_delay 0070         ___awdiv@dividend 0072  
                 _ANSELH 0189           __CFG_PWRTE$OFF 0000     __size_of_lcd_dataReg 0036  
       __end_of_dht_read 0284         __end_of_lcd_init 038F                   ___wmul 02BF  
              ??___awdiv 0074                ??___awmod 0074     __size_of_lcd_instReg 008B  
                 delay@t 0070         ___awdiv@quotient 0077          ___awmod@divisor 0070  
                 _sensor 0037          ___awmod@counter 0075                ??_lcd_num 0020  
              ??_teclado 0070  __end_of__initialization 07FC           __pcstackCOMMON 0070  
          __end_of_delay 02BF           _OPTION_REGbits 0081                  ??_delay 0072  
     __size_of_lcd_print 0033               __pbssBANK0 0034            ?_teclado_init 0070  
             __pmaintext 0709                  ?___wmul 0070               _lcd_lincol 0295  
              ?_dht_read 0070                ?_lcd_init 0070               __stringtab 0003  
         ??_teclado_init 0070        __end_of_lcd_print 031A                  ___awdiv 045F  
                ___awmod 038F          __size_of___wmul 0028                  __ptext1 0284  
                __ptext2 03F2                  __ptext3 02E7                  __ptext4 061F  
                __ptext5 0295                  __ptext6 031A                  __ptext7 038F  
                __ptext8 0350                  __ptext9 04D0                  _lcd_num 061F  
             edit@delete 0021                  edit@aux 0027                  edit@max 0025  
                edit@min 0023         ___awmod@dividend 0072                  _teclado 03F2  
             ??_dht_read 0070                  main@num 0032               ??_lcd_init 0073  
   end_of_initialization 07FC                _PORTDbits 0008              ?_lcd_lincol 0073  
              _TRISDbits 0088            ??_lcd_dataReg 0070               lcd_num@col 0079  
             lcd_num@div 0026               lcd_num@lin 0023               lcd_num@tam 007C  
             lcd_num@num 007A            ??_lcd_instReg 0070               main@string 0019  
         __end_of___wmul 02E7     __end_of_teclado_init 0295      start_initialization 07F3  
          _tecladoMatriz 0009      __end_of_lcd_dataReg 0350      __size_of_lcd_lincol 0013  
               ??___wmul 0074      __end_of_lcd_instReg 055B                ___latbits 0002  
          __pcstackBANK0 0020        __size_of_dht_read 0010        __size_of_lcd_init 003F  
             teclado@aux 0077                 ?___awdiv 0070                 ?___awmod 0070  
              __pstrings 0003                _lcd_print 02E7                 ?_lcd_num 0079  
               ?_teclado 0070           __size_of_delay 0017                edit@menos 0022  
              edit@tecla 0020              _lcd_dataReg 031A           ___wmul@product 0074  
           edit@ptr_edit 002B              _lcd_instReg 04D0    __size_of_teclado_init 0011  
             ?_lcd_print 0076              __stringbase 0008        ___wmul@multiplier 0070  
              main@fases 0031                main@tecla 0030             ??_lcd_lincol 0074  
           _teclado_init 0284       __end_of_lcd_lincol 02A8         __size_of___awdiv 0071  
       __size_of___awmod 0063       __end_of__stringtab 0009         __size_of_lcd_num 00EA  
       __size_of_teclado 006D                 __ptext10 02A8                 __ptext11 055B  
               __ptext12 02BF                 __ptext13 045F                 __ptext14 0274  
               _dht_read 0274        __CFG_BOR4V$BOR40V 0000                 _lcd_init 0350  
          __size_of_edit 00C4            __size_of_main 00EA                 _teclaAnt 0036  
            ??_lcd_print 0078                 teclado@c 0079                 teclado@l 0078  
           _num_original 0034                stringcode 0003                 stringdir 0003  
               stringtab 0003       __end_ofmain@string 0027              dht_read@ptr 0071  
           ?_lcd_dataReg 0070             ?_lcd_instReg 0070  
